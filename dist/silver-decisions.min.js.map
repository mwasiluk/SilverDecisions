{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/assertThisInitialized.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/getPrototypeOf.js","node_modules/@babel/runtime/helpers/inherits.js","node_modules/@babel/runtime/helpers/interopRequireDefault.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","node_modules/@babel/runtime/helpers/setPrototypeOf.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/helpers/typeof.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/d/auto-bind.js","node_modules/d/index.js","node_modules/es5-ext/array/#/clear.js","node_modules/es5-ext/array/#/e-index-of.js","node_modules/es5-ext/array/from/index.js","node_modules/es5-ext/array/from/is-implemented.js","node_modules/es5-ext/array/from/shim.js","node_modules/es5-ext/function/is-arguments.js","node_modules/es5-ext/function/is-function.js","node_modules/es5-ext/function/noop.js","node_modules/es5-ext/global.js","node_modules/es5-ext/math/sign/index.js","node_modules/es5-ext/math/sign/is-implemented.js","node_modules/es5-ext/math/sign/shim.js","node_modules/es5-ext/node_modules/es6-symbol/index.js","node_modules/es5-ext/node_modules/es6-symbol/is-implemented.js","node_modules/es5-ext/node_modules/es6-symbol/is-symbol.js","node_modules/es5-ext/node_modules/es6-symbol/lib/private/generate-name.js","node_modules/es5-ext/node_modules/es6-symbol/lib/private/setup/standard-symbols.js","node_modules/es5-ext/node_modules/es6-symbol/lib/private/setup/symbol-registry.js","node_modules/es5-ext/node_modules/es6-symbol/polyfill.js","node_modules/es5-ext/node_modules/es6-symbol/validate-symbol.js","node_modules/es5-ext/number/is-nan/index.js","node_modules/es5-ext/number/is-nan/is-implemented.js","node_modules/es5-ext/number/is-nan/shim.js","node_modules/es5-ext/number/to-integer.js","node_modules/es5-ext/number/to-pos-integer.js","node_modules/es5-ext/object/_iterate.js","node_modules/es5-ext/object/assign/index.js","node_modules/es5-ext/object/assign/is-implemented.js","node_modules/es5-ext/object/assign/shim.js","node_modules/es5-ext/object/copy.js","node_modules/es5-ext/object/create.js","node_modules/es5-ext/object/for-each.js","node_modules/es5-ext/object/is-object.js","node_modules/es5-ext/object/is-value.js","node_modules/es5-ext/object/keys/index.js","node_modules/es5-ext/object/keys/is-implemented.js","node_modules/es5-ext/object/keys/shim.js","node_modules/es5-ext/object/map.js","node_modules/es5-ext/object/normalize-options.js","node_modules/es5-ext/object/set-prototype-of/index.js","node_modules/es5-ext/object/set-prototype-of/is-implemented.js","node_modules/es5-ext/object/set-prototype-of/shim.js","node_modules/es5-ext/object/valid-callable.js","node_modules/es5-ext/object/valid-value.js","node_modules/es5-ext/string/#/contains/index.js","node_modules/es5-ext/string/#/contains/is-implemented.js","node_modules/es5-ext/string/#/contains/shim.js","node_modules/es5-ext/string/is-string.js","node_modules/es6-iterator/array.js","node_modules/es6-iterator/for-of.js","node_modules/es6-iterator/get.js","node_modules/es6-iterator/index.js","node_modules/es6-iterator/is-iterable.js","node_modules/es6-iterator/string.js","node_modules/es6-iterator/valid-iterable.js","node_modules/es6-set/implement.js","node_modules/es6-set/is-implemented.js","node_modules/es6-set/is-native-implemented.js","node_modules/es6-set/lib/iterator.js","node_modules/es6-set/polyfill.js","node_modules/es6-symbol/index.js","node_modules/es6-symbol/is-implemented.js","node_modules/es6-symbol/is-symbol.js","node_modules/es6-symbol/polyfill.js","node_modules/es6-symbol/validate-symbol.js","node_modules/event-emitter/index.js","node_modules/ext/global-this/implementation.js","node_modules/ext/global-this/index.js","node_modules/ext/global-this/is-implemented.js","node_modules/jquery-ui/ui/data.js","node_modules/sd-tree-designer/index.js","node_modules/sd-tree-designer/src/app-utils.js","node_modules/sd-tree-designer/src/context-menu/context-menu.js","node_modules/sd-tree-designer/src/context-menu/edge-context-menu.js","node_modules/sd-tree-designer/src/context-menu/main-context-menu.js","node_modules/sd-tree-designer/src/context-menu/node-context-menu.js","node_modules/sd-tree-designer/src/context-menu/text-context-menu.js","node_modules/sd-tree-designer/src/d3-extensions.js","node_modules/sd-tree-designer/src/d3.js","node_modules/sd-tree-designer/src/i18n/de.json","node_modules/sd-tree-designer/src/i18n/en.json","node_modules/sd-tree-designer/src/i18n/fr.json","node_modules/sd-tree-designer/src/i18n/i18n.js","node_modules/sd-tree-designer/src/i18n/it.json","node_modules/sd-tree-designer/src/i18n/pl.json","node_modules/sd-tree-designer/src/i18n/pt-br.json","node_modules/sd-tree-designer/src/index.js","node_modules/sd-tree-designer/src/layout.js","node_modules/sd-tree-designer/src/node-drag-handler.js","node_modules/sd-tree-designer/src/symbols/circle.js","node_modules/sd-tree-designer/src/symbols/triangle.js","node_modules/sd-tree-designer/src/templates.js","node_modules/sd-tree-designer/src/templates/growl_message.html","node_modules/sd-tree-designer/src/text-drag-handler.js","node_modules/sd-tree-designer/src/tooltip.js","node_modules/sd-tree-designer/src/tree-designer.js","node_modules/type/function/is.js","node_modules/type/lib/resolve-exception.js","node_modules/type/lib/safe-to-string.js","node_modules/type/lib/to-short-string.js","node_modules/type/object/is.js","node_modules/type/plain-function/ensure.js","node_modules/type/plain-function/is.js","node_modules/type/prototype/is.js","node_modules/type/string/coerce.js","node_modules/type/value/ensure.js","node_modules/type/value/is.js","package.json","src/app-utils.js","src/app.js","src/autocomplete.js","src/d3.js","src/dialogs/about-dialog.js","src/dialogs/definitions-dialog.js","src/dialogs/dialog.js","src/dialogs/operation-dialog.js","src/dialogs/sensitivity-analysis-dialog.js","src/dialogs/settings-dialog.js","src/exporter.js","src/file-loader.js","src/form/input-field.js","src/form/path-value-accessor.js","src/i18n/de.json","src/i18n/en.json","src/i18n/fr.json","src/i18n/i18n.js","src/i18n/it.json","src/i18n/pl.json","src/i18n/pt-br.json","src/index.js","src/jobs/job-parameters-builder.js","src/jobs/job-result-table.js","src/jobs/probabilistic-sensitivity-analysis-result-table.js","src/jobs/sensitivity-analysis-result-table.js","src/jobs/spider-plot.js","src/jobs/tornado-diagram-plot.js","src/league-table/league-table-dialog.js","src/league-table/league-table-plot.js","src/league-table/league-table.js","src/loading-indicator.js","src/pivot-table.js","src/sidebar.js","src/templates.js","src/templates/about/de.html","src/templates/about/en.html","src/templates/about/fr.html","src/templates/about/it.html","src/templates/about/pl.html","src/templates/about_dialog.html","src/templates/definitions_dialog.html","src/templates/evaluated_variables.html","src/templates/fullscreen_popup.html","src/templates/help.html","src/templates/input_group.html","src/templates/jobs/job_parameter.html","src/templates/jobs/job_parameters_builder.html","src/templates/league_table_dialog.html","src/templates/loading_indicator.html","src/templates/main.html","src/templates/operation_dialog.html","src/templates/select_input_group.html","src/templates/sensitivity_analysis_dialog.html","src/templates/settings_dialog.html","src/templates/settings_dialog_form_group.html","src/templates/sidebar/definitions.html","src/templates/sidebar/diagram_details_box.html","src/templates/sidebar/layout_options.html","src/templates/sidebar/multiple_criteria.html","src/templates/sidebar/object_properties.html","src/templates/sidebar/sidebar.html","src/templates/toolbar.html","src/templates/warning_message.html","src/texts-interpolator.js","src/toolbar.js","src/validation/number-input-validator.js","src/validation/payoff-input-validator.js","src/validation/probability-input-validator.js","src/validation/required-input-validator.js","tmp/build-config.js"],"names":["f","g","exports","module","define","amd","window","global","self","this","SilverDecisions","App","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","arr","len","arr2","Array","__esModule","arrayLikeToArray","isArray","ReferenceError","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","value","obj","default","iter","Symbol","iterator","from","_typeof","assertThisInitialized","_setPrototypeOf","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","minLen","toString","slice","name","test","isValue","ensureValue","ensurePlainFunction","copy","normalizeOptions","map","bind","Function","hasOwnProperty","desc","options","dgs","get","overwriteDefinition","resolveContext","arguments","isPlainFunction","assign","normalizeOpts","contains","dscr","w","gs","set","undefined","numberIsNaN","toPosInt","indexOf","objHasOwnProperty","abs","Math","floor","searchElement","val","apply","fromIndex","isNaN","result","Boolean","iteratorSymbol","isArguments","isFunction","callable","validValue","isString","arrayLike","Context","j","getIterator","mapFn","thisArg","next","done","charCodeAt","objToString","id","isFunctionStringTag","RegExp","naiveFallback","globalThis","error","__global__","sign","Number","validTypes","object","symbol","_Symbol","String","toPrimitive","toStringTag","d","objPrototype","created","ie11BugWorkaround","postfix","NativeSymbol","SymbolPolyfill","defineProperties","hasInstance","isConcatSpreadable","match","replace","search","species","split","unscopables","validateSymbol","registry","for","keyFor","HiddenSymbol","isNativeSafe","generateName","setupStandardSymbols","setupSymbolRegistry","ignore","description","_Symbol2","__description__","__name__","valueOf","isSymbol","NaN","isFinite","toInteger","max","keys","objPropertyIsEnumerable","propertyIsEnumerable","method","defVal","cb","list","compareFn","sort","index","foo","bar","trzy","dest","src","forEach","aFrom","propertyNames","propertyName","ensure","shim","nullObject","polyProps","level","getOwnPropertyNames","function","_undefined","targetObj","opts1","process","plainObject","status","isObject","objIsPrototypeOf","isPrototypeOf","nullDesc","validate","tmpObj1","tmpObj2","getOwnPropertyDescriptor","fn","isNullBase","nullPolyfill","str","searchString","Iterator","ArrayIterator","kind","_resolve","__kind__","__list__","some","iterable","mode","doBreak","broken","char","StringIterator","_Iterator","clear","autoBind","context","__context__","__nextIndex__","on","_onAdd","_onDelete","_onClear","_next","__redo__","shift","_unBind","_createResult","off","redo","push","splice","__length__","isIterable","Set","size","add","delete","entries","has","values","toStringTagSymbol","SetIterator","__setData__","SetPoly","NativeSet","eIndexOf","ee","forOf","isNative","emit","getValues","x","globalSymbols","s","type","listener","data","__ee__","_once2","_once","__eeOnceListener__","listeners","candidate","l","args","methods","once","descriptors","base","$","extend","expr","pseudos","createPseudo","dataName","elem","factory","jQuery","_index","d3","_interopRequireWildcard","_templates","_i18n","_sdUtils","AppUtils","textD3Obj","textString","width","textObj","node","textContent","getComputedTextLength","getSubStringLength","substring","tooltip","placeTextWithEllipsis","event","transition","duration","style","html","pageX","pageY","element","getComputedStyle","getPropertyValue","transform","document","createElementNS","setAttributeNS","matrix","baseVal","consolidate","pathNode","point","best","bestLength","scan","scanDistance","before","after","afterLength","beforeDistance","afterDistance","pathLength","getTotalLength","precision","bestDistance","Infinity","scanLength","distance2","getPointAtLength","beforeLength","y","distance","sqrt","dx","dy","message","position","time","Templates","select","selectOrAppend","append","setTimeout","remove","tag","attribs","parent","el","createElement","deepExtend","appendChild","parentNode","removeChild","text","createTextNode","div","innerHTML","evt","createEvent","initEvent","dispatchEvent","fireEvent","CustomEvent","detail","initCustomEvent","Utils","i18n","selection","classed","display","offsetParent","url","callback","xhr","XMLHttpRequest","open","responseType","onload","response","send","sanitizeHeight","height","container","parseInt","sanitizeWidth","availableHeight","margin","top","bottom","availableWidth","left","right","ContextMenu","menu","opts","_classCallCheck2","openCallback","onOpen","closeCallback","onClose","selectAll","enter","attr","elm","preventDefault","stopPropagation","ret","divider","disabled","action","title","console","_contextMenu","EdgeContextMenu","treeDesigner","_this","_super","injectDecisionNode","injectChanceNode","_sdModel","MainContextMenu","mousePosition","newNode","domain","DecisionNode","addNode","ChanceNode","newText","Text","addText","pasteToNewLocation","copiedNodes","selectAllNodes","clearSelection","Point","pointer","svg","move","getMainGroupTranslation","NodeContextMenu","operationsForObject","copyMenuItem","selectNode","isNodeSelected","copySelectedNodes","cutMenuItem","cutSelectedNodes","pasteMenuItem","pasteToNode","folded","deleteMenuItem","removeSelectedNodes","TerminalNode","$TYPE","addNodeConversionOptions","addDecisionNode","addChanceNode","addTerminalNode","selectSubTree","foldSubtree","operations","op","performOperation","canPerform","conversionOptions","getNodeConversionOptions","allAllowedTypes","childEdges","$parent","filter","getNodeConversionOption","typeToConvertTo","convertNode","TextContextMenu","selectText","removeSelectedTexts","insertSelector","selector","D3Extensions","appendSelector","selectOrInsert","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","empty","_d3Dispatch","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","_d3Array","_d3Hierarchy","_d3TimeFormat","contextMenu","main","paste","cut","convert","decision","chance","terminal","selectSubtree","fold","unfold","flipSubtree","payoffsTransformation","edge","validation","incompletePath","probabilityDoNotSumUpTo1","invalidProbability","invalidPayoff","growl","brushDisabled","brushEnabled","payoff","named","aggregatedPayoff","probabilityToEnter","probability","_i18next","_interopRequireDefault","en","pl","it","de","fr","pt_br","lng","language","$instance","createInstance","fallbackLng","resources","translation","pt-BR","err","opt","_d3Extensions","_exportNames","_treeDesigner","_appUtils","_tooltip","_d","_circle","_triangle","Layout","config","nodeTypeToSymbol","symbolSquare","onAutoLayoutChanged","nodeTypeOrder","treeMargin","targetSymbolSize","nodeSeparation","b","nodeSymbolSize","childNode","location","isManualLayout","autoLayout","moveNodeToEmptyPlace","redraw","MANUAL_LAYOUT_NAME","getNodeMinX","getNodeMinY","gridWidth","$linePoints","redrawIfChanged","nodesSortedByX","nodes","colidingNode","stepX","nodeSize","stepY","changed","newLocation","find","findCollidingNode","moveTo","_fireOnAutoLayoutChangedCallbacks","path","nodeSymbol","each","box","getBBox","min","setHangingPosition","fontSize","getFontSize","items","displayValue","aggregatedPayoffs","line","dX","slantStartXOffset","slantWidth","edgeSlantWidthMax","point1","point2","point3","point4","datum","previousSibling","childNodes","minX","bb","getTextD3Selection","minY","MAX_SAFE_INTEGER","getMinMarginBetweenNodes","$hidden","withoutStateSaving","saveState","onUndo","setGridWidth","onRedo","update","gridHeight","setGridHeight","setNodeSize","fitNodesInPlottingRegion","getRoots","setEdgeSlantWidthMax","newLayout","currentLayout","prevTreeMaxY","root","hierarchy","layout","cluster","tree","separation","maxY","pivot","limit","limitNodePositioning","maxX","backupNodeLocation","getNodeMaxX","revertX","$location","updateNodePosition","texts","limitTextPositioning","getTextMinX","getTextMaxX","getTextMinY","updateTextPosition","isHidden","NodeDragHandler","stateSnapshot","drag","subject","getTranslation","dragStarted","onDrag","dragEnded","ignoreDrag","ignoredDrag","createStateSnapshot","hide","selectedNodes","getSelectedNodes","prevDragEvent","dragEventCount","draggedNode","saveStateFromSnapshot","moveNodes","redrawEdges","updatePlottingRegionSize","pi","PI","draw","dist","bezierCurveTo","lineTo","closePath","templateName","variables","compiled","template","imports","include","v","styleProp","styleName","variableName","clazz","treeDesignerSelector","treeDesignerStyles","styleRule","nodeSelector","edgeSelector","TextDragHandler","draggedText","moveTexts","Tooltip","xOffset","yOffset","getContainer","updatePosition","htmlOrFn","show","_mainContextMenu","_nodeContextMenu","_layout","_nodeDragHandler","_textDragHandler","_textContextMenu","_edgeContextMenu","Hammer","TreeDesignerConfig","custom","scale","fontFamily","fontWeight","fontStyle","strokeWidth","optimal","stroke","label","color","negativeColor","fill","selected","readOnly","disableAnimations","forceFullEdgeRedraw","hideLabels","hidePayoffs","hideProbabilities","raw","preserveFoldingOfNestedSubtrees","payoffNumberFormatter","probabilityNumberFormatter","onNodeSelected","onEdgeSelected","onTextSelected","onSelectionCleared","Promise","resolve","payoffNames","maxPayoffsToDisplay","TreeDesigner","dataModel","setConfig","initContainer","init","updateCustomStyles","initSvg","initLayout","initI18n","initBrush","initEdgeMarkers","initMainContextMenu","initNodeContextMenu","initEdgeContextMenu","initNodeDragHandler","initTextDragHandler","initTextContextMenu","nodeDragHandler","textDragHandler","withTransitions","redrawDiagramTitle","redrawDiagramDescription","updateScale","updateMargin","transitionPrev","redrawNodes","redrawFloatingTexts","updateValidationMessages","computeAvailableSpace","wrapperGroup","mainGroup","mc","Manager","touchAction","Press","pointerType","Pinch","disableBrush","waitForFinalEvent","enableBrush","group","topMargin","diagramTitle","diagramDescription","getTitleGroupHeight","clone","setMargin","setScale","containerIdOrElem","trim","startsWith","_parents","svgWidth","svgHeight","mainGroupBox","newSvgWidth","newSvgHeight","updateBrushExtent","exit","nodesEnter","labelEnter","payoffEnter","indicatorEnter","aggregatedPayoffEnter","probabilityToEnterEnter","nodesMerge","merge","isOptimal","nodesMergeT","drawNodeSymbol","nodeLabelPosition","labelMergeT","updateTextLines","payoffTspans","item","payoffTspansM","attachPayoffTooltip","payoffT","nodePayoffPosition","aggregatedPayoffTspans","aggregatedPayoffTspansM","aggregatedPayoffT","nodeAggregatedPayoffPosition","attach","probabilityToEnterT","nodeProbabilityToEnterPosition","indicator","nodeIndicatorPosition","nodeContextMenu","cancelDrag","button","nodeUnfoldButtonPosition","payoffFiledName","number","lines","reverse","tspans","edgesContainer","edges","edgesEnter","probabilityEnter","edgesMerge","optimalClassName","edgesMergeT","edgeLineD","selectEdge","edgeLabelPosition","_","displayPayoff","payoffTextT","edgePayoffPosition","displayProbability","probabilityMerge","probabilityMergeT","edgeProbabilityPosition","raise","edgeContextMenu","POINTER_TOUCH","textsEnter","textsMerge","textsMergeT","$displayValue","replaceUrls","escapeHtml","textContextMenu","_this2","validationResults","validationResult","isValid","objectIdToError","errors","nodeSelection","getNodeD3SelectionById","tooltipHtml","getValidationMessage","initArrowMarker","brush","extent","brushContainer","hoveredEdge","mainGroupTranslation","offset","m","mgt","closest","cp","closestPoint","invert","mainContextMenu","getNewChildLocation","injectNode","getInjectedNodeLocation","removeNode","removeNodes","selectedTexts","getSelectedTexts","removeTexts","notClearPrevSelection","cloneSubtree","copyNode","selectedRoots","findSubtreeRoots","copyNodes","_this3","nodesToAttach","_this4","toAttach","attached","attachSubtree","getAllDescendantNodes","_this5","then","preserveNestedFolding","getAllDescendantEdges","_this6","updateVisibility","getNodeD3Selection","getTextD3SelectionById","_this7","visibleOnly","selectedVisible","allSelected","_toConsumableArray2","descendants","_this8","clearSelectionBeforeSelect","skipCallback","_this9","titleValue","titleContainer","marginTop","descriptionValue","withMargins","h","isPrototype","resolveMessage","toShortString","stringCoerce","defaultMessage","inputOptions","isOptional","errorMessage","error2","safeToString","reNewLine","string","possibleTypes","resolveException","is","classRe","functionToString","objectToString","valueToString","version","scripts","repository","author","license","bugs","homepage","browserslist","browserify","presets","plugins","spec","globals","regenerator","helpers","devDependencies","@babel/core","@babel/plugin-proposal-object-rest-spread","@babel/plugin-transform-runtime","@babel/preset-env","babel-plugin-transform-builtin-extend","babel-plugin-transform-class-properties","babel-plugin-transform-es2015-spread","babel-plugin-transform-object-assign","babelify","browser-sync","browserify-shim","chalk","del","es6-set","gulp","gulp-clean-css","gulp-concat","gulp-filelist","gulp-html2js","gulp-load-plugins","gulp-plumber","gulp-rename","gulp-replace","gulp-sass","gulp-sourcemaps","gulp-strip-debug","gulp-template","gulp-uglify","gulp-util","jasmine","jasmine-jquery","karma","karma-browserify","karma-chrome-launcher","karma-intl-shim","karma-jasmine","merge-stream","odc-d3","run-sequence","sass","stringify","svg2pdf.js","vinyl-buffer","vinyl-source-stream","yargs","dependencies","autosize","blueimp-canvas-to-blob","d3-array","d3-brush","d3-dispatch","d3-drag","d3-scale","d3-scale-chromatic","d3-selection","d3-shape","d3-time-format","file-saver","hammerjs","i18next","jquery","jquery-ui","pivottable","sd-computations","sd-model","sd-tree-designer","sd-utils","_sdTreeDesigner","getBoundingClientRect","form","mergeDeep","enctype","body","submit","removeElement","popup","model","_sidebar","_toolbar","_settingsDialog","_aboutDialog","_exporter","_definitionsDialog","_sdComputations","_sensitivityAnalysisDialog","_loadingIndicator","_leagueTableDialog","_operationDialog","_textsInterpolator","AppConfig","_classCallCheck","new","save","exportToPng","exportToSvg","exportToPdf","serverUrl","pdf","png","locales","payoff1","currency","currencyDisplay","minimumFractionDigits","maximumFractionDigits","useGrouping","payoff2","plot","maxWidth","groups","highlighted","highlighted-default","extended-dominated","dominated","buildConfig","diagramData","initViewModes","initDataModel","initComputationsManager","initProbabilityNumberFormat","initPayoffNumberFormat","initTreeDesigner","initSidebar","initSettingsDialog","initAboutDialog","initDefinitionsDialog","initSensitivityAnalysisDialog","initOperationDialog","initLeagueTableDialog","initOnBeforeUnload","initKeyCodes","initTextsInterpolator","initToolbar","openDiagram","updateView","catch","log","setLogLevel","logLevel","setLevel","buildTimestamp","DataModel","nodeAddedCallback","nodeRemovedCallback","onNodeAddedOrRemoved","textAddedCallback","onTextAdded","textRemovedCallback","onTextRemoved","computationsManager","ComputationsManager","ruleName","worker","workerUrl","jobRepositoryType","clearRepository","expressionEngine","checkValidityAndRecomputeObjective","sidebar","Sidebar","settingsDialog","SettingsDialog","aboutDialog","AboutDialog","definitionsDialog","DefinitionsDialog","onClosed","recompute","leagueTableDialog","LeagueTableDialog","isMultipleCriteria","validateParams","sensitivityAnalysisDialog","SensitivityAnalysisDialog","operationDialog","OperationDialog","textsInterpolator","TextsInterpolator","getGlobalVariableNames","toolbar","Toolbar","payoffNumberFormat","Intl","NumberFormat","format","probabilityNumberFormat","getTreeDesignerInitialConfig","container2","onObjectSelected","prefix","currentViewMode","multiCriteria","charAt","payoffIndex","jobName","openWith","selectedObject","updateObjectPropertiesView","updateVariableDefinitions","hideObjectProperties","Node","Edge","definitionsSourceObject","getCurrentVariableDefinitionsSourceObject","updateDefinitions","redrawTreeDesigner","updateLayoutOptions","updateDiagramDetails","updateMultipleCriteria","undo","initPayoffNames","findById","fieldName","updateInterpolatedDisplayValues","shouldDisableTextInterpolation","isAutoRecalculationEnabled","textInterpolation","updateDiagramTitle","interpolatedDiagramTitle","updateDiagramDescription","interpolatedDiagramDescription","evalCode","evalNumeric","getCurrentRule","setCurrentRuleByName","currentRule","payoffsMaximization","payoffCoeffs","maximization","tmp","flipCriteria","getObjectiveRules","rule","viewModes","setViewMode","_this10","objectiveRulesManager","setPayoffIndex","rules","newRule","every","setObjectiveRule","isSensitivityAnalysisAvailable","dataDTO","originalDataModelSnapshot","loadFromDTO","getJsonReviver","updateDisplayValues","svgString","Exporter","getSVGString","showFullScreenPopup","_setNewState","policy","displayPolicy","LoadingIndicator","_this11","debounce","forceWhenAutoIsDisabled","debouncedRecompute","_this12","allRules","_this13","setDiagramTitle","setDiagramDescription","_this14","JSON","parse","alert","dataModelObject","isValidVersionString","compareVersionNumbers","expressionScope","trees","isRuleName","viewMode","setViewModeByName","setDefaultViewModeForRule","getObjectiveRuleByName","load","sensitivityAnalysis","loadSavedParamValues","updateNumberFormats","_this15","filterLocation","filterComputed","filterPrivate","savetime","isoFormat","Date","serialize","jobNameToParamValues","getJsonReplacer","_this16","json","jsonFileDownload","blob","Blob","saveAs","getExportFileName","addEventListener","isUndoAvailable","isRedoAvailable","dialogText","returnValue","prevValue","setConfigParam","_this17","updateDiagramTitleAndDescription","_this18","_this19","srcElement","nodeName","toUpperCase","keyCode","ctrlKey","altKey","selectedNode","_selectedNode","global$","getGlobalObject","widget","_create","wrapper","addClass","insertAfter","_createAutocomplete","_createShowAllButton","children","input","appendTo","autocomplete","delay","minLength","source","proxy","classes","ui-autocomplete","_on","autocompleteselect","ui","option","_trigger","autocompletechange","inputD3","dispatchHtmlEvent","wasOpen","trigger","_source","request","matcher","escapeRegex","term","_destroy","input_element","Autocomplete","combobox","_d3ScaleChromatic","_dialog","Dialog","app","_assertThisInitialized","definitionsScopeLabel","definitionsCode","updateInputClass","changeCallback","recalculateButton","variableValuesContainer","elasticTextarea","isVisible","_get","labelSuffix","scopeType","autoResizeTextarea","$codeError","printError","printVariables","scope","scopeVariables","getVariablesAsList","close","shrink","onResized","setFullScreen","_jobParametersBuilder","jobConfigurationContainer","parameterBuilderContainer","jobParametersBuilder","JobParametersBuilder","onJobParametersChanged","progressBarContainer","progressBar","dialogTitle","debouncedCheckWarnings","checkWarnings","initButtons","reject","job","getJobByName","setJobParamsValues","jobParamsValues","jobParameters","createJobParameters","setJobParameters","hidden","objectId","warnConf","msg","msgHTML","disable","runJobButton","runOperation","disableActionButtonsAndShowLoadingIndicator","onJobStarted","onJobFailed","promise","clearParams","clearWarnings","markAsError","msgKey","forOwn","terminateJob","_sensitivityAnalysisResultTable","_probabilisticSensitivityAnalysisResultTable","_policy","_tornadoDiagramPlot","_spiderPlot","jobResultsContainer","jobResultPlotContainer","initJobConfigurations","jobSelect","initJobSelect","payoffConf","cloneDeep","jobInstanceManager","terminate","jobConfig","selectedJobConfig","jobConfigurations","deleteId","refreshSelectedJobConfig","customParamsConfig","customVariablesValidator","isValidArray","names","isVariableInGlobalScope","valid","ExpressionEngine","largeScenariosNumberWarning","numberFormatted","check","reduce","failOnInvalidTree","_derivedValues","variable","toFloat","divide","subtract","customValidator","warnings","isValidNameArray","formula","randomMenuList","optionsAutocomplete","addWarning","guid","onJobSelected","onRowSelected","rows","indexes","onResultRowSelected","className","resultTable","setClassName","SensitivityAnalysisJobResultTable","setData","ProbabilisticSensitivityAnalysisJobResultTable","runJobWithInstanceManager","onJobCompleted","onJobStopped","onJobTerminated","onProgress","callbacksThisArg","resumeJobButton","resume","stopJobButton","stop","terminateJobButton","backButton","downloadCsvButtons","downloadCSV","clearButton","clearAllParams","clearResults","setProgress","globalVariableNames","paramValues","resultPlots","destroy","progress","displayResult","debug","initResultTable","initResultPlots","initTornadoResultPlots","initSpiderResultPlots","policies","policyIndex","leagueTable","resultPlot","TornadoDiagramPlot","SpiderPlot","percents","current","total","row","policyIndexes","Policy","toPolicyString","variableNames","showPolicyPreview","saveAsCSV","getRows","params","extendedPolicyDescription","jobResultToCsvRows","_inputField","_pathValueAccessor","FormGroup","addField","addSelectField","fontWeightOptions","fontStyleOptions","formGroups","payoffGroup","updatePayoffNumberFormat","payoff2Group","updateProbabilityNumberFormat","nodeGroup","addGroup","edgeGroup","titleGroup","leagueTableGroup","otherGroup","valueUpdateCallback","onRawOptionChanged","onTextInterpolationOptionChanged","initView","temp","formGroupsEnter","formGroupsMerge","inputGroups","fields","checked","validator","valueAccessor","pristineVal","initFormGroups","fieldConfig","_addField","fieldId","configInputField","ConfigInputField","InputField","sourceObject","_super2","PathValueAccessor","_blueimpCanvasToBlob","_fileSaver","svgNode","svgClone","cloneNode","appendInlineStyles","parentCs","targetChildren","tagName","cssStyleText","cs","propertyValue","exportedStyles","svgProperties","setAttribute","removeAttribute","toRemove","_i","removeIds","getSvgCloneWithInlineStyles","serializeSvgNode","sanitizeSVG","XMLSerializer","serializeToString","DOMParser","parseFromString","documentElement","imgsrc","encodeURIComponent","canvas","getContext","image","Image","drawImage","toBlob","filesize","round","ext","timeFormat","clientSide","fallback","serverSide","detectIE","pngWidth","pngHeight","svgString2Image","dataBlob","warn","info","exportPngServerSide","doc","jsPDF","dummy","svg2pdf","firstChild","filename","successCallback","failCallback","setRequestHeader","getResponseHeader","onreadystatechange","oEvent","readyState","postAndSave","noDownload","clientSidePdfExportAvailable","isClientSidePdfExportAvailable","svgElement","exportPdfClientSide","exportPdfServerSide","sanitized","csvRows","escapeCsvField","join","csvString","field","dataURLtoBlob","FileLoader","getElementById","onchange","file","FileReader","files","readAsText","click","parser","styleClass","newDiagram","saveDiagram","export","manual","criterion1","criterion2","twoCriteria","objectiveRule","expected-value-maximization","expected-value-minimization","maxi-min","maxi-max","mini-min","mini-max","min-max","max-min","min-min","max-max","settings","about","buttons","downloadCsv","headers","policyNo","comment","dominatedBy","extendedDominatedBy","incratio","gradientArrow1","gradientArrow2","dominatedRegion","legend","gradientArrows","runJob","stopJob","resumeJob","back","removeParameterValue","addParameterValue","jobResultTable","multiplePoliciesInCell","aggregators","maximum","minimum","renderers","heatmap","policyPreview","sensitivity-analysis","param","step","computations","largeScenariosNumber","largeParametersNumber","tornado-diagram","defaultValue","low","high","xAxisTitle","probabilistic-sensitivity-analysis","numberOfRuns","help","param-computation","spider-plot","percentageChangeRange","yAxisTitle","payoffs-transformation","functionName","functionBody","functionArgumentName","makeClone","league-table","generic","general","numberFormatLocale","highlightedColor","highlightedDefaultColor","extendedDominatedColor","dominatedColor","defaultColor","other","header","mouse","2","3","keyboard","4","5","6","docs","recalculate","evaluatedVariables","sidebarDefinitions","openDialog","multipleCriteria","defaultMaximizedCriterionName","defaultMinimizedCriterionName","nameOfCriterion1","nameOfCriterion2","defaultCriterion1Weight","weightLowerBound","weightUpperBound","showLeagueTable","flip","layoutOptions","marginHorizontal","marginVertical","diagramDetails","objectProperties","childrenProperties","child","confirm","beforeunload","jsonParse","fileApiNotSupported","inputFilesProperty","notSilverDecisionsFile","incorrectVersionFormat","fileVersionNewerThanApplicationVersion","objectiveComputationFailure","diagramDrawingFailure","malformedData","pngExportNotSupported","pngExportNotSupportedIE","svgExportNotSupported","pdfExportNotSupported","incorrectPayoffNumberFormatOptions","incorrectProbabilityNumberFormatOptions","incorrectNumberFormatOptions","jsPDFisNotIncluded","serverSideExportRequestFailure","_app","_package","_jobParameterDefinition","_autocomplete","i18nPrefix","onChange","paramTypeToInputType","paramTypeToInputAttrs","PARAMETER_TYPE","BOOLEAN","DATE","INTEGER","NUMBER","STRING","clean","build","definitions","pristine","customValidators","strictValidation","checkCustomValidators","jobParameterDefinitions","parentValueObject","parentPath","onInput","paramsEnter","paramSelection","valuesContainer","addButton","callbacks","repeating","maxOccurs","vi","minOccurs","getEmptyValue","getParamNameI18n","onValueRemoved","buildParameterValues","buildParameterSingleValue","paramDefinition","paramValuesEnter","paramValuesMerge","indexToSelection","checkCustomValidator","allValid","validateSingleValue","derivedValueUpdaters","updateDerivedValues","updater","COMPOSITE","nestedParameters","derivedValuesConfigs","derivedValueConfig","buildDerivedValue","removeButton","inputId","paramValue","getParamHelpI18n","helpContainer","inputType","additionalInputAttrs","concat","getInput","parseInput","_value","parameterType","parseFloat","_pivotTable","JobResultTableConfig","JobResultTable","pivotTable","PivotTable","filters","pivotData","selectedIndexes","selectedRows","forEachMatchingRecord","record","pivotOptions","pivotUtilities","derivers","vals","cols","hiddenAttributes","aggregatorName","getAggregatorName","rendererOptions","table","clickCallback","colorScaleGenerator","scaleLinear","range","rendererName","getRendererName","_jobResultTable","jobResult","expectedValues","medians","standardDeviations","policyIsBestProbabilities","trace","attributeArray","rowKey","colKey","numInputs","roundVariables","csvDAta","totalInColNum","_totalInColNum","_lineChart","SpiderPlotConfig","LineChartConfig","domainMargin","LineChart","placeholderSelector","percentageRangeValues","rangeVal","payoffs","baseContainer","_divergingStackedBarChart","TornadoDiagramPlotConfig","DivergingStackedBarChartConfig","DivergingStackedBarChart","middleValue","defaultPayoff","varExtent","variableExtents","extents","categories","extentVariableValues","_leagueTable","_leagueTablePlot","onRowHover","emphasize","onRowHoverOut","LeagueTable","defaultWeight","onDotHover","onDotHoverOut","groupConf","groupOrdering","optimalForDefaultWeight","groupKey","LeagueTablePlot","initJobParams","initResultPlot","_scatterplot","LeagueTablePlotConfig","ScatterPlotConfig","ScatterPlot","checkOrdering","getOrdering","newData","updateIcerLines","updateDominatedRegion","updateGradientArrows","updateDotLabels","linesContainerClass","prefixClass","linesContainer","svgG","dotsContainerClass","clipPathId","minPoint","maxPoint","highPoint","lowPoint","defaultPoint","_x2","highlightedPoints","groupValue","highlightedDefaultPoints","dominatedRegionPoints","xAxisExtent","infLowY","infLowPoint","infHighPoint","_x","defLowPoint","defHighPoint","unshift","dominatedRegionContainerClass","dominatedRegionContainer","worstPoint","prev","curr","area","y0","labelsContainerClass","labels","coeff","gradientArrowLength","gradientArrowOffset","x1","y1","x2","y2","arrowsContainerClass","arrowsContainer","arrowClass","arrows","arrowsEnter","arrowsMerge","_emphasize","emphasizeDot","dotId","emphasizedDotRadius","dotRadius","dotClass","legendCells","getTextData","word","words","lineNumber","tspan","pop","LeagueTableConfig","resultTableHead","resultTableBody","resultTableFoot","drawHeaders","drawRows","headerData","headersMerge","rowsData","cells","rowspan","getRowComment","rowsMerge","cellsMerge","policy1","policy2","numberFormat","showZero","origAggregators","args1","res1","res","format_","origX","revertAggregators","_toConsumableArray","origAggregator","pivotUI","toLowerCase","_payoffInputValidator","_probabilityInputValidator","_requiredInputValidator","_mcdmWeightValueValidator","dispatch","initLayoutOptions","initDiagramDetails","initDefinitions","initMultipleCriteria","onObjectUpdated","onMultiCriteriaUpdated","layoutOptionsContainer","autoLayoutOptionsGroup","diagramDetailsContainer","showDetails","definitionsContainer","showDefinitions","onDefinitionsCodeChanged","definitionsEvaluatedValuesContainer","openDefinitionsDialog","multipleCriteriaContainer","showLeagueTableButton","flipCriteriaButton","weightParser","multipleCriteriaFields","RequiredInputValidator","lowerBoundValueAccessor","upperBoundValueAccessor","weightValueValidator","McdmWeightValueValidator","upper","compare","lower","updateInputs","inputSelection","leagueTableAvailable","isLeagueTableAvailable","getValue","pristineStateSnapshot","setValue","objectProps","fieldList","headerText","getHeaderTextForObject","getFieldListForObject","updateObjectFields","updateObjectChildrenProperties","childObjects","getChildObjectList","objectType","getObjectType","childPropsSelector","ObjectInputField","PayoffInputValidator","ProbabilityInputValidator","fieldsMerge","fieldSelection","setSyntaxValidity","isFieldValid","customOnInput","checkFieldStatus","nameAliasMap","booleanNames","$DISPLAY_VALUE_NAMES","includes","textInterpolationScope","thisObj","exc","findOptimalEdges","payoffFormat","probabilityFormat","getPayoff","nodeOrEdge","getProbability","math","eval","_objectSpread","optionsOrMaxFractionDigits","isNumber","mathFormat","printPayoff","printProbability","optimalEdges","optimalEdge","optimalList","globalScope","textsImports","clearInterpolatedDisplayValues","createGlobalScope","nodeInterpolationScope","createNodeTextInterpolationScope","interpolateText","getImports","edgeTextInterpolationScope","copyDisplayValues","globalObject","globalNames","emptyGlobals","roots","childrenPayoff","_fileLoader","initDiagramButtons","initExportToolbarGroup","initLayoutButtons","initUndoRedoButtons","initSettingsButton","initAboutButton","initSensitivityAnalysisButton","initRecomputeButton","initViewModeToolbarGroup","initObjectiveRuleToolbarGroup","newDiagramButton","hiddenClass","openDiagramButton","openFile","saveDiagramButton","saveToFile","onLayoutChanged","layoutButtons","disableAutoLayout","updateLayoutButtons","settingsButton","aboutButton","recomputeButton","sensitivityAnalysisButton","openSensitivityAnalysis","undoRedoStateChangedCallback","onUndoRedoChanged","undoButton","redoButton","updateUndoRedoButtons","updateSensitivityAnalysisButton","updateViewModeValue","updateObjectiveRuleOptions","updateObjectiveRuleValue","initExportToPngButton","initExportSvgButton","initExportPdfButton","saveAsPng","saveAsSvg","saveAsPdf","objectiveRuleSelect","getCurrentObjectiveRule","viewModeSelect","getViewModes","getCurrentViewMode","NumberInputValidator","hasAssignmentExpression","isHash"],"mappings":"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","file":"silver-decisions.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","\"use strict\";\n\nvar isValue             = require(\"type/value/is\")\n  , ensureValue         = require(\"type/value/ensure\")\n  , ensurePlainFunction = require(\"type/plain-function/ensure\")\n  , copy                = require(\"es5-ext/object/copy\")\n  , normalizeOptions    = require(\"es5-ext/object/normalize-options\")\n  , map                 = require(\"es5-ext/object/map\");\n\nvar bind = Function.prototype.bind\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = ensureValue(desc) && ensurePlainFunction(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (isValue(options.resolveContext)) ensurePlainFunction(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n","\"use strict\";\n\nvar numberIsNaN       = require(\"../../number/is-nan\")\n  , toPosInt          = require(\"../../number/to-pos-integer\")\n  , value             = require(\"../../object/valid-value\")\n  , indexOf           = Array.prototype.indexOf\n  , objHasOwnProperty = Object.prototype.hasOwnProperty\n  , abs               = Math.abs\n  , floor             = Math.floor;\n\nmodule.exports = function (searchElement/*, fromIndex*/) {\n\tvar i, length, fromIndex, val;\n\tif (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);\n\n\tlength = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < length; ++i) {\n\t\tif (objHasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (numberIsNaN(val)) return i; // Jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Array.from : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && result !== arr && result[1] === \"dwa\");\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity, max-lines-per-function\nmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array((length = arrayLike.length));\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call((function () { return arguments; })());\n\nmodule.exports = function (value) { return objToString.call(value) === id; };\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , isFunctionStringTag = RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && isFunctionStringTag(objToString.call(value));\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Math.sign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn sign(10) === 1 && sign(-20) === -1;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || value === 0) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? require(\"ext/global-this\").Symbol\n\t: require(\"./polyfill\");\n","\"use strict\";\n\nvar global     = require(\"ext/global-this\")\n  , validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar Symbol = global.Symbol;\n\tvar symbol;\n\tif (typeof Symbol !== \"function\") return false;\n\tsymbol = Symbol(\"test symbol\");\n\ttry { String(symbol); }\n\tcatch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\tif (typeof value === \"symbol\") return true;\n\tif (!value.constructor) return false;\n\tif (value.constructor.name !== \"Symbol\") return false;\n\treturn value[value.constructor.toStringTag] === \"Symbol\";\n};\n","\"use strict\";\n\nvar d = require(\"d\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;\n\nvar created = create(null);\nmodule.exports = function (desc) {\n\tvar postfix = 0, name, ie11BugWorkaround;\n\twhile (created[desc + (postfix || \"\")]) ++postfix;\n\tdesc += postfix || \"\";\n\tcreated[desc] = true;\n\tname = \"@@\" + desc;\n\tdefineProperty(\n\t\tobjPrototype,\n\t\tname,\n\t\td.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t})\n\t);\n\treturn name;\n};\n","\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n","\"use strict\";\n\nvar d              = require(\"d\")\n  , validateSymbol = require(\"../../../validate-symbol\");\n\nvar registry = Object.create(null);\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (registry[key]) return registry[key];\n\t\t\treturn (registry[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (symbol) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(symbol);\n\t\t\tfor (key in registry) {\n\t\t\t\tif (registry[key] === symbol) return key;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t});\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n","\"use strict\";\n\nvar isSymbol = require(\"./is-symbol\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Number.isNaN : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar numberIsNaN = Number.isNaN;\n\tif (typeof numberIsNaN !== \"function\") return false;\n\treturn !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\t// eslint-disable-next-line no-self-compare\n\treturn value !== value;\n};\n","\"use strict\";\n\nvar sign  = require(\"../math/sign\")\n  , abs   = Math.abs\n  , floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif (value === 0 || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n  , max       = Math.max;\n\nmodule.exports = function (value) { return max(0, toInteger(value)); };\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb/*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = { configurable: false, enumerable: false, writable: true, value: undefined };\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) { return (isValue(value) && map[typeof value]) || false; };\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb/*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.setPrototypeOf : require(\"./shim\");\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject         = require(\"../is-object\")\n  , value            = require(\"../valid-value\")\n  , objIsPrototypeOf = Object.prototype.isPrototypeOf\n  , defineProperty   = Object.defineProperty\n  , nullDesc         = { configurable: true, enumerable: false, writable: true, value: undefined }\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n})(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n);\n\nrequire(\"../create\");\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n","\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n","\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n","\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n","'use strict';\n\nif (!require('./is-implemented')()) {\n\tObject.defineProperty(require('es5-ext/global'), 'Set',\n\t\t{ value: require('./polyfill'), configurable: true, enumerable: false,\n\t\t\twritable: true });\n}\n","'use strict';\n\nmodule.exports = function () {\n\tvar set, iterator, result;\n\tif (typeof Set !== 'function') return false;\n\tset = new Set(['raz', 'dwa', 'trzy']);\n\tif (String(set) !== '[object Set]') return false;\n\tif (set.size !== 3) return false;\n\tif (typeof set.add !== 'function') return false;\n\tif (typeof set.clear !== 'function') return false;\n\tif (typeof set.delete !== 'function') return false;\n\tif (typeof set.entries !== 'function') return false;\n\tif (typeof set.forEach !== 'function') return false;\n\tif (typeof set.has !== 'function') return false;\n\tif (typeof set.keys !== 'function') return false;\n\tif (typeof set.values !== 'function') return false;\n\n\titerator = set.values();\n\tresult = iterator.next();\n\tif (result.done !== false) return false;\n\tif (result.value !== 'raz') return false;\n\n\treturn true;\n};\n","// Exports true if environment provides native `Set` implementation,\n// whatever that is.\n\n'use strict';\n\nmodule.exports = (function () {\n\tif (typeof Set === 'undefined') return false;\n\treturn (Object.prototype.toString.call(Set.prototype) === '[object Set]');\n}());\n","'use strict';\n\nvar setPrototypeOf    = require('es5-ext/object/set-prototype-of')\n  , contains          = require('es5-ext/string/#/contains')\n  , d                 = require('d')\n  , Iterator          = require('es6-iterator')\n  , toStringTagSymbol = require('es6-symbol').toStringTag\n\n  , defineProperty = Object.defineProperty\n  , SetIterator;\n\nSetIterator = module.exports = function (set, kind) {\n\tif (!(this instanceof SetIterator)) return new SetIterator(set, kind);\n\tIterator.call(this, set.__setData__, set);\n\tif (!kind) kind = 'value';\n\telse if (contains.call(kind, 'key+value')) kind = 'key+value';\n\telse kind = 'value';\n\tdefineProperty(this, '__kind__', d('', kind));\n};\nif (setPrototypeOf) setPrototypeOf(SetIterator, Iterator);\n\nSetIterator.prototype = Object.create(Iterator.prototype, {\n\tconstructor: d(SetIterator),\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === 'value') return this.__list__[i];\n\t\treturn [this.__list__[i], this.__list__[i]];\n\t}),\n\ttoString: d(function () { return '[object Set Iterator]'; })\n});\ndefineProperty(SetIterator.prototype, toStringTagSymbol, d('c', 'Set Iterator'));\n","'use strict';\n\nvar clear          = require('es5-ext/array/#/clear')\n  , eIndexOf       = require('es5-ext/array/#/e-index-of')\n  , setPrototypeOf = require('es5-ext/object/set-prototype-of')\n  , callable       = require('es5-ext/object/valid-callable')\n  , d              = require('d')\n  , ee             = require('event-emitter')\n  , Symbol         = require('es6-symbol')\n  , iterator       = require('es6-iterator/valid-iterable')\n  , forOf          = require('es6-iterator/for-of')\n  , Iterator       = require('./lib/iterator')\n  , isNative       = require('./is-native-implemented')\n\n  , call = Function.prototype.call\n  , defineProperty = Object.defineProperty, getPrototypeOf = Object.getPrototypeOf\n  , SetPoly, getValues, NativeSet;\n\nif (isNative) NativeSet = Set;\n\nmodule.exports = SetPoly = function Set(/*iterable*/) {\n\tvar iterable = arguments[0], self;\n\tif (!(this instanceof SetPoly)) throw new TypeError('Constructor requires \\'new\\'');\n\tif (isNative && setPrototypeOf) self = setPrototypeOf(new NativeSet(), getPrototypeOf(this));\n\telse self = this;\n\tif (iterable != null) iterator(iterable);\n\tdefineProperty(self, '__setData__', d('c', []));\n\tif (!iterable) return self;\n\tforOf(iterable, function (value) {\n\t\tif (eIndexOf.call(this, value) !== -1) return;\n\t\tthis.push(value);\n\t}, self.__setData__);\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(SetPoly, NativeSet);\n\tSetPoly.prototype = Object.create(NativeSet.prototype, { constructor: d(SetPoly) });\n}\n\nee(Object.defineProperties(SetPoly.prototype, {\n\tadd: d(function (value) {\n\t\tif (this.has(value)) return this;\n\t\tthis.emit('_add', this.__setData__.push(value) - 1, value);\n\t\treturn this;\n\t}),\n\tclear: d(function () {\n\t\tif (!this.__setData__.length) return;\n\t\tclear.call(this.__setData__);\n\t\tthis.emit('_clear');\n\t}),\n\tdelete: d(function (value) {\n\t\tvar index = eIndexOf.call(this.__setData__, value);\n\t\tif (index === -1) return false;\n\t\tthis.__setData__.splice(index, 1);\n\t\tthis.emit('_delete', index, value);\n\t\treturn true;\n\t}),\n\tentries: d(function () { return new Iterator(this, 'key+value'); }),\n\tforEach: d(function (cb/*, thisArg*/) {\n\t\tvar thisArg = arguments[1], iterator, result, value;\n\t\tcallable(cb);\n\t\titerator = this.values();\n\t\tresult = iterator._next();\n\t\twhile (result !== undefined) {\n\t\t\tvalue = iterator._resolve(result);\n\t\t\tcall.call(cb, thisArg, value, value, this);\n\t\t\tresult = iterator._next();\n\t\t}\n\t}),\n\thas: d(function (value) {\n\t\treturn (eIndexOf.call(this.__setData__, value) !== -1);\n\t}),\n\tkeys: d(getValues = function () { return this.values(); }),\n\tsize: d.gs(function () { return this.__setData__.length; }),\n\tvalues: d(function () { return new Iterator(this); }),\n\ttoString: d(function () { return '[object Set]'; })\n}));\ndefineProperty(SetPoly.prototype, Symbol.iterator, d(getValues));\ndefineProperty(SetPoly.prototype, Symbol.toStringTag, d('c', 'Set'));\n","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n","'use strict';\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","'use strict';\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of Object.prototype being sealed (via preventExtensions, seal or freeze)\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ is resolved with global context, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? globalThis : require(\"./implementation\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tif (typeof globalThis !== \"object\") return false;\n\tif (!globalThis) return false;\n\treturn globalThis.Array === Array;\n};\n","/*!\n * jQuery UI :data 1.13.0\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :data Selector\n//>>group: Core\n//>>description: Selects elements which have data stored under the specified key.\n//>>docs: http://api.jqueryui.com/data-selector/\n\n( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\nreturn $.extend( $.expr.pseudos, {\n\tdata: $.expr.createPseudo ?\n\t\t$.expr.createPseudo( function( dataName ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn !!$.data( elem, dataName );\n\t\t\t};\n\t\t} ) :\n\n\t\t// Support: jQuery <1.8\n\t\tfunction( elem, i, match ) {\n\t\t\treturn !!$.data( elem, match[ 3 ] );\n\t\t}\n} );\n} );\n","export * from './src/index'\r\n","import * as d3 from \"./d3\";\r\nimport {Templates} from \"./templates\";\r\nimport {i18n} from \"./i18n/i18n\";\r\nimport {Utils} from \"sd-utils\";\r\n\r\nexport class AppUtils {\r\n\r\n    static sanitizeHeight = function (height, container) {\r\n        return (height || parseInt(container.style('height'), 10) || 400);\r\n    };\r\n\r\n    static sanitizeWidth = function (width, container) {\r\n        return (width || parseInt(container.style('width'), 10) || 960);\r\n    };\r\n\r\n    static availableHeight = function (height, container, margin) {\r\n        return Math.max(0, AppUtils.sanitizeHeight(height, container) - margin.top - margin.bottom);\r\n    };\r\n\r\n    static availableWidth = function (width, container, margin) {\r\n        return Math.max(0, AppUtils.sanitizeWidth(width, container) - margin.left - margin.right);\r\n    };\r\n\r\n    //places textString in textObj, adds an ellipsis if text can't fit in width\r\n    static placeTextWithEllipsis(textD3Obj, textString, width) {\r\n        var textObj = textD3Obj.node();\r\n        textObj.textContent = textString;\r\n\r\n        var margin = 0;\r\n        var ellipsisLength = 9;\r\n        //ellipsis is needed\r\n        if (textObj.getComputedTextLength() > width + margin) {\r\n            for (var x = textString.length - 3; x > 0; x -= 1) {\r\n                if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\r\n                    textObj.textContent = textString.substring(0, x) + \"...\";\r\n                    return true;\r\n                }\r\n            }\r\n            textObj.textContent = \"...\"; //can't place at all\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\r\n        var ellipsisPlaced = AppUtils.placeTextWithEllipsis(textD3Obj, textString, width);\r\n        if (ellipsisPlaced && tooltip) {\r\n            textD3Obj.on(\"mouseover\", function (event, d) {\r\n                tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                tooltip.html(textString)\r\n                    .style(\"left\", (event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            textD3Obj.on(\"mouseout\", function (event, d) {\r\n                tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    static getFontSize(element) {\r\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\r\n    }\r\n\r\n    static getTranslation(transform) {\r\n        // Create a dummy g for calculation purposes only. This will never\r\n        // be appended to the DOM and will be discarded once this function\r\n        // returns.\r\n        var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n\r\n        // Set the transform attribute to the provided string value.\r\n        g.setAttributeNS(null, \"transform\", transform);\r\n\r\n        // consolidate the SVGTransformList containing all transformations\r\n        // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\r\n        // its SVGMatrix.\r\n        var matrix = g.transform.baseVal.consolidate().matrix;\r\n\r\n        // As per definition values e and f are the ones for the translation.\r\n        return [matrix.e, matrix.f];\r\n    }\r\n\r\n\r\n    static closestPoint(pathNode, point) {\r\n        var pathLength = pathNode.getTotalLength(),\r\n            precision = 8,\r\n            best,\r\n            bestLength,\r\n            bestDistance = Infinity;\r\n\r\n        // linear scan for coarse approximation\r\n        for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\r\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\r\n                best = scan, bestLength = scanLength, bestDistance = scanDistance;\r\n            }\r\n        }\r\n\r\n        // binary search for precise estimate\r\n        precision /= 2;\r\n        while (precision > 0.5) {\r\n            var before,\r\n                after,\r\n                beforeLength,\r\n                afterLength,\r\n                beforeDistance,\r\n                afterDistance;\r\n            if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\r\n                best = before, bestLength = beforeLength, bestDistance = beforeDistance;\r\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\r\n                best = after, bestLength = afterLength, bestDistance = afterDistance;\r\n            } else {\r\n                precision /= 2;\r\n            }\r\n        }\r\n\r\n        best = [best.x, best.y];\r\n        best.distance = Math.sqrt(bestDistance);\r\n        return best;\r\n\r\n        function distance2(p) {\r\n            var dx = p.x - point[0],\r\n                dy = p.y - point[1];\r\n            return dx * dx + dy * dy;\r\n        }\r\n    }\r\n\r\n    static growl(message, type='info', position='right', time = 2000){\r\n        var html = Templates.get('growl', {message:message, type:type})\r\n\r\n        var g = d3.select('body').selectOrAppend('div.sd-growl-list.'+position).append('div').html(html);\r\n        setTimeout(function(){\r\n            g.remove();\r\n        }, time)\r\n    }\r\n\r\n\r\n    static createElement(tag, attribs, parent) {\r\n        var el = document.createElement(tag);\r\n\r\n        if (attribs) {\r\n            AppUtils.deepExtend(el, attribs);\r\n        }\r\n        if (parent) {\r\n            parent.appendChild(el);\r\n        }\r\n        return el;\r\n    };\r\n\r\n    static removeElement(element) {\r\n        element.parentNode.removeChild(element);\r\n    }\r\n\r\n    static replaceUrls(text){\r\n        if(!text){\r\n            return text;\r\n        }\r\n        var urlRegexp = /((ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/\r\n\r\n        return text.replace(urlRegexp, '<a href=\"$1\" target=\"_blank\">$1</a>');\r\n    }\r\n\r\n    static escapeHtml(html)\r\n    {\r\n        var text = document.createTextNode(html);\r\n        var div = document.createElement('div');\r\n        div.appendChild(text);\r\n        return div.innerHTML;\r\n    }\r\n\r\n    static dispatchHtmlEvent(element, name){\r\n        if (\"createEvent\" in document) {\r\n            var evt = document.createEvent(\"HTMLEvents\");\r\n            evt.initEvent(name, false, true);\r\n            element.dispatchEvent(evt);\r\n        }\r\n        else\r\n            element.fireEvent(\"on\"+name);\r\n    }\r\n\r\n    static dispatchEvent(name, data){\r\n        var event;\r\n        try{\r\n            event = new  CustomEvent(name,{ 'detail': data });\r\n        }catch (e){ //IE\r\n            event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(name, false, false, data);\r\n        }\r\n        document.dispatchEvent(event);\r\n    }\r\n\r\n    static getValidationMessage(error){\r\n        if(Utils.isString(error)){\r\n            error = {name: error};\r\n        }\r\n        var key = 'validation.' + error.name;\r\n        return i18n.t(key, error.data);\r\n    }\r\n\r\n    static hide(selection){\r\n        selection.classed('sd-hidden', true);\r\n    }\r\n\r\n    static show(selection, show=true){\r\n        selection.classed('sd-hidden', !show);\r\n    }\r\n\r\n\r\n\r\n    static isHidden(el, exact = true) {\r\n        if(!el){\r\n            return true;\r\n        }\r\n        if(exact){\r\n            var style = window.getComputedStyle(el);\r\n            return (style.display === 'none')\r\n        }\r\n        return (el.offsetParent === null)\r\n    }\r\n\r\n    static getJSON(url, callback) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('get', url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.onload = function () {\r\n            var status = xhr.status;\r\n            if (status == 200) {\r\n                callback(xhr.response, null);\r\n            } else {\r\n                callback(null, status);\r\n            }\r\n        };\r\n        xhr.send();\r\n    }\r\n}\r\n","import * as d3 from '../d3'\r\n\r\n/*based on:\r\n * github.com/patorjk/d3-context-menu */\r\n\r\nexport class ContextMenu {\r\n    openCallback;\r\n    closeCallback;\r\n\r\n    constructor(menu, opts) {\r\n        var self = this;\r\n\r\n        if (typeof opts === 'function') {\r\n            self.openCallback = opts;\r\n        } else {\r\n            opts = opts || {};\r\n            self.openCallback = opts.onOpen;\r\n            self.closeCallback = opts.onClose;\r\n        }\r\n\r\n        // create the div element that will hold the context menu\r\n        d3.selectAll('.d3-context-menu').data([1])\r\n            .enter()\r\n            .append('div')\r\n            .attr('class', 'd3-context-menu');\r\n\r\n        // close menu\r\n        d3.select('body').on('click.d3-context-menu', function () {\r\n            d3.select('.d3-context-menu').style('display', 'none');\r\n            if (self.closeCallback) {\r\n                self.closeCallback();\r\n            }\r\n        });\r\n\r\n        // this gets executed when a contextmenu event occurs\r\n        return function (event, data) {\r\n            var elm = this;\r\n\r\n            d3.selectAll('.d3-context-menu').html('');\r\n            var list = d3.selectAll('.d3-context-menu')\r\n                .on('contextmenu', function (event, d) {\r\n                    d3.select('.d3-context-menu').style('display', 'none');\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                })\r\n                .append('ul');\r\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\r\n                .append('li')\r\n                .attr('class', function (d) {\r\n                    var ret = '';\r\n                    if (d.divider) {\r\n                        ret += ' is-divider';\r\n                    }\r\n                    if (d.disabled) {\r\n                        ret += ' is-disabled';\r\n                    }\r\n                    if (!d.action) {\r\n                        ret += ' is-header';\r\n                    }\r\n                    return ret;\r\n                })\r\n                .html(function (d) {\r\n                    if (d.divider) {\r\n                        return '<hr>';\r\n                    }\r\n                    if (!d.title) {\r\n                        console.error('No title attribute set. Check the spelling of your options.');\r\n                    }\r\n                    return (typeof d.title === 'string') ? d.title : d.title(data);\r\n                })\r\n                .on('click', function (event, d) {\r\n                    if (d.disabled) return; // do nothing if disabled\r\n                    if (!d.action) return; // headers have no \"action\"\r\n                    d.action(elm, data);\r\n                    d3.select('.d3-context-menu').style('display', 'none');\r\n\r\n                    if (self.closeCallback) {\r\n                        self.closeCallback();\r\n                    }\r\n                });\r\n\r\n            // the openCallback allows an action to fire before the menu is displayed\r\n            // an example usage would be closing a tooltip\r\n            if (self.openCallback) {\r\n                if (self.openCallback(event, data) === false) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // display context menu\r\n            d3.select('.d3-context-menu')\r\n                .style('left', (event.pageX - 2) + 'px')\r\n                .style('top', (event.pageY - 2) + 'px')\r\n                .style('display', 'block');\r\n\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n    };\r\n\r\n    static hide() {\r\n        d3.select('.d3-context-menu').style('display', 'none');\r\n    }\r\n\r\n}\r\n","import {ContextMenu} from './context-menu'\r\nimport {i18n} from \"../i18n/i18n\";\r\n\r\nexport class EdgeContextMenu extends ContextMenu {\r\n    treeDesigner;\r\n\r\n    constructor(treeDesigner) {\r\n        var menu = function (d) {\r\n\r\n            var menu = [];\r\n\r\n            menu.push({\r\n                title: i18n.t('contextMenu.edge.injectDecisionNode'),\r\n                action: function (elm, d, i) {\r\n                    treeDesigner.injectDecisionNode(d)\r\n                }\r\n            });\r\n            menu.push({\r\n                title: i18n.t('contextMenu.edge.injectChanceNode'),\r\n                action: function (elm, d, i) {\r\n                    treeDesigner.injectChanceNode(d)\r\n                }\r\n            });\r\n\r\n\r\n            return menu;\r\n        };\r\n\r\n        super(menu);\r\n        this.treeDesigner = treeDesigner;\r\n    }\r\n}\r\n","import {ContextMenu} from './context-menu'\r\nimport {domain as model} from 'sd-model'\r\nimport * as d3 from '../d3'\r\nimport {i18n} from \"../i18n/i18n\";\r\n\r\nexport class MainContextMenu extends ContextMenu {\r\n    treeDesigner;\r\n\r\n    constructor(treeDesigner) {\r\n        var mousePosition = null;\r\n        var menu = function (d) {\r\n\r\n            var menu = [];\r\n            menu.push({\r\n                title: i18n.t('contextMenu.main.addDecisionNode'),\r\n                action: function (elm, d) {\r\n                    var newNode = new model.DecisionNode(mousePosition);\r\n                    treeDesigner.addNode(newNode)\r\n                }\r\n            });\r\n            menu.push({\r\n                title: i18n.t('contextMenu.main.addChanceNode'),\r\n                action: function (elm, d) {\r\n                    var newNode = new model.ChanceNode(mousePosition);\r\n                    treeDesigner.addNode(newNode)\r\n                }\r\n            });\r\n            menu.push({divider: true});\r\n            menu.push({\r\n                title: i18n.t('contextMenu.main.addText'),\r\n                action: function (elm, d) {\r\n                    var newText = new model.Text(mousePosition);\r\n                    treeDesigner.addText(newText);\r\n                },\r\n\r\n            });\r\n            menu.push({divider: true});\r\n            menu.push({\r\n                title: i18n.t('contextMenu.main.paste'),\r\n                action: function (elm, d) {\r\n                    treeDesigner.pasteToNewLocation(mousePosition);\r\n                },\r\n                disabled: !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\r\n\r\n            });\r\n            menu.push({divider: true});\r\n\r\n            menu.push({\r\n                title: i18n.t('contextMenu.main.selectAllNodes'),\r\n                action: function (elm, d) {\r\n                    treeDesigner.selectAllNodes();\r\n                }\r\n            });\r\n            return menu;\r\n        };\r\n\r\n        super(menu, {onOpen: (event) => {\r\n            treeDesigner.clearSelection();\r\n            mousePosition = new model.Point(d3.pointer(event, treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true));\r\n\r\n        }});\r\n        this.treeDesigner = treeDesigner;\r\n    }\r\n}\r\n","import {ContextMenu} from './context-menu'\r\nimport {domain as model} from 'sd-model'\r\nimport {i18n} from \"../i18n/i18n\";\r\n\r\nexport class NodeContextMenu extends ContextMenu {\r\n    treeDesigner;\r\n\r\n    constructor(treeDesigner, operationsForObject) {\r\n        var menu = function (d) {\r\n\r\n            var copyMenuItem = {\r\n                title: i18n.t('contextMenu.node.copy'),\r\n                action: function (elm, d, i) {\r\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\r\n                    treeDesigner.copySelectedNodes();\r\n                }\r\n            };\r\n            var cutMenuItem = {\r\n                title: i18n.t('contextMenu.node.cut'),\r\n                action: function (elm, d, i) {\r\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\r\n                    treeDesigner.cutSelectedNodes();\r\n                }\r\n            };\r\n            var pasteMenuItem = {\r\n                title: i18n.t('contextMenu.node.paste'),\r\n                action: function (elm, d, i) {\r\n                    treeDesigner.pasteToNode(d);\r\n                },\r\n                disabled: d.folded || !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\r\n\r\n            };\r\n            var deleteMenuItem = {\r\n                title: i18n.t('contextMenu.node.delete'),\r\n                action: function (elm, d, i) {\r\n\r\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\r\n                    treeDesigner.removeSelectedNodes();\r\n\r\n                }\r\n            };\r\n\r\n            var menu = [];\r\n            if (d.type == model.TerminalNode.$TYPE) {\r\n                menu = [copyMenuItem, cutMenuItem, deleteMenuItem];\r\n                NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\r\n                return menu;\r\n            }\r\n\r\n            if(!d.folded){\r\n                menu.push({\r\n                    title: i18n.t('contextMenu.node.addDecisionNode'),\r\n                    action: function (elm, d) {\r\n                        treeDesigner.addDecisionNode(d)\r\n                    }\r\n                });\r\n                menu.push({\r\n                    title: i18n.t('contextMenu.node.addChanceNode'),\r\n                    action: function (elm, d) {\r\n                        treeDesigner.addChanceNode(d)\r\n                    }\r\n                });\r\n                menu.push({\r\n                    title: i18n.t('contextMenu.node.addTerminalNode'),\r\n                    action: function (elm, d) {\r\n                        treeDesigner.addTerminalNode(d)\r\n                    }\r\n                });\r\n                menu.push({divider: true});\r\n            }\r\n\r\n            menu.push(copyMenuItem);\r\n            menu.push(cutMenuItem);\r\n            menu.push(pasteMenuItem);\r\n            menu.push(deleteMenuItem);\r\n\r\n            NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\r\n            menu.push({divider: true});\r\n            menu.push({\r\n                title: i18n.t('contextMenu.node.selectSubtree'),\r\n                action: function (elm, d) {\r\n                    treeDesigner.selectSubTree(d, true);\r\n                }\r\n            });\r\n\r\n            if(!d.folded){\r\n                menu.push({\r\n                    title: i18n.t('contextMenu.node.fold'),\r\n                    action: function (elm, d) {\r\n                        treeDesigner.foldSubtree(d);\r\n                    }\r\n                });\r\n            }else{\r\n                menu.push({\r\n                    title: i18n.t('contextMenu.node.unfold'),\r\n                    action: function (elm, d) {\r\n                        treeDesigner.foldSubtree(d, false);\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(operationsForObject){\r\n                var operations = operationsForObject(d);\r\n                if(operations.length) {\r\n                    menu.push({divider: true});\r\n                    operations.forEach(op=>{\r\n                        menu.push({\r\n                            title: i18n.t('contextMenu.node.'+op.name),\r\n                            action: function (elm, d) {\r\n                                treeDesigner.performOperation(d, op);\r\n                            },\r\n                            disabled: !op.canPerform(d)\r\n                        });\r\n                    })\r\n                }\r\n            }\r\n\r\n            return menu;\r\n        };\r\n\r\n        super(menu);\r\n        this.treeDesigner = treeDesigner;\r\n    }\r\n\r\n    static addNodeConversionOptions(d, menu, treeDesigner){\r\n        var conversionOptions = NodeContextMenu.getNodeConversionOptions(d, treeDesigner);\r\n        if(conversionOptions.length){\r\n            menu.push({divider: true});\r\n            conversionOptions.forEach(o=>menu.push(o));\r\n\r\n        }\r\n    }\r\n\r\n    static getNodeConversionOptions(d, treeDesigner){\r\n        var options = [];\r\n\r\n        if(d.folded){\r\n            return [];\r\n        }\r\n\r\n        var allAllowedTypes = [model.DecisionNode.$TYPE, model.ChanceNode.$TYPE, model.TerminalNode.$TYPE];\r\n\r\n        if(!d.childEdges.length && d.$parent){\r\n            allAllowedTypes.filter(t=>t!==d.type).forEach(type=>{\r\n                options.push(NodeContextMenu.getNodeConversionOption(type, treeDesigner))\r\n            })\r\n        }else{\r\n            if(d instanceof model.DecisionNode){\r\n                options.push(NodeContextMenu.getNodeConversionOption(model.ChanceNode.$TYPE, treeDesigner))\r\n            }else{\r\n                options.push(NodeContextMenu.getNodeConversionOption(model.DecisionNode.$TYPE, treeDesigner))\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    static getNodeConversionOption(typeToConvertTo, treeDesigner){\r\n        return {\r\n            title: i18n.t('contextMenu.node.convert.'+typeToConvertTo),\r\n            action: function (elm, d) {\r\n                treeDesigner.convertNode(d, typeToConvertTo);\r\n            },\r\n        }\r\n    }\r\n}\r\n","import {ContextMenu} from './context-menu'\r\nimport {i18n} from \"../i18n/i18n\";\r\n\r\nexport class TextContextMenu extends ContextMenu {\r\n    treeDesigner;\r\n\r\n    constructor(treeDesigner) {\r\n        var menu = function (d) {\r\n\r\n\r\n            var deleteMenuItem = {\r\n                title: i18n.t('contextMenu.text.delete'),\r\n                action: function (elm, d, i) {\r\n\r\n                    treeDesigner.selectText(d, true, true);\r\n                    treeDesigner.removeSelectedTexts()\r\n\r\n                }\r\n            };\r\n            var menu = [];\r\n            menu.push(deleteMenuItem);\r\n            return menu;\r\n        };\r\n\r\n        super(menu);\r\n        this.treeDesigner = treeDesigner;\r\n    }\r\n}\r\n","import * as d3 from './d3'\r\n\r\nexport class D3Extensions {\r\n\r\n    static extend() {\r\n\r\n        d3.selection.prototype.enter.prototype.insertSelector =\r\n            d3.selection.prototype.insertSelector = function (selector, before) {\r\n                return D3Extensions.insertSelector(this, selector, before);\r\n            };\r\n\r\n\r\n        d3.selection.prototype.enter.prototype.appendSelector =\r\n            d3.selection.prototype.appendSelector = function (selector) {\r\n                return D3Extensions.appendSelector(this, selector);\r\n            };\r\n\r\n        d3.selection.prototype.enter.prototype.selectOrAppend =\r\n            d3.selection.prototype.selectOrAppend = function (selector) {\r\n                return D3Extensions.selectOrAppend(this, selector);\r\n            };\r\n\r\n        d3.selection.prototype.enter.prototype.selectOrInsert =\r\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\r\n                return D3Extensions.selectOrInsert(this, selector, before);\r\n            };\r\n\r\n\r\n    }\r\n\r\n    static insertOrAppendSelector(parent, selector, operation, before) {\r\n\r\n        var selectorParts = selector.split(/([\\.\\#])/);\r\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\r\n\r\n        while (selectorParts.length > 1) {\r\n            var selectorModifier = selectorParts.shift();\r\n            var selectorItem = selectorParts.shift();\r\n            if (selectorModifier === \".\") {\r\n                element = element.classed(selectorItem, true);\r\n            } else if (selectorModifier === \"#\") {\r\n                element = element.attr('id', selectorItem);\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n\r\n    static insertSelector(parent, selector, before) {\r\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\r\n    }\r\n\r\n    static appendSelector(parent, selector) {\r\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\r\n    }\r\n\r\n    static selectOrAppend(parent, selector, element) {\r\n        var selection = parent.select(selector);\r\n        if (selection.empty()) {\r\n            if (element) {\r\n                return parent.append(element);\r\n            }\r\n            return D3Extensions.appendSelector(parent, selector);\r\n\r\n        }\r\n        return selection;\r\n    };\r\n\r\n    static selectOrInsert(parent, selector, before) {\r\n        var selection = parent.select(selector);\r\n        if (selection.empty()) {\r\n            return D3Extensions.insertSelector(parent, selector, before);\r\n        }\r\n        return selection;\r\n    };\r\n}\r\n","export * from 'd3-dispatch';\r\nexport * from 'd3-scale';\r\nexport * from 'd3-selection';\r\nexport * from 'd3-shape'\r\nexport * from 'd3-drag';\r\nexport * from 'd3-brush'\r\nexport * from 'd3-array'\r\nexport * from 'd3-hierarchy'\r\nexport * from 'd3-time-format'\r\n","module.exports={\r\n    \"contextMenu\":{\r\n        \"main\":{\r\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\r\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\r\n            \"addText\": \"Text hinzufügen \",\r\n            \"paste\": \"Einfügen\",\r\n            \"selectAllNodes\": \"Alle Knoten auswählen\"\r\n        },\r\n        \"node\":{\r\n            \"copy\": \"Kopieren\",\r\n            \"cut\": \"Ausschneiden\",\r\n            \"paste\": \"Einfügen\",\r\n            \"delete\": \"Löschen\",\r\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\r\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\r\n            \"addTerminalNode\": \"Endknotten hinzufügen\",\r\n            \"convert\":{\r\n                \"decision\": \"Als Entscheidungsknoten\",\r\n                \"chance\": \"Als Zufall Knoten\",\r\n                \"terminal\": \"Als Endknoten\"\r\n            },\r\n            \"selectSubtree\": \"Teilbaum wählen\",\r\n            \"fold\": \"Teilbaum falten\",\r\n            \"unfold\": \"Teilbaum entfalten\",\r\n\r\n            \"flipSubtree\": \"Teilbaum umdrehen\",\r\n            \"payoffsTransformation\": \"Auszahlungen transformieren\"\r\n        },\r\n        \"edge\":{\r\n            \"injectDecisionNode\": \"Entscheidungsknoten Injizieren\",\r\n            \"injectChanceNode\": \"Zufall Knoten Injizieren\"\r\n        },\r\n        \"text\":{\r\n            \"delete\": \"Löschen\"\r\n        }\r\n    },\r\n    \"validation\":{\r\n        \"incompletePath\": \"Pfad, der nicht mit dem Endknoten endet\",\r\n        \"probabilityDoNotSumUpTo1\": \"Die Summe der Wahrscheinlichkeiten ist nicht gleich 1\",\r\n        \"invalidProbability\": \"Ungültige Wahrscheinlichkeit im Zweig #{{number}}\",\r\n        \"invalidPayoff\": \"Ungültige Auszahlung in Zweig #{{number}}\"\r\n    },\r\n    \"growl\":{\r\n        \"brushDisabled\": \"Auswahlbürste deaktiviert\",\r\n        \"brushEnabled\": \"Auswahlbürste aktiviert\"\r\n    },\r\n    \"tooltip\":{\r\n        \"node\":{\r\n            \"payoff\": {\r\n                \"default\": \"Auszahlung {{number}}\",\r\n                \"named\": \"{{name}}\"\r\n            },\r\n            \"aggregatedPayoff\": {\r\n                \"default\": \"Aggregierte Auszahlung {{number}}\",\r\n                \"named\": \"Aggregierte {{name}}\"\r\n            },\r\n            \"probabilityToEnter\": \"Wahrscheinlichkeit\"\r\n        },\r\n        \"edge\":{\r\n            \"payoff\": {\r\n                \"default\": \"Auszahlung {{number}}: {{value}}\",\r\n                \"named\": \"{{name}}: {{value}}\"\r\n            },\r\n            \"probability\": \"Wahrscheinlichkeit: {{value}}\"\r\n        }\r\n    }\r\n}\r\n","module.exports={\r\n    \"contextMenu\":{\r\n        \"main\":{\r\n            \"addDecisionNode\": \"Add Decision Node\",\r\n            \"addChanceNode\": \"Add Chance Node\",\r\n            \"addText\": \"Add Text\",\r\n            \"paste\": \"Paste\",\r\n            \"selectAllNodes\": \"Select all nodes\"\r\n        },\r\n        \"node\":{\r\n            \"copy\": \"Copy\",\r\n            \"cut\": \"Cut\",\r\n            \"paste\": \"Paste\",\r\n            \"delete\": \"Delete\",\r\n            \"addDecisionNode\": \"Add Decision Node\",\r\n            \"addChanceNode\": \"Add Chance Node\",\r\n            \"addTerminalNode\": \"Add Terminal Node\",\r\n            \"convert\":{\r\n                \"decision\": \"As Decision Node\",\r\n                \"chance\": \"As Chance Node\",\r\n                \"terminal\": \"As Terminal Node\"\r\n            },\r\n            \"selectSubtree\": \"Select subtree\",\r\n            \"fold\": \"Fold subtree\",\r\n            \"unfold\": \"Unfold subtree\",\r\n            \"flipSubtree\": \"Flip subtree\",\r\n            \"payoffsTransformation\": \"Transform payoffs\"\r\n        },\r\n        \"edge\":{\r\n            \"injectDecisionNode\": \"Inject Decision Node\",\r\n            \"injectChanceNode\": \"Inject Chance Node\"\r\n        },\r\n        \"text\":{\r\n            \"delete\": \"Delete\"\r\n        }\r\n    },\r\n    \"validation\":{\r\n        \"incompletePath\": \"Path not ending with terminal node\",\r\n        \"probabilityDoNotSumUpTo1\": \"Probabilities do not sum up to 1\",\r\n        \"invalidProbability\": \"Invalid probability in edge #{{number}}\",\r\n        \"invalidPayoff\": \"Invalid payoff in edge #{{number}}\"\r\n    },\r\n    \"growl\":{\r\n        \"brushDisabled\": \"Selection brush disabled\",\r\n        \"brushEnabled\": \"Selection brush enabled\"\r\n    },\r\n    \"tooltip\":{\r\n        \"node\":{\r\n            \"payoff\": {\r\n                \"default\": \"Payoff {{number}}\",\r\n                \"named\": \"{{name}}\"\r\n            },\r\n            \"aggregatedPayoff\": {\r\n                \"default\": \"Aggregated Payoff {{number}}\",\r\n                \"named\": \"Aggregated {{name}}\"\r\n            },\r\n            \"probabilityToEnter\": \"Probability to enter\"\r\n        },\r\n        \"edge\":{\r\n            \"payoff\": {\r\n                \"default\": \"Payoff {{number}}: {{value}}\",\r\n                \"named\": \"{{name}}: {{value}}\"\r\n            },\r\n            \"probability\": \"Probability: {{value}}\"\r\n        }\r\n    }\r\n}\r\n","module.exports={\r\n    \"contextMenu\":{\r\n        \"main\":{\r\n            \"addDecisionNode\": \"Ajouter noud de décision\",\r\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\r\n            \"addText\": \"Ajouter du texte\",\r\n            \"paste\": \"Coller\",\r\n            \"selectAllNodes\": \"Sélectionner tous les nouds\"\r\n        },\r\n        \"node\":{\r\n            \"copy\": \"Copie\",\r\n            \"cut\": \"Couper\",\r\n            \"paste\": \"Coller\",\r\n            \"delete\": \"Effacer\",\r\n            \"addDecisionNode\": \"Ajouter noud de décision\",\r\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\r\n            \"addTerminalNode\": \"Ajouter un noeud terminal\",\r\n            \"convert\":{\r\n                \"decision\": \"Comme noud de décision\",\r\n                \"chance\": \"Comme noud aléatoire\",\r\n                \"terminal\": \"Comme un noeud terminal\"\r\n            },\r\n            \"selectSubtree\": \"Sélectionner une sous-arborescence\",\r\n            \"fold\": \"Plier sous-arbre\",\r\n            \"unfold\": \"Déplier arbre sous-arbre\",\r\n            \"flipSubtree\": \"Basculer sous-arbre\",\r\n            \"payoffsTransformation\": \"Transformez les gains\"\r\n        },\r\n        \"edge\":{\r\n            \"injectDecisionNode\": \"Injecter un noeud de décision\",\r\n            \"injectChanceNode\": \"Injecter un noeud de chance\"\r\n        },\r\n        \"text\":{\r\n            \"delete\": \"Effacer\"\r\n        }\r\n    },\r\n    \"validation\":{\r\n        \"incompletePath\": \"Parcours non terminé par noeud terminal\",\r\n        \"probabilityDoNotSumUpTo1\": \"La somme des probabilités n'est pas 1 ou plus\",\r\n        \"invalidProbability\": \"Probabilité invalide - le bord #{{number}}\",\r\n        \"invalidPayoff\": \"Avantage invalide - le bord #{{number}}\"\r\n    },\r\n    \"growl\":{\r\n        \"brushDisabled\": \"Brosse de sélection désactivée\",\r\n        \"brushEnabled\": \"Brosse de sélection activée\"\r\n    },\r\n    \"tooltip\":{\r\n        \"node\":{\r\n            \"payoff\": {\r\n                \"default\": \"Avantage {{number}}\",\r\n                \"named\": \"{{name}}\"\r\n            },\r\n            \"aggregatedPayoff\": {\r\n                \"default\": \"Avantage agrégé {{number}}\",\r\n                \"named\": \"Agrégé  {{name}}\"\r\n            },\r\n            \"probabilityToEnter\": \"Probabilité d'entrée\"\r\n        },\r\n        \"edge\":{\r\n            \"payoff\": {\r\n                \"default\": \"Avantage {{number}}: {{value}}\",\r\n                \"named\": \"{{name}}: {{value}}\"\r\n            },\r\n            \"probability\": \"Probabilité: {{value}}\"\r\n        }\r\n    }\r\n}\r\n","import i18next from 'i18next';\r\nimport * as en from './en.json'\r\nimport * as pl from './pl.json'\r\nimport * as it from './it.json'\r\nimport * as de from './de.json'\r\nimport * as fr from './fr.json'\r\nimport * as pt_br from './pt-br.json'\r\n\r\nexport class i18n{\r\n\r\n    static $instance;\r\n    static language;\r\n\r\n    static init(lng){\r\n        i18n.language = lng;\r\n        let resources = {\r\n            en: {\r\n                translation: en\r\n            },\r\n            pl: {\r\n                translation: pl\r\n            },\r\n            it: {\r\n                translation: it\r\n            },\r\n            de: {\r\n                translation: de\r\n            },\r\n            fr: {\r\n                translation: fr\r\n            },\r\n            'pt-BR': {\r\n                translation: pt_br\r\n            }\r\n        };\r\n        i18n.$instance = i18next.createInstance({\r\n            lng: lng,\r\n            fallbackLng: 'en',\r\n            resources: resources\r\n        }, (err, t) => {\r\n        });\r\n    }\r\n\r\n    static t(key, opt){\r\n        return i18n.$instance.t(key, opt)\r\n    }\r\n}\r\n","module.exports={\r\n    \"contextMenu\":{\r\n        \"main\":{\r\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\r\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\r\n            \"addText\": \"Aggiungi testo\",\r\n            \"paste\": \"Incolla\",\r\n            \"selectAllNodes\": \"Seleziona tutti i nodi\"\r\n        },\r\n        \"node\":{\r\n            \"copy\": \"Copia\",\r\n            \"cut\": \"Taglia\",\r\n            \"paste\": \"Incolla\",\r\n            \"delete\": \"Cancella\",\r\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\r\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\r\n            \"addTerminalNode\": \"Aggiungi un nodo terminale\",\r\n            \"convert\":{\r\n                \"decision\": \"Come Decision Node\",\r\n                \"chance\": \"Come Chance Node\",\r\n                \"terminal\": \"Come Terminal Node\"\r\n            },\r\n            \"selectSubtree\": \"Seleziona Sotto-albero\",\r\n            \"fold\": \"Piega sotto-albero\",\r\n            \"unfold\": \"Dispiegarsi sotto-albero\",\r\n            \"flipSubtree\": \"Ribalta sotto-albero\",\r\n            \"payoffsTransformation\": \"Trasforma i profitti\"\r\n        },\r\n        \"edge\":{\r\n            \"injectDecisionNode\": \"Inietta nodo di decisione\",\r\n            \"injectChanceNode\": \"Inietta nodo opportunità\"\r\n        },\r\n        \"text\":{\r\n            \"delete\": \"Cancella\"\r\n        }\r\n    },\r\n    \"validation\":{\r\n        \"incompletePath\": \"Percorso senza nodo terminale\",\r\n        \"probabilityDoNotSumUpTo1\": \"La somma delle probabilità è diversa da 1\",\r\n        \"invalidProbability\": \"Probabilità non valida - bordo #{{number}}\",\r\n        \"invalidPayoff\": \"Saldo non valido - bordo #{{number}}\"\r\n    },\r\n    \"growl\":{\r\n        \"brushDisabled\": \"Selezione pennello disabilitata\",\r\n        \"brushEnabled\": \"Selezione pennello abilitata\"\r\n    },\r\n    \"tooltip\":{\r\n        \"node\":{\r\n            \"payoff\": {\r\n                \"default\": \"Saldo {{number}}\",\r\n                \"named\": \"{{name}}\"\r\n            },\r\n            \"aggregatedPayoff\": {\r\n                \"default\": \"Saldo aggregato {{number}}\",\r\n                \"named\": \"Aggregato {{name}}\"\r\n            },\r\n            \"probabilityToEnter\": \"Probabilità da inserire\"\r\n        },\r\n        \"edge\":{\r\n            \"payoff\": {\r\n                \"default\": \"Saldo {{number}}: {{value}}\",\r\n                \"named\": \"{{name}}: {{value}}\"\r\n            },\r\n            \"probability\": \"Probabilità: {{value}}\"\r\n        }\r\n    }\r\n}\r\n","module.exports={\r\n\r\n    \"contextMenu\":{\r\n        \"main\":{\r\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\r\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\r\n            \"addText\": \"Dodaj Tekst\",\r\n            \"paste\": \"Wklej\",\r\n            \"selectAllNodes\": \"Zaznacz wszystkie węzły\"\r\n        },\r\n        \"node\":{\r\n            \"copy\": \"Kopiuj\",\r\n            \"cut\": \"Wytnij\",\r\n            \"paste\": \"Wklej\",\r\n            \"delete\": \"Usuń\",\r\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\r\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\r\n            \"addTerminalNode\": \"Dodaj Węzeł Końcowy\",\r\n            \"convert\":{\r\n                \"decision\": \"Jako Węzeł Decyzyjny\",\r\n                \"chance\": \"Jako Węzeł Losowy\",\r\n                \"terminal\": \"Jako Węzeł Końcowy\"\r\n            },\r\n            \"selectSubtree\": \"Zaznacz poddrzewo\",\r\n            \"fold\": \"Zwiń poddrzewo\",\r\n            \"unfold\": \"Rozwiń poddrzewo\",\r\n            \"flipSubtree\": \"Przewróć poddrzewo\",\r\n            \"payoffsTransformation\": \"Przekształć wypłaty\"\r\n        },\r\n        \"edge\":{\r\n            \"injectDecisionNode\": \"Wstrzyknij Węzeł Decyzyjny\",\r\n            \"injectChanceNode\": \"Wstrzyknij Węzeł Losowy\"\r\n        },\r\n        \"text\":{\r\n            \"delete\": \"Usuń\"\r\n        }\r\n    },\r\n\r\n    \"validation\":{\r\n        \"incompletePath\": \"Ostatnim węzłem w ścieżce powinien być Węzeł Końcowy\",\r\n        \"probabilityDoNotSumUpTo1\": \"Prawdopodobieństwa nie sumują sie do 1\",\r\n        \"invalidProbability\": \"Niepoprawne prawdopodobieństwo na krawędzi #{{number}}\",\r\n        \"invalidPayoff\": \"Niepoprawna wypłata na krawędzi #{{number}}\"\r\n    },\r\n    \"growl\":{\r\n        \"brushDisabled\": \"Zaznaczanie wyłączone\",\r\n        \"brushEnabled\": \"Zaznaczanie włączone\"\r\n    },\r\n    \"tooltip\":{\r\n        \"node\":{\r\n            \"payoff\": {\r\n                \"default\": \"Wypłata {{number}}\",\r\n                \"named\": \"{{name}}\"\r\n            },\r\n            \"aggregatedPayoff\": {\r\n                \"default\": \"Zagregowana wypłata {{number}}\",\r\n                \"named\": \"Zagregowana {{name}}\"\r\n            },\r\n            \"probabilityToEnter\": \"Prawdopodobieństwo wejścia\"\r\n        },\r\n        \"edge\":{\r\n            \"payoff\": {\r\n                \"default\": \"Wypłata {{number}}: {{value}}\",\r\n                \"named\": \"{{name}}: {{value}}\"\r\n            },\r\n            \"probability\": \"Prawdopodobieństwo: {{value}}\"\r\n        }\r\n    }\r\n}\r\n","module.exports={\r\n    \"contextMenu\":{\r\n        \"main\":{\r\n            \"addDecisionNode\": \"Adicionar nó de decisão\",\r\n            \"addChanceNode\": \"Adicionar Nó de probabilidade\",\r\n            \"addText\": \"Adicionar Texto\",\r\n            \"paste\": \"Colar\",\r\n            \"selectAllNodes\": \"Selecionar todos os nós\"\r\n        },\r\n        \"node\":{\r\n            \"copy\": \"Copiar\",\r\n            \"cut\": \"Cortar\",\r\n            \"paste\": \"Colar\",\r\n            \"delete\": \"Excluir\",\r\n            \"addDecisionNode\": \"Adicionar nó de decisão\",\r\n            \"addChanceNode\": \"Adicionar Nó de chance\",\r\n            \"addTerminalNode\": \"Adicionar Nó Terminal\",\r\n            \"convert\":{\r\n                \"decision\": \"Como nó de decisão\",\r\n                \"chance\": \"Como Nó de Chance\",\r\n                \"terminal\": \"Como Nó Terminal\"\r\n            },\r\n            \"selectSubtree\": \"Selecionar subárvore\",\r\n            \"fold\": \"Dobrar subárvore\",\r\n            \"unfold\": \"Desdobrar subárvore\",\r\n            \"flipSubtree\": \"Inverter subárvore\",\r\n            \"payoffsTransformation\": \"Transformar pesos\"\r\n        },\r\n        \"edge\":{\r\n            \"injectDecisionNode\": \"Injetar Nó de Decisão\",\r\n            \"injectChanceNode\": \"Injetar Nó de Chance\"\r\n        },\r\n        \"text\":{\r\n            \"delete\": \"Excluir\"\r\n        }\r\n    },\r\n    \"validation\":{\r\n        \"incompletePath\": \"O caminho não termina com o nó terminal\",\r\n        \"probabilityDoNotSumUpTo1\": \"Probabilidades não somam até 1\",\r\n        \"invalidProbability\": \"Probabilidade inválida na borda # {{number}}\",\r\n        \"invalidPayoff\": \"Pagamento inválido na borda # {{number}}\"\r\n    },\r\n    \"growl\":{\r\n        \"brushDisabled\": \"Pincel de seleção desativado\",\r\n        \"brushEnabled\": \"Pincel de seleção habilitado\"\r\n    },\r\n    \"tooltip\":{\r\n        \"node\":{\r\n            \"payoff\": {\r\n                \"default\": \"Pagar {{number}}\",\r\n                \"named\": \"{{name}}\"\r\n            },\r\n            \"aggregatedPayoff\": {\r\n                \"default\": \"Pagar agregado {{number}}\",\r\n                \"named\": \"Agregado {{name}}\"\r\n            },\r\n            \"probabilityToEnter\": \"Probabilidade de entrar\"\r\n        },\r\n        \"edge\":{\r\n            \"payoff\": {\r\n                \"default\": \"Pagar {{number}}: {{value}}\",\r\n                \"named\": \"{{name}}: {{value}}\"\r\n            },\r\n            \"probability\": \"Probabilidade: {{value}}\"\r\n        }\r\n    }\r\n}\r\n","import {D3Extensions} from './d3-extensions'\r\nD3Extensions.extend();\r\n\r\nexport * from './tree-designer'\r\nexport * from './app-utils'\r\nexport * from './templates'\r\nexport * from './tooltip'\r\nexport * from './d3-extensions'\r\nexport {default as d3} from './d3'\r\n\r\n\r\n","import {Utils} from 'sd-utils'\r\nimport {domain as model} from 'sd-model'\r\nimport * as d3 from './d3'\r\nimport circleSymbol from './symbols/circle'\r\nimport triangleSymbol from './symbols/triangle'\r\nimport {AppUtils} from \"./app-utils\";\r\n\r\n/*Tree layout manager*/\r\nexport class Layout{\r\n\r\n    treeDesigner;\r\n    data;\r\n    config;\r\n\r\n    nodeTypeToSymbol = {\r\n        'decision': d3.symbolSquare,\r\n        'chance': circleSymbol,\r\n        \"terminal\": triangleSymbol\r\n    };\r\n\r\n    static MANUAL_LAYOUT_NAME = 'manual';\r\n\r\n\r\n    onAutoLayoutChanged=[];\r\n\r\n    nodeTypeOrder = {\r\n        'decision' : 0,\r\n        'chance': 0,\r\n        'terminal': 1\r\n    };\r\n\r\n    treeMargin = 50;\r\n    targetSymbolSize={};\r\n    nodeSeparation = (a, b) => a.parent === b.parent ? 1 : 1.2\r\n\r\n    constructor(treeDesigner, data, config){\r\n        this.treeDesigner = treeDesigner;\r\n        this.data = data;\r\n        this.config = config;\r\n\r\n    }\r\n\r\n    update(node){\r\n        if(node && node.$parent){\r\n            node.$parent.childEdges.sort((a,b)=>a.childNode.location.y - b.childNode.location.y)\r\n        }\r\n        if(!this.isManualLayout()){\r\n            return this.autoLayout(this.config.type, true);\r\n        }\r\n        if(node){\r\n            this.moveNodeToEmptyPlace(node);\r\n        }else{\r\n            this.treeDesigner.redraw(true);\r\n        }\r\n    }\r\n\r\n    isManualLayout(){\r\n        return this.config.type === Layout.MANUAL_LAYOUT_NAME;\r\n    }\r\n\r\n    getNewChildLocation(parent){\r\n        if(!parent){\r\n            return new model.Point(this.getNodeMinX(), this.getNodeMinY())\r\n        }\r\n        var x = parent.location.x + this.config.gridWidth;\r\n        var y = parent.location.y;\r\n        if(parent.childEdges.length){\r\n            y = parent.childEdges[parent.childEdges.length-1].childNode.location.y+1;\r\n        }\r\n\r\n        return new model.Point(x, y)\r\n    }\r\n\r\n    getInjectedNodeLocation(edge){\r\n\r\n        var p = edge.$linePoints[2];\r\n\r\n        return new model.Point(p[0], p[1])\r\n    }\r\n\r\n    moveNodeToEmptyPlace(node, redrawIfChanged=true){\r\n        var positionMap = {};\r\n        var self = this;\r\n        node.location.x = Math.max(this.getNodeMinX(node), node.location.x);\r\n        node.location.y = Math.max(this.getNodeMinY(node), node.location.y);\r\n\r\n\r\n        this.nodesSortedByX = this.data.nodes.slice();\r\n        this.nodesSortedByX.sort((a,b)=>a.location.x - b.location.x);\r\n\r\n        function findCollidingNode(node, location){\r\n            return Utils.find(self.nodesSortedByX, n=>{\r\n                if(node == n){\r\n                    return false;\r\n                }\r\n\r\n                var margin = self.config.nodeSize/3;\r\n                var x = n.location.x;\r\n                var y = n.location.y;\r\n\r\n                return (location.x - margin <= x && location.x + margin >= x\r\n                    && location.y - margin <= y && location.y + margin >= y)\r\n            });\r\n        }\r\n\r\n        var stepX = this.config.nodeSize/2;\r\n        var stepY = this.config.nodeSize+10;\r\n        var stepXsameParent = 0;\r\n        var stepYsameParent = 75;\r\n        var changed = false;\r\n        var colidingNode;\r\n        var newLocation = new model.Point(node.location);\r\n        while(colidingNode = findCollidingNode(node, newLocation)){\r\n            changed=true;\r\n            var sameParent = node.$parent && colidingNode.$parent && node.$parent===colidingNode.$parent;\r\n            if(sameParent){\r\n                newLocation.move(stepXsameParent, stepYsameParent);\r\n            }else{\r\n                newLocation.move(stepX, stepY);\r\n            }\r\n        }\r\n        if(changed){\r\n            node.moveTo(newLocation.x,newLocation.y, true);\r\n            if(redrawIfChanged){\r\n                this.treeDesigner.redraw(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    disableAutoLayout(){\r\n        this.config.type = Layout.MANUAL_LAYOUT_NAME;\r\n        this._fireOnAutoLayoutChangedCallbacks();\r\n    }\r\n\r\n\r\n    nodeSymbolSize = {};\r\n    drawNodeSymbol(path, transition){\r\n\r\n        var self = this;\r\n        var nodeSize = this.config.nodeSize;\r\n        this.nodeSymbol = d3.symbol().type(d=> self.nodeTypeToSymbol[d.type])\r\n            .size(d=>self.nodeSymbolSize[d.id] ? Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", 64) : 64);\r\n\r\n        path\r\n            .each(function (d) {\r\n                var path = d3.select(this);\r\n                var prev = path.attr(\"d\");\r\n                if(!prev){\r\n                    path.attr(\"d\", self.nodeSymbol);\r\n                }\r\n                var size = Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\");\r\n                if(!size){\r\n                    var box = path.node().getBBox();\r\n                    var error = Math.min(nodeSize / box.width, nodeSize / box.height);\r\n                    size = error * error * (self.nodeSymbolSize[d.id]||64);\r\n                    Utils.set(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", size);\r\n                }\r\n                if(transition){\r\n                    path =  path.transition();\r\n\r\n                }else{\r\n                    self.nodeSymbolSize[d.id] = size;\r\n                }\r\n                path.attr(\"d\", self.nodeSymbol);\r\n                if(transition){\r\n                    self.nodeSymbolSize[d.id] = size;\r\n                }\r\n            });\r\n    }\r\n\r\n    nodeLabelPosition(selection) {\r\n        return selection\r\n            .attr('x', 0)\r\n            .attr('y', -this.config.nodeSize / 2 - 7)\r\n    }\r\n\r\n    nodePayoffPosition(selection) {\r\n        return Layout.setHangingPosition(selection)\r\n            .attr('x', 0)\r\n            .attr('y', this.config.nodeSize / 2 + 7)\r\n            .attr('text-anchor', 'middle')\r\n    }\r\n\r\n    nodeAggregatedPayoffPosition(selection) {\r\n        var x = this.config.nodeSize / 2 + 7;\r\n        var self = this;\r\n        selection\r\n            .attr('x', x)\r\n            .attr('y', function(d){\r\n                let fontSize = parseInt(AppUtils.getFontSize(this));\r\n                let items = d.displayValue('aggregatedPayoff');\r\n                let number = Utils.isArray(items) ? items.filter(it=>it !== undefined).length : 1;\r\n                if(number>1){\r\n                    return -this.getBBox().height/2 + fontSize/2;\r\n                }\r\n                return -Math.max(2, 1.8* self.config.nodeSize/fontSize);\r\n            });\r\n\r\n        selection.selectAll('tspan').attr('x', x);\r\n        return selection;\r\n            // .attr('text-anchor', 'middle')\r\n            // .attr('dominant-baseline', 'hanging')\r\n    }\r\n\r\n    nodeProbabilityToEnterPosition(selection) {\r\n        var self = this;\r\n\r\n        return Layout.setHangingPosition(selection)\r\n            .attr('x', this.config.nodeSize / 2 + 7)\r\n            .attr('y', function(d){\r\n                let fontSize = parseInt(AppUtils.getFontSize(this));\r\n                let aggregatedPayoffs = d.displayValue('aggregatedPayoff');\r\n                let aggregatedPayoffsNumber = Utils.isArray(aggregatedPayoffs) ? aggregatedPayoffs.filter(it=>it !== undefined).length : 1;\r\n                if(aggregatedPayoffsNumber>1){\r\n\r\n                    return fontSize*0.6\r\n                }\r\n\r\n                return Math.max(2, 1.8* self.config.nodeSize/fontSize);\r\n            })\r\n            // .attr('text-anchor', 'middle')\r\n            // .attr('dominant-baseline', 'central')\r\n    }\r\n\r\n    nodeIndicatorPosition(selection) {\r\n        return selection\r\n            .attr('x', this.config.nodeSize / 2 + 8)\r\n            .attr('y', - this.config.nodeSize/2)\r\n            .attr('dominant-baseline', 'central')\r\n            .attr('text-anchor', 'middle')\r\n    }\r\n\r\n    nodeUnfoldButtonPosition(selection) {\r\n\r\n        return selection\r\n            .attr('x', this.config.nodeSize / 2 + 5)\r\n            .attr('y', 0)\r\n            .attr('dominant-baseline', 'central')\r\n    }\r\n\r\n    edgeLineD(edge){\r\n        var line = d3.line()\r\n            .x(d=> d[0])\r\n            .y(d=> d[1]);\r\n        // .curve(d3.curveCatmullRom.alpha(0.5));\r\n\r\n\r\n        var parentNode = edge.parentNode;\r\n        var childNode = edge.childNode;\r\n\r\n        var dX = childNode.location.x - parentNode.location.x;\r\n        var dY = childNode.location.y - parentNode.location.y;\r\n\r\n        var sign = dX>=0 ? 1 : -1;\r\n\r\n        var slantStartXOffset = Math.min(dX/2, this.config.nodeSize/2+10);\r\n        var slantWidth = Math.min(this.config.edgeSlantWidthMax, Math.max(dX/2 - slantStartXOffset, 0));\r\n\r\n        var point1 = [parentNode.location.x +this.config.nodeSize/2 + 1, parentNode.location.y];\r\n        var point2 = [Math.max(parentNode.location.x+slantStartXOffset, point1[0]), parentNode.location.y];\r\n        var point3 = [parentNode.location.x+slantStartXOffset+slantWidth, childNode.location.y];\r\n        var point4 = [childNode.location.x - (sign*(Math.max(0, Math.min(this.config.nodeSize/2+8, dX/2)))), childNode.location.y];\r\n        // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\r\n        // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\r\n\r\n        edge.$linePoints = [point1, point2, point3, point4];\r\n        return line(edge.$linePoints);\r\n    }\r\n\r\n    edgePayoffPosition(selection) {\r\n        Layout.setHangingPosition(selection)\r\n            .attr('x', d=>d.$linePoints[2][0] + 2)\r\n            .attr('y', d=>d.$linePoints[2][1] + 7);\r\n\r\n        selection.selectAll('tspan').attr('x', function(d){\r\n            return d3.select(this.parentNode).datum().$linePoints[2][0] + 2\r\n        });\r\n        return selection;\r\n\r\n    }\r\n\r\n    edgeLabelPosition(selection) {\r\n        return selection\r\n            .attr('transform', d=>'translate('+(d.$linePoints[2][0] + 2)+','+(d.$linePoints[2][1] - 7)+')')\r\n            // .attr('x', d=>d.$linePoints[2][0] + 2)\r\n            // .attr('y', d=>d.$linePoints[2][1] - 7)\r\n\r\n    }\r\n\r\n    edgeProbabilityPosition(selection) {\r\n        return Layout.setHangingPosition(selection)\r\n            .attr('x', function (d) {\r\n                var len = this.getComputedTextLength();\r\n                var min = d.$linePoints[2][0] + 2 + this.previousSibling.childNodes[0].getComputedTextLength() + 7 + len;\r\n                return Math.max(min, d.$linePoints[3][0] - 8);\r\n            })\r\n            .attr('y', d=>d.$linePoints[2][1] + 7)\r\n    }\r\n\r\n    getMinMarginBetweenNodes(){\r\n      return this.config.nodeSize + 30;\r\n    }\r\n\r\n    getTextMinX(d){\r\n        let minX = 0;\r\n        if(d){\r\n            let bb = this.treeDesigner.getTextD3Selection(d).select('text').node().getBBox();\r\n            if (bb.x < 0) {\r\n                minX -= bb.x;\r\n            }\r\n        }\r\n        return minX;\r\n    }\r\n\r\n    getTextMinY(d){\r\n        let minY = 0;\r\n        if(d){\r\n            let bb = this.treeDesigner.getTextD3Selection(d).select('text').node().getBBox();\r\n            if (bb.y < 0) {\r\n                minY -= bb.y;\r\n            }\r\n        }\r\n        return minY;\r\n    }\r\n\r\n    getTextMaxX(d){\r\n        return Number.MAX_SAFE_INTEGER;\r\n    }\r\n\r\n\r\n    getNodeMinX(d){\r\n        var self = this;\r\n        if(d && d.$parent){// && !self.isNodeSelected(d.$parent)\r\n            return d.$parent.location.x + self.getMinMarginBetweenNodes();\r\n        }\r\n        return self.config.nodeSize/2;\r\n    }\r\n\r\n    getNodeMinY(d){\r\n        return this.config.nodeSize/2;\r\n    }\r\n\r\n    getNodeMaxX(d){\r\n        var self = this;\r\n\r\n        if(d && d.childEdges.length){\r\n            return d3.min(d.childEdges, e=>!e.childNode.$hidden ? e.childNode.location.x : 9999999)-self.getMinMarginBetweenNodes();\r\n        }\r\n        return Number.MAX_SAFE_INTEGER;\r\n    }\r\n\r\n    setGridWidth(width, withoutStateSaving){\r\n        var self=this;\r\n        if(this.config.gridWidth===width){\r\n            return;\r\n        }\r\n        if(!withoutStateSaving){\r\n            this.data.saveState({\r\n                data:{\r\n                    gridWidth: self.config.gridWidth\r\n                },\r\n                onUndo: (data)=> {\r\n                    self.setGridWidth(data.gridWidth, true);\r\n                },\r\n                onRedo: (data)=> {\r\n                    self.setGridWidth(width, true);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.config.gridWidth=width;\r\n        this.update();\r\n    }\r\n\r\n    setGridHeight(gridHeight, withoutStateSaving){\r\n        var self=this;\r\n        if(this.config.gridHeight===gridHeight){\r\n            return;\r\n        }\r\n        if(!withoutStateSaving){\r\n            this.data.saveState({\r\n                data:{\r\n                    gridHeight: self.config.gridHeight\r\n                },\r\n                onUndo: (data)=> {\r\n                    self.setGridHeight(data.gridHeight, true);\r\n                },\r\n                onRedo: (data)=> {\r\n                    self.setGridHeight(gridHeight, true);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.config.gridHeight=gridHeight;\r\n        this.update();\r\n    }\r\n\r\n    setNodeSize(nodeSize, withoutStateSaving){\r\n        var self=this;\r\n        if(this.config.nodeSize===nodeSize){\r\n            return;\r\n        }\r\n        if(!withoutStateSaving){\r\n            this.data.saveState({\r\n                data:{\r\n                    nodeSize: self.config.nodeSize\r\n                },\r\n                onUndo: (data)=> {\r\n                    self.setNodeSize(data.nodeSize, true);\r\n                },\r\n                onRedo: (data)=> {\r\n                    self.setNodeSize(nodeSize, true);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.config.nodeSize=nodeSize;\r\n        this.update();\r\n        if(this.isManualLayout()){\r\n            this.fitNodesInPlottingRegion(self.data.getRoots());\r\n            this.treeDesigner.redraw(true);\r\n        }\r\n    }\r\n\r\n    setEdgeSlantWidthMax(width, withoutStateSaving){\r\n        var self=this;\r\n        if(this.config.edgeSlantWidthMax===width){\r\n            return;\r\n        }\r\n        if(!withoutStateSaving){\r\n            this.data.saveState({\r\n                data:{\r\n                    edgeSlantWidthMax: self.config.edgeSlantWidthMax\r\n                },\r\n                onUndo: (data)=> {\r\n                    self.setEdgeSlantWidthMax(data.edgeSlantWidthMax, true);\r\n                },\r\n                onRedo: (data)=> {\r\n                    self.setEdgeSlantWidthMax(width, true);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.config.edgeSlantWidthMax=width;\r\n        this.treeDesigner.redraw(true);\r\n    }\r\n\r\n    autoLayout(type, withoutStateSaving){\r\n        var self=this;\r\n\r\n\r\n\r\n        if(!withoutStateSaving){\r\n            this.data.saveState({\r\n                data:{\r\n                    newLayout: type,\r\n                    currentLayout: self.config.type\r\n                },\r\n                onUndo: (data)=> {\r\n                    self.config.type = data.currentLayout;\r\n                    self._fireOnAutoLayoutChangedCallbacks();\r\n                },\r\n                onRedo: (data)=> {\r\n                    self.autoLayout(data.newLayout, true);\r\n                }\r\n            });\r\n        }\r\n        this.config.type = type;\r\n        if(!this.data.nodes.length){\r\n            this._fireOnAutoLayoutChangedCallbacks();\r\n            return;\r\n        }\r\n\r\n        var prevTreeMaxY = self.getNodeMinY();\r\n        this.data.getRoots().forEach(r=>{\r\n            var root = d3.hierarchy(r, d=>{\r\n                return d.childEdges.filter(e=>!e.$hidden).map(e=>e.childNode);\r\n            });\r\n\r\n            // root.sort((a,b)=>self.nodeTypeOrder[a.data.type]-self.nodeTypeOrder[b.data.type]);\r\n            root.sort((a,b)=>a.data.location.y - b.data.location.y);\r\n\r\n\r\n            var layout;\r\n            if(type==='cluster'){\r\n                layout = d3.cluster();\r\n            }else{\r\n                layout = d3.tree();\r\n            }\r\n            layout.nodeSize([self.config.gridHeight, self.config.gridWidth]);\r\n            layout.separation(self.nodeSeparation);\r\n\r\n            layout(root);\r\n            var minY = 999999999;\r\n            root.each(d=>{\r\n                minY = Math.min(minY, d.x);\r\n            });\r\n\r\n            var dy = root.x - minY + prevTreeMaxY;\r\n            var dx = self.getNodeMinX();\r\n            var maxY=0;\r\n            root.each(d=>{\r\n                d.data.location.x = d.y + dx;\r\n                d.data.location.y = d.x + dy;\r\n\r\n                maxY = Math.max(maxY, d.data.location.y);\r\n            });\r\n\r\n            prevTreeMaxY = maxY + self.config.nodeSize+self.treeMargin;\r\n        });\r\n\r\n\r\n        // this.transition = true;\r\n        this.treeDesigner.redraw(true);\r\n        // this.transition = false;\r\n\r\n        this._fireOnAutoLayoutChangedCallbacks();\r\n        return this;\r\n    }\r\n\r\n    fitNodesInPlottingRegion(nodes){\r\n        var self = this;\r\n        var topY = d3.min(nodes, n=>n.location.y);\r\n        var minY = self.getNodeMinY();\r\n        var dy = topY - minY;\r\n\r\n        var minX = d3.min(nodes, n=>n.location.x);\r\n        var dx = minX - self.getNodeMinX();\r\n\r\n        if(dy<0 ||  dx<0){\r\n            nodes.forEach(n=>n.move(-dx, -dy));\r\n        }\r\n    }\r\n\r\n    moveNodes(nodes, dx, dy, pivot){\r\n        var self = this;\r\n        var limit = self.config.limitNodePositioning;\r\n        if(limit){\r\n            if(dx<0){\r\n                nodes.sort((a,b)=>a.location.x-b.location.x);\r\n            }else{\r\n                nodes.sort((a,b)=>b.location.x-a.location.x);\r\n            }\r\n        }\r\n\r\n\r\n        var minY = d3.min(nodes, d=>d.location.y);\r\n        if(minY + dy < self.getNodeMinY()){\r\n            dy = self.getNodeMinY() - minY;\r\n        }\r\n\r\n        nodes.forEach(d=>{\r\n            if(limit){\r\n                Layout.backupNodeLocation(d);\r\n                var minX = self.getNodeMinX(d);\r\n                var maxX = self.getNodeMaxX(d);\r\n\r\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\r\n                d.location.y += dy;\r\n            }else{\r\n                d.location.x +=dx;\r\n                d.location.y += dy;\r\n            }\r\n\r\n        });\r\n\r\n\r\n        var revertX = pivot && self.config.limitNodePositioning && (pivot.location.x === pivot.$location.x);\r\n\r\n        nodes.forEach(d=>{\r\n            if(revertX){\r\n                d.location.x = d.$location.x;\r\n            }\r\n            self.treeDesigner.updateNodePosition(d);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    moveTexts(texts, dx, dy){\r\n        let self = this;\r\n        let limit = self.config.limitTextPositioning;\r\n        if(limit){\r\n            if(dx<0){\r\n                texts.sort((a,b)=>a.location.x-b.location.x);\r\n            }else{\r\n                texts.sort((a,b)=>b.location.x-a.location.x);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        texts.forEach(d=>{\r\n\r\n\r\n\r\n\r\n            if(limit){\r\n                let minX = self.getTextMinX(d);\r\n                let maxX = self.getTextMaxX(d);\r\n                let minY = self.getTextMinY(d);\r\n\r\n\r\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\r\n                d.location.y = Math.max(d.location.y+dy, minY);\r\n\r\n            }else{\r\n                d.location.move(dx, dy);\r\n            }\r\n            self.treeDesigner.updateTextPosition(d);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    static backupNodeLocation(node) {\r\n        node.$location = new model.Point(node.location);\r\n    }\r\n\r\n    _fireOnAutoLayoutChangedCallbacks(){\r\n        this.onAutoLayoutChanged.forEach(c=>c(this.config.type));\r\n    }\r\n\r\n    static setHangingPosition(selection){\r\n        // window.setTimeout(function(){\r\n        //     selection.each(function(){\r\n        //         var h =  this.getBBox().height;\r\n        //         d3.select(this).attr('dy', h);\r\n        //     });\r\n        // },0);\r\n\r\n        if(AppUtils.isHidden(selection.node())){ // setting hanging position of hidden elements fails on firefox\r\n            return selection;\r\n        }\r\n\r\n\r\n        selection.each(function(){\r\n            var h =  this.getBBox().height;\r\n            d3.select(this).attr('dy', '0.75em');\r\n        });\r\n\r\n        return selection;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import {AppUtils} from './app-utils'\r\nimport * as d3 from './d3'\r\nimport {ContextMenu} from './context-menu/context-menu'\r\n\r\nexport class NodeDragHandler{\r\n\r\n    treeDesigner;\r\n    data;\r\n    config;\r\n\r\n    drag;\r\n    stateSnapshot = null;\r\n\r\n\r\n    constructor(treeDesigner, data){\r\n        this.treeDesigner = treeDesigner;\r\n        this.data = data;\r\n\r\n        var self = this;\r\n        this.drag = d3.drag()\r\n            .subject(function(event, d) {\r\n                if(d==null){\r\n                    return  {\r\n                        x: event.x,\r\n                        y: event.y\r\n                    };\r\n                }\r\n                var t = d3.select(this);\r\n                return {\r\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\r\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\r\n                };\r\n            })\r\n            .on(\"start\", function(event, d){\r\n                self.dragStarted.call(this, event, d, self)\r\n            })\r\n            .on(\"drag\", function (event, d) {\r\n                self.onDrag.call(this, event, d, self);\r\n            })\r\n            .on(\"end\", function (event, d) {\r\n                self.dragEnded.call(this, event, d, self);\r\n            })\r\n    }\r\n\r\n\r\n    dragStarted(event, d, self) {\r\n        if(self.ignoreDrag){\r\n            self.ignoreDrag=false;\r\n            self.ignoredDrag=true;\r\n            return;\r\n        }\r\n        self.ignoredDrag=false;\r\n        self.stateSnapshot = self.data.createStateSnapshot();\r\n\r\n        // self.treeDesigner.layout.disableAutoLayout();\r\n        ContextMenu.hide();\r\n        var node = d3.select(this);\r\n        if(!node.classed(\"selected\")){\r\n            self.treeDesigner.clearSelection();\r\n        }\r\n\r\n        self.treeDesigner.selectNode(d);\r\n        node.classed(\"selected dragging\", true);\r\n        self.selectedNodes = self.treeDesigner.getSelectedNodes(true);\r\n        self.prevDragEvent = event;\r\n        self.dragEventCount = 0;\r\n    }\r\n\r\n    onDrag(event, draggedNode, self){\r\n        if(self.ignoredDrag){\r\n            return;\r\n        }\r\n\r\n        if(self.dragEventCount===2 && self.stateSnapshot){\r\n            self.data.saveStateFromSnapshot(self.stateSnapshot); // TODO save only if something has really changed\r\n            self.stateSnapshot = null;\r\n        }\r\n        self.dragEventCount++;\r\n        if(self.selectedNodes.length>5 && self.dragEventCount%2!==1){\r\n            return;\r\n        }\r\n\r\n        var dx = event.x - self.prevDragEvent.x;\r\n        var dy = event.y- self.prevDragEvent.y;\r\n        self.treeDesigner.layout.moveNodes(self.selectedNodes, dx, dy, draggedNode);\r\n\r\n\r\n        self.prevDragEvent = event;\r\n        self.treeDesigner.redrawEdges();\r\n        self.treeDesigner.updatePlottingRegionSize();\r\n    }\r\n\r\n    dragEnded(event, draggedNode, self){\r\n        var node = d3.select(this).classed(\"dragging\", false);\r\n        if(self.ignoredDrag){\r\n            return;\r\n        }\r\n        self.treeDesigner.layout.update(draggedNode)\r\n    }\r\n\r\n    cancelDrag(){\r\n        this.ignoreDrag = true;\r\n    }\r\n\r\n}\r\n\r\n\r\n","var epsilon = 1e-12;\r\nvar pi = Math.PI;\r\nvar halfPi = pi / 2;\r\nvar tau = 2 * pi;\r\n\r\nexport default {\r\n    /*draw: function(context, size) {\r\n        var r = Math.sqrt(size / pi);\r\n        context.moveTo(r, 0);\r\n        context.arc(0, 0, r, 0, tau);\r\n    }*/\r\n    draw: function(context, size) {\r\n\r\n        var r = Math.sqrt(size / pi);\r\n        var dist =0.552284749831 * r;\r\n\r\n        context.moveTo(-r, 0)\r\n        // context.lineTo(2*r, 2*r)\r\n        // context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\r\n        context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\r\n\r\n        context.bezierCurveTo(dist, -r, r, -dist, r,0);\r\n\r\n        context.bezierCurveTo(r, dist, dist, r, 0, r);\r\n\r\n        context.bezierCurveTo(-dist, r, -r, dist, -r, 0);\r\n    }\r\n};\r\n","var sqrt3 = Math.sqrt(3);\r\n\r\nexport default {\r\n    draw: function(context, size) {\r\n        var r = Math.sqrt(size / Math.PI);\r\n        context.moveTo(-r, 0);\r\n        context.lineTo(0.9*r, -r);\r\n        context.lineTo(0.9*r, r);\r\n        context.closePath();\r\n    }\r\n};\r\n","import {Utils} from \"sd-utils\";\r\nimport {i18n} from './i18n/i18n'\r\n\r\nexport class Templates{\r\n\r\n    static growl = require('./templates/growl_message.html');\r\n\r\n    static get(templateName, variables){\r\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\r\n        if(variables){\r\n            variables.variables = variables;\r\n        }else{\r\n            variables = {variables:{}}\r\n        }\r\n        return compiled(variables)\r\n\r\n    }\r\n\r\n    static styleRule(selector, props){\r\n        var s = selector+ '{';\r\n        props.forEach(p=> s+=Templates.styleProp(p[0], p[1]));\r\n        s+='} ';\r\n        return s;\r\n    }\r\n    static styleProp(styleName, variableName){\r\n        return  styleName+': <%= '+variableName+' %>; '\r\n    }\r\n\r\n    static treeDesignerSelector = 'svg.sd-tree-designer';\r\n    static nodeSelector(type, clazz){\r\n        var s = Templates.treeDesignerSelector+' .node';\r\n        if(type){\r\n            s+='.'+type+'-node';\r\n        }\r\n        if(clazz){\r\n            s+='.'+clazz;\r\n        }\r\n        return s;\r\n    }\r\n    static edgeSelector(clazz){\r\n        var s = Templates.treeDesignerSelector+' .edge';\r\n        if(clazz){\r\n            s+='.'+clazz;\r\n        }\r\n        return s;\r\n    }\r\n\r\n    static treeDesignerStyles =\r\n\r\n        Templates.styleRule(Templates.treeDesignerSelector,[\r\n            ['font-size', 'fontSize'],\r\n            ['font-family', 'fontFamily'],\r\n            ['font-weight', 'fontWeight'],\r\n            ['font-style', 'fontStyle']\r\n        ])+\r\n        //   node\r\n        Templates.styleRule(Templates.nodeSelector()+' path',[\r\n            ['fill', 'node.fill'],\r\n            ['stroke-width', 'node.strokeWidth']\r\n        ])+\r\n        Templates.styleRule(Templates.nodeSelector('decision', 'optimal')+' path, '+Templates.nodeSelector('chance', 'optimal')+' path,' +Templates.nodeSelector('terminal', 'optimal')+' path',[\r\n            ['stroke', 'node.optimal.stroke'],\r\n            ['stroke-width', 'node.optimal.strokeWidth']\r\n        ])+\r\n        Templates.styleRule(Templates.nodeSelector()+' .label',[\r\n            ['font-size', 'node.label.fontSize'],\r\n            ['fill', 'node.label.color']\r\n        ])+\r\n        Templates.styleRule(Templates.nodeSelector()+' .payoff',[\r\n            ['font-size', 'node.payoff.fontSize'],\r\n            ['fill', 'node.payoff.color'],\r\n        ])+\r\n        Templates.styleRule(Templates.nodeSelector()+' .payoff.negative',[\r\n            ['fill', 'node.payoff.negativeColor'],\r\n        ])+\r\n\r\n        //    decision node\r\n        Templates.styleRule(Templates.nodeSelector('decision')+' path',[\r\n            ['fill', 'node.decision.fill'],\r\n            ['stroke', 'node.decision.stroke']\r\n        ])+\r\n        Templates.styleRule(Templates.nodeSelector('decision', 'selected')+' path',[\r\n            ['fill', 'node.decision.selected.fill']\r\n        ])+\r\n\r\n        //    chance node\r\n        Templates.styleRule(Templates.nodeSelector('chance')+' path',[\r\n            ['fill', 'node.chance.fill'],\r\n            ['stroke', 'node.chance.stroke']\r\n        ])+\r\n        Templates.styleRule(Templates.nodeSelector('chance', 'selected')+' path',[\r\n            ['fill', 'node.chance.selected.fill']\r\n        ])+\r\n\r\n        //    terminal node\r\n        Templates.styleRule(Templates.nodeSelector('terminal')+' path',[\r\n            ['fill', 'node.terminal.fill'],\r\n            ['stroke', 'node.terminal.stroke']\r\n        ])+\r\n        Templates.styleRule(Templates.nodeSelector('terminal', 'selected')+' path',[\r\n            ['fill', 'node.terminal.selected.fill']\r\n        ])+\r\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff',[\r\n            ['font-size', 'node.terminal.payoff.fontSize'],\r\n            ['fill', 'node.terminal.payoff.color'],\r\n        ])+\r\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff.negative',[\r\n            ['fill', 'node.terminal.payoff.negativeColor'],\r\n        ])+\r\n\r\n\r\n        //probability\r\n        Templates.styleRule(Templates.treeDesignerSelector+' .node .probability-to-enter, '+Templates.treeDesignerSelector+' .edge .probability',[\r\n            ['font-size', 'probability.fontSize'],\r\n            ['fill', 'probability.color']\r\n        ])+\r\n\r\n        //edge\r\n        Templates.styleRule(Templates.edgeSelector()+' path',[\r\n            ['stroke', 'edge.stroke'],\r\n            ['stroke-width', 'edge.strokeWidth']\r\n        ])+\r\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow path',[\r\n            ['fill', 'edge.stroke'],\r\n        ])+\r\n        Templates.styleRule(Templates.edgeSelector('optimal')+' path',[\r\n            ['stroke', 'edge.optimal.stroke'],\r\n            ['stroke-width', 'edge.optimal.strokeWidth']\r\n        ])+\r\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-optimal path',[\r\n            ['fill', 'edge.optimal.stroke'],\r\n        ])+\r\n\r\n        Templates.styleRule(Templates.edgeSelector('selected')+' path',[\r\n            ['stroke', 'edge.selected.stroke'],\r\n            ['stroke-width', 'edge.selected.strokeWidth']\r\n        ])+\r\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-selected path',[\r\n            ['fill', 'edge.selected.stroke'],\r\n        ])+\r\n\r\n        Templates.styleRule(Templates.edgeSelector()+' .label',[\r\n            ['font-size', 'edge.label.fontSize'],\r\n            ['fill', 'edge.label.color']\r\n        ])+\r\n\r\n        Templates.styleRule(Templates.edgeSelector()+' .payoff',[\r\n            ['font-size', 'edge.payoff.fontSize'],\r\n            ['fill', 'edge.payoff.color'],\r\n        ])+\r\n        Templates.styleRule(Templates.edgeSelector()+' .payoff.negative',[\r\n            ['fill', 'edge.payoff.negativeColor'],\r\n        ])+\r\n\r\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-title',[\r\n            ['font-size', 'title.fontSize'],\r\n            ['font-weight', 'title.fontWeight'],\r\n            ['font-style', 'title.fontStyle'],\r\n            ['fill', 'title.color']\r\n        ]) +\r\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-description',[\r\n            ['font-size', 'description.fontSize'],\r\n            ['font-weight', 'description.fontWeight'],\r\n            ['font-style', 'description.fontStyle'],\r\n            ['fill', 'description.color']\r\n        ])\r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \"<div class=\\\"sd-growl-message <%=type%>\\\">\\r\\n    <div class=\\\"sd-growl-message-text\\\">\\r\\n        <%= message %>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n","import {AppUtils} from './app-utils'\r\nimport * as d3 from './d3'\r\nimport {ContextMenu} from './context-menu/context-menu'\r\n\r\nexport class TextDragHandler{\r\n\r\n    treeDesigner;\r\n    data;\r\n    config;\r\n\r\n    drag;\r\n\r\n\r\n    constructor(treeDesigner, data){\r\n        this.treeDesigner = treeDesigner;\r\n        this.data = data;\r\n\r\n        var self = this;\r\n        this.drag = d3.drag()\r\n            .subject(function(event, d) {\r\n                if(d==null){\r\n                    return  {\r\n                        x: event.x,\r\n                        y: event.y\r\n                    };\r\n                }\r\n                var t = d3.select(this);\r\n                return {\r\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\r\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\r\n                };\r\n            })\r\n            .on(\"start\", function(event, d){\r\n                self.dragStarted.call(this, event, d, self)\r\n            })\r\n            .on(\"drag\", function (event, d) {\r\n                self.onDrag.call(this, event, d, self);\r\n            })\r\n            .on(\"end\", function (event, d) {\r\n                self.dragEnded.call(this, event, d, self);\r\n            })\r\n    }\r\n\r\n\r\n    dragStarted(event, d,self) {\r\n        // self.treeDesigner.layout.disableAutoLayout();\r\n        ContextMenu.hide();\r\n        var text = d3.select(this);\r\n        if(!text.classed(\"selected\")){\r\n            self.treeDesigner.clearSelection();\r\n        }\r\n\r\n        self.treeDesigner.selectText(d);\r\n        text.classed(\"selected dragging\", true);\r\n        self.selectedNodes = self.treeDesigner.getSelectedNodes();\r\n        self.prevDragEvent = event;\r\n        self.dragEventCount = 0;\r\n    }\r\n\r\n    onDrag(event, draggedText, self){\r\n        if(self.dragEventCount==2){\r\n            self.data.saveState();\r\n        }\r\n        self.dragEventCount++;\r\n\r\n        var dx = event.x - self.prevDragEvent.x;\r\n        var dy = event.y- self.prevDragEvent.y;\r\n\r\n        self.treeDesigner.layout.moveTexts([draggedText], dx, dy);\r\n\r\n        self.prevDragEvent = event;\r\n        self.treeDesigner.updatePlottingRegionSize();\r\n    }\r\n\r\n    dragEnded(event, draggedNode, self){\r\n         d3.select(this).classed(\"dragging\", false);\r\n    }\r\n\r\n}\r\n\r\n\r\n","import * as d3 from './d3'\r\nimport {Utils} from 'sd-utils'\r\n\r\nexport class Tooltip {\r\n    static getContainer(){\r\n        return d3.select(\"body\").selectOrAppend('div.sd-tooltip');\r\n    }\r\n\r\n    static show(html, xOffset = 5, yOffset = 28, event, duration=null) {\r\n        var container = Tooltip.getContainer()\r\n            .style(\"opacity\", 0);\r\n        container.transition()\r\n            .duration(200)\r\n            .style(\"opacity\", .98);\r\n        container.html(html);\r\n        Tooltip.updatePosition(xOffset, yOffset, event);\r\n        if(duration){\r\n            setTimeout(function(){\r\n                Tooltip.hide();\r\n            }, duration)\r\n        }\r\n    }\r\n\r\n    static updatePosition(xOffset = 5, yOffset = 28, event) {\r\n        Tooltip.getContainer()\r\n            .style(\"left\", (event.pageX + xOffset) + \"px\")\r\n            .style(\"top\", (event.pageY - yOffset) + \"px\");\r\n    }\r\n\r\n    static hide(duration = 500) {\r\n        var t = Tooltip.getContainer();\r\n        if(duration){\r\n            t = t.transition().duration(duration)\r\n        }\r\n        t.style(\"opacity\", 0);\r\n    }\r\n\r\n    static attach(target, htmlOrFn, xOffset, yOffset) {\r\n        target.on('mouseover', function (event, d) {\r\n            const i = target.nodes().indexOf(this);\r\n            var html = null;\r\n            if (Utils.isFunction(htmlOrFn)) {\r\n                html = htmlOrFn(d, i);\r\n            } else {\r\n                html = htmlOrFn;\r\n            }\r\n\r\n            if (html !== null && html !== undefined && html !== '') {\r\n                Tooltip.show(html, xOffset, yOffset, event);\r\n            }else{\r\n                Tooltip.hide(0);\r\n            }\r\n\r\n        }).on('mousemove', function (event, d) {\r\n            Tooltip.updatePosition(xOffset, yOffset, event);\r\n        }).on(\"mouseout\", function (event, d) {\r\n            Tooltip.hide();\r\n        });\r\n    }\r\n}\r\n","import * as d3 from \"./d3\";\r\nimport {Utils} from \"sd-utils\";\r\nimport {AppUtils} from \"./app-utils\";\r\nimport {domain as model} from \"sd-model\";\r\nimport {ContextMenu} from \"./context-menu/context-menu\";\r\nimport {MainContextMenu} from \"./context-menu/main-context-menu\";\r\nimport {NodeContextMenu} from \"./context-menu/node-context-menu\";\r\nimport {Layout} from \"./layout\";\r\nimport {NodeDragHandler} from \"./node-drag-handler\";\r\nimport {Tooltip} from \"./tooltip\";\r\nimport {Templates} from \"./templates\";\r\nimport {TextDragHandler} from \"./text-drag-handler\";\r\nimport {TextContextMenu} from \"./context-menu/text-context-menu\";\r\nimport {EdgeContextMenu} from \"./context-menu/edge-context-menu\";\r\nimport * as Hammer from \"hammerjs\";\r\nimport {i18n} from \"./i18n/i18n\";\r\n\r\n\r\nexport class TreeDesignerConfig {\r\n    width = undefined;\r\n    height = undefined;\r\n    margin = {\r\n        left: 25,\r\n        right: 25,\r\n        top: 25,\r\n        bottom: 25\r\n    };\r\n    scale = 1;\r\n    lng = 'en';\r\n    layout= {\r\n        type: 'tree',\r\n        nodeSize: 40,\r\n        limitNodePositioning: true,\r\n        limitTextPositioning: true,\r\n        gridHeight: 75,\r\n        gridWidth: 150,\r\n        edgeSlantWidthMax: 20\r\n    };\r\n    fontFamily = 'sans-serif';\r\n    fontSize = '12px';\r\n    fontWeight = 'normal';\r\n    fontStyle = 'normal';\r\n    node = {\r\n        strokeWidth: '1px',\r\n        optimal: {\r\n            stroke: '#006f00',\r\n            strokeWidth: '1.5px',\r\n        },\r\n        label: {\r\n            fontSize: '1em',\r\n            color: 'black'\r\n        },\r\n        payoff: {\r\n            fontSize: '1em',\r\n            color: 'black',\r\n            negativeColor: '#b60000'\r\n        },\r\n        decision: {\r\n            fill: '#ff7777',\r\n            stroke: '#660000',\r\n\r\n            selected: {\r\n                fill: '#aa3333',\r\n                // stroke: '#666600'\r\n            }\r\n        },\r\n        chance: {\r\n            fill: '#ffff44',\r\n            stroke: '#666600',\r\n\r\n            selected: {\r\n                fill: '#aaaa00',\r\n                // stroke: '#666600'\r\n            }\r\n        },\r\n        terminal:{\r\n            fill: '#44ff44',\r\n            stroke: 'black',\r\n            selected: {\r\n                fill: '#00aa00',\r\n                // stroke: 'black'\r\n            },\r\n            payoff: {\r\n                fontSize: '1em',\r\n                color: 'black',\r\n                negativeColor: '#b60000'\r\n            },\r\n        }\r\n    };\r\n    edge={\r\n        stroke: '#424242',\r\n        strokeWidth: '1.5',\r\n        optimal:{\r\n            stroke: '#006f00',\r\n            strokeWidth: '2.4',\r\n        },\r\n        selected:{\r\n            stroke: '#045ad1',\r\n            strokeWidth: '3.5',\r\n        },\r\n        label: {\r\n            fontSize: '1em',\r\n            color: 'back'\r\n        },\r\n        payoff:{\r\n            fontSize: '1em',\r\n            color: 'black',\r\n            negativeColor: '#b60000'\r\n        }\r\n\r\n    };\r\n    probability = {\r\n        fontSize: '1em',\r\n        color: '#0000d7'\r\n    };\r\n    title = {\r\n        fontSize: '16px',\r\n        fontWeight: 'bold',\r\n        fontStyle: 'normal',\r\n        color: '#000000',\r\n        margin:{\r\n            top: 15,\r\n            bottom: 10\r\n        }\r\n    };\r\n    description = {\r\n        show: true,\r\n        fontSize: '12px',\r\n        fontWeight: 'bold',\r\n        fontStyle: 'normal',\r\n        color: '#000000',\r\n        margin:{\r\n            top: 5,\r\n            bottom: 10\r\n        }\r\n    };\r\n\r\n    readOnly= false;\r\n    disableAnimations=false;\r\n    forceFullEdgeRedraw=false;\r\n    hideLabels=false;\r\n    hidePayoffs=false;\r\n    hideProbabilities=false;\r\n    raw=false;\r\n    preserveFoldingOfNestedSubtrees = true;\r\n\r\n\r\n    payoffNumberFormatter = (v, i)=> v;\r\n    probabilityNumberFormatter  = (v)=> v;\r\n\r\n    onNodeSelected = (node) => {};\r\n    onEdgeSelected = (edge) => {};\r\n    onTextSelected = (text) => {};\r\n    onSelectionCleared = () => {};\r\n\r\n    operationsForObject = (o) => [];\r\n    performOperation = (object, operation) => Promise.resolve();\r\n\r\n    payoffNames = [null, null];\r\n    maxPayoffsToDisplay = 1;\r\n\r\n    constructor(custom) {\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class TreeDesigner {\r\n\r\n    config;\r\n    container;\r\n    data; //data model manager\r\n    svg;\r\n\r\n    constructor(container, dataModel, config){\r\n        this.setConfig(config);\r\n        this.data = dataModel;\r\n        this.initContainer(container);\r\n        this.init();\r\n    }\r\n\r\n    setConfig(config) {\r\n        this.config = new TreeDesignerConfig(config);\r\n        if(this.layout){\r\n            this.layout.config=this.config.layout;\r\n        }\r\n        this.updateCustomStyles();\r\n        return this;\r\n    }\r\n\r\n    init(){\r\n\r\n        this.initSvg();\r\n        this.initLayout();\r\n        this.initI18n();\r\n        this.initBrush();\r\n        this.initEdgeMarkers();\r\n\r\n        this.updateCustomStyles();\r\n        if(!this.config.readOnly){\r\n            this.initMainContextMenu();\r\n            this.initNodeContextMenu();\r\n            this.initEdgeContextMenu();\r\n            this.initNodeDragHandler();\r\n            this.initTextDragHandler();\r\n            this.initTextContextMenu();\r\n        }\r\n        this.redraw();\r\n    }\r\n\r\n    initI18n() {\r\n        i18n.init(this.config.lng);\r\n    }\r\n\r\n\r\n    updateCustomStyles(){\r\n        d3.select('head').selectOrAppend('style#sd-tree-designer-style').html(Templates.get('treeDesignerStyles', this.config));\r\n        return this;\r\n    }\r\n\r\n    initLayout(){\r\n        this.layout = new Layout(this, this.data, this.config.layout);\r\n    }\r\n\r\n    initNodeDragHandler(){\r\n        this.nodeDragHandler = new NodeDragHandler(this, this.data);\r\n    }\r\n\r\n    initTextDragHandler(){\r\n        this.textDragHandler = new TextDragHandler(this, this.data);\r\n    }\r\n\r\n    redraw(withTransitions=false){\r\n\r\n        var self = this;\r\n        withTransitions = !self.config.disableAnimations && withTransitions;\r\n        this.redrawDiagramTitle();\r\n        this.redrawDiagramDescription();\r\n        this.updateScale(withTransitions);\r\n        this.updateMargin(withTransitions);\r\n        if(withTransitions){\r\n            self.transitionPrev = self.transition;\r\n            self.transition = true;\r\n        }\r\n        this.redrawNodes();\r\n        this.redrawEdges();\r\n        this.redrawFloatingTexts();\r\n        this.updateValidationMessages();\r\n        if(withTransitions){\r\n            self.transition =  self.transitionPrev;\r\n        }\r\n        setTimeout(function(){\r\n            self.updatePlottingRegionSize();\r\n        },10);\r\n\r\n        return this;\r\n    }\r\n\r\n    computeAvailableSpace(){\r\n        this.availableHeight = AppUtils.sanitizeHeight(this.config.height, this.container, this.config.margin);\r\n        this.availableWidth = AppUtils.sanitizeWidth(this.config.width, this.container, this.config.margin);\r\n    }\r\n\r\n    initSvg() {\r\n        var c = this;\r\n        var self = this;\r\n        this.computeAvailableSpace();\r\n        this.svg = this.container.selectOrAppend('svg.sd-tree-designer');\r\n        this.svg.attr('width', this.availableWidth).attr('height', this.availableHeight);\r\n\r\n        this.wrapperGroup = this.svg.selectOrAppend('g.sd-wrapper-group');\r\n        this.mainGroup = this.wrapperGroup.selectOrAppend('g.main-group');\r\n        this.updateScale();\r\n        this.updateMargin();\r\n\r\n\r\n        if (!this.config.width) {\r\n            d3.select(window)\r\n                .on(\"resize.tree-designer\", function () {\r\n                    self.updatePlottingRegionSize();\r\n                    self.redrawDiagramTitle();\r\n                });\r\n        }\r\n\r\n        var mc = new Hammer.Manager(this.svg.node(), {touchAction : 'auto'});\r\n        mc.add(new Hammer.Press({\r\n            pointerType: 'touch'\r\n        }));\r\n\r\n        mc.add(new Hammer.Pinch({\r\n            pointerType: 'touch'\r\n        }));\r\n\r\n        var cancel;\r\n        mc.on('pinchstart', function(){\r\n            self.disableBrush();\r\n        })\r\n        mc.on('pinch', function(){\r\n            cancel = Utils.waitForFinalEvent(()=>self.enableBrush(), 'pinchend', 5000)\r\n        })\r\n    }\r\n\r\n    updateMargin(withTransitions){\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var group = this.mainGroup;\r\n        if(withTransitions){\r\n            group = group.transition();\r\n        }\r\n\r\n        this.topMargin = margin.top;\r\n        if(this.diagramTitle||this.diagramDescription){\r\n            this.topMargin = parseInt(this.diagramTitle ? this.config.title.margin.top : 0) + this.getTitleGroupHeight()\r\n                +  Math.max(this.topMargin, parseInt(this.config.title.margin.bottom));\r\n        }\r\n\r\n        group.attr(\"transform\", \"translate(\" + margin.left + \",\" + this.topMargin + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\r\n    }\r\n\r\n    setMargin(margin, withoutStateSaving){\r\n        var self=this;\r\n        if(!withoutStateSaving){\r\n            this.data.saveState({\r\n                data:{\r\n                    margin: Utils.clone(self.config.margin)\r\n                },\r\n                onUndo: (data)=> {\r\n                    self.setMargin(data.margin, true);\r\n                },\r\n                onRedo: (data)=> {\r\n                    self.setMargin(margin, true);\r\n                }\r\n            });\r\n        }\r\n        Utils.deepExtend(this.config.margin, margin);\r\n        this.redrawDiagramTitle();\r\n        this.updateMargin(true);\r\n    }\r\n\r\n\r\n    updateScale(withTransitions){\r\n        var self = this;\r\n        var scale = this.config.scale;\r\n        var group = this.wrapperGroup;\r\n        if(withTransitions){\r\n            group = group.transition();\r\n        }\r\n\r\n        group.attr(\"transform\", \"scale(\" + scale + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\r\n    }\r\n\r\n    setScale(scale, withoutStateSaving){\r\n        var self=this;\r\n        if(!withoutStateSaving){\r\n            this.data.saveState({\r\n                data:{\r\n                    scale: Utils.clone(self.config.scale)\r\n                },\r\n                onUndo: (data)=> {\r\n                    self.setScale(data.scale, true);\r\n                },\r\n                onRedo: (data)=> {\r\n                    self.setScale(scale, true);\r\n                }\r\n            });\r\n        }\r\n        this.config.scale = scale;\r\n        this.updateScale(true);\r\n    }\r\n\r\n    initContainer(containerIdOrElem) {\r\n        if (Utils.isString(containerIdOrElem)) {\r\n            var selector = containerIdOrElem.trim();\r\n\r\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\r\n                selector = '#' + selector;\r\n            }\r\n            this.container = d3.select(selector);\r\n        } else if(containerIdOrElem._parents){\r\n            this.container = containerIdOrElem\r\n        }else{\r\n            this.container = d3.select(containerIdOrElem);\r\n        }\r\n    }\r\n\r\n    updatePlottingRegionSize() {\r\n        var changed = false;\r\n        this.computeAvailableSpace();\r\n        var margin = this.config.margin;\r\n        var svgWidth = this.svg.attr('width');\r\n        var svgHeight = this.svg.attr('height');\r\n        var mainGroupBox = this.mainGroup.node().getBBox();\r\n        let boxWidth = mainGroupBox.width;\r\n        var newSvgWidth = boxWidth+mainGroupBox.x+margin.left+margin.right;\r\n        newSvgWidth  *= this.config.scale;\r\n        this.container.classed('with-overflow-x', newSvgWidth>=this.availableWidth);\r\n        newSvgWidth = Math.max(newSvgWidth, this.availableWidth);\r\n        if(svgWidth!=newSvgWidth){\r\n            changed = true;\r\n            this.svg.attr('width', newSvgWidth);\r\n        }\r\n        let boxHeight = mainGroupBox.height;\r\n        var newSvgHeight = boxHeight+mainGroupBox.y+this.topMargin+margin.bottom;\r\n        newSvgHeight *= this.config.scale;\r\n        this.container.classed('with-overflow-y', newSvgHeight>=this.availableHeight);\r\n        newSvgHeight = Math.max(newSvgHeight, this.availableHeight);\r\n        if(svgHeight!=newSvgHeight){\r\n            changed=true;\r\n            this.svg.attr('height', newSvgHeight);\r\n        }\r\n        if(changed){\r\n            this.updateBrushExtent()\r\n        }\r\n\r\n\r\n    }\r\n\r\n    redrawNodes() {\r\n        var self = this;\r\n\r\n\r\n        var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\r\n        var nodes = nodesContainer.selectAll('.node').data(this.data.nodes.filter(d=>!d.$hidden), (d,i)=> d.id);\r\n        nodes.exit().remove();\r\n        var nodesEnter = nodes.enter().append('g')\r\n            .attr('id', d=>'node-'+d.id)\r\n            .attr('class', d=>d.type+'-node node')\r\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\r\n        nodesEnter.append('path');\r\n\r\n        var labelEnter = nodesEnter.append('text').attr('class', 'label');\r\n        var payoffEnter = nodesEnter.append('text').attr('class', 'payoff computed');\r\n        var indicatorEnter = nodesEnter.append('text').attr('class', 'error-indicator').text('!!');\r\n        var aggregatedPayoffEnter = nodesEnter.append('text').attr('class', 'aggregated-payoff');\r\n        var probabilityToEnterEnter = nodesEnter.append('text').attr('class', 'probability-to-enter');\r\n\r\n        var nodesMerge = nodesEnter.merge(nodes);\r\n        nodesMerge.classed('optimal', (d)=>self.isOptimal(d));\r\n\r\n        var nodesMergeT = nodesMerge;\r\n        if(this.transition){\r\n            nodesMergeT = nodesMerge.transition();\r\n            nodesMergeT.on('end', ()=> self.updatePlottingRegionSize())\r\n        }\r\n        nodesMergeT\r\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')')\r\n\r\n        var path = nodesMerge.select('path');\r\n        this.layout.drawNodeSymbol(path,this.transition);\r\n\r\n        /*path\r\n            .style('fill', d=> {\r\n                // if(self.isNodeSelected(d)){\r\n                //     return self.config.node[d.type].selected.fill\r\n                // }\r\n                return self.config.node[d.type].fill\r\n            })\r\n            .style('stroke', d=> self.config.node[d.type].stroke)\r\n            .style('stroke-width', d=> {\r\n                if(self.config.node[d.type].strokeWidth!==undefined){\r\n                    return self.config.node[d.type].strokeWidth;\r\n                }\r\n                return self.config.node.strokeWidth;\r\n            });\r\n        */\r\n        this.layout.nodeLabelPosition(labelEnter);\r\n        var labelMerge = nodesMerge.select('text.label');\r\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\r\n        var labelMergeT = nodesMergeT.select('text.label');\r\n        labelMergeT.each(this.updateTextLines);\r\n        this.layout.nodeLabelPosition(labelMergeT)\r\n            .attr('text-anchor', 'middle')\r\n\r\n        var payoff = nodesMerge.select('text.payoff');\r\n\r\n        var payoffTspans = payoff.selectAll('tspan').data(d=>{\r\n            let item = d.displayValue('childrenPayoff');\r\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\r\n        });\r\n        payoffTspans.exit().remove();\r\n\r\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\r\n        payoffTspansM\r\n            // .attr('dominant-baseline', 'hanging')\r\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\r\n            .attr('x', '0')\r\n            .classed('negative', d=> {\r\n                return d!==null && d<0;\r\n            })\r\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\r\n            .text((d, i)=> {\r\n                var val = d\r\n\r\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\r\n            });\r\n        this.attachPayoffTooltip(payoffTspansM);\r\n\r\n\r\n        var payoffT = payoff;\r\n        if(this.transition){\r\n            payoffT = payoff.transition();\r\n        }\r\n\r\n        this.layout.nodePayoffPosition(payoffEnter);\r\n        this.layout.nodePayoffPosition(payoffT);\r\n\r\n        var aggregatedPayoff = nodesMerge.select('text.aggregated-payoff');\r\n        var aggregatedPayoffTspans = aggregatedPayoff.selectAll('tspan').data(d=>{\r\n            let item = d.displayValue('aggregatedPayoff');\r\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\r\n        });\r\n        aggregatedPayoffTspans.exit().remove();\r\n        var aggregatedPayoffTspansM = aggregatedPayoffTspans.enter().append('tspan').merge(aggregatedPayoffTspans)\r\n            .attr('dy', (d,i)=>i>0 ? '0.95em': undefined)\r\n            .classed('negative', d=> {\r\n                return d!==null && d<0;\r\n            })\r\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\r\n            .text((val, i)=> {\r\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\r\n            });\r\n\r\n        this.attachPayoffTooltip(aggregatedPayoffTspansM, 'aggregatedPayoff');\r\n\r\n        var aggregatedPayoffT = aggregatedPayoff;\r\n        if(this.transition){\r\n            aggregatedPayoffT = aggregatedPayoff.transition();\r\n        }\r\n\r\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffEnter);\r\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffT);\r\n\r\n        var probabilityToEnter = nodesMerge.select('text.probability-to-enter')\r\n            .text(d=>{\r\n                var val = d.displayValue('probabilityToEnter');\r\n                return val!==null ? (isNaN(val) ? val : self.config.probabilityNumberFormatter(val)): ''\r\n            })\r\n            .classed('sd-hidden', this.config.hideProbabilities || this.config.raw);\r\n        Tooltip.attach(probabilityToEnter, i18n.t('tooltip.node.probabilityToEnter'));\r\n\r\n\r\n        var probabilityToEnterT = probabilityToEnter;\r\n        if(this.transition){\r\n            probabilityToEnterT = probabilityToEnter.transition();\r\n        }\r\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterEnter);\r\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterT);\r\n\r\n\r\n        var indicator = nodesMerge.select('text.error-indicator');\r\n        indicator.classed('sd-hidden', this.config.raw)\r\n        this.layout.nodeIndicatorPosition(indicatorEnter);\r\n        this.layout.nodeIndicatorPosition(indicator);\r\n\r\n        if(this.nodeDragHandler){\r\n            nodesMerge.call(this.nodeDragHandler.drag);\r\n        }\r\n\r\n        nodesMerge.on('contextmenu', this.nodeContextMenu);\r\n        nodesMerge.on('dblclick', this.nodeContextMenu)\r\n        nodesMerge.each(function(d, i){\r\n            var nodeElem = this;\r\n            var mc = new Hammer.Manager(nodeElem);\r\n            mc.add(new Hammer.Press({\r\n                pointerType: 'touch'\r\n            }));\r\n            mc.on('press', function(e){\r\n                if(e.pointerType=='touch'){\r\n                    self.nodeDragHandler.cancelDrag();\r\n                }\r\n            })\r\n\r\n\r\n            if(d.folded){\r\n                let button = d3.select(nodeElem).selectOrAppend('text.sd-unfold-button')\r\n                    .text(\"[+]\")\r\n                    .on('click dbclick mousedown', ()=>self.foldSubtree(d, false)); //firefox detects only mousedown event - related to drag handler\r\n\r\n                self.layout.nodeUnfoldButtonPosition(button);\r\n                Tooltip.attach(button, i18n.t('contextMenu.node.unfold'));\r\n            }else{\r\n                d3.select(nodeElem).select('.sd-unfold-button').remove();\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    attachPayoffTooltip(selection, payoffFiledName = 'payoff', object='node'){\r\n        var self = this;\r\n        Tooltip.attach(selection, (d, i)=>{\r\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\r\n                return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.named',{value: d.payoff, number: i+1, name: self.config.payoffNames[i]})\r\n            }\r\n            return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.default',{value: d.payoff, number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\r\n        });\r\n    }\r\n\r\n    updateTextLines(d){ //helper method for splitting text to tspans\r\n        let value = d.displayValue(\"name\") || d.name;\r\n        var lines = value ? value.split('\\n') : [];\r\n        lines.reverse();\r\n        var tspans = d3.select(this).selectAll('tspan').data(lines);\r\n        tspans.enter().append('tspan')\r\n            .merge(tspans)\r\n            .text(l=>l)\r\n            .attr('dy', (d,i)=>i>0 ? '-1.1em': undefined)\r\n            .attr('x', '0');\r\n\r\n        tspans.exit().remove();\r\n    }\r\n\r\n    isOptimal(d){\r\n        return d.displayValue('optimal');\r\n    }\r\n\r\n    redrawEdges() {\r\n        var self = this;\r\n        var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\r\n        if(self.config.forceFullEdgeRedraw){\r\n            edgesContainer.selectAll(\"*\").remove();\r\n        }\r\n\r\n        var edges = edgesContainer.selectAll('.edge').data(this.data.edges.filter(e=>!e.$hidden), (d,i)=> d.id);\r\n        edges.exit().remove();\r\n        var edgesEnter = edges.enter().append('g')\r\n            .attr('id', d=>'edge-'+d.id)\r\n            .attr('class', 'edge');\r\n\r\n\r\n        edgesEnter.append('path');\r\n        var labelEnter = edgesEnter.appendSelector('g.label-group');\r\n        labelEnter.append('text').attr('class', 'label');\r\n        var payoffEnter = edgesEnter.append('text').attr('class', 'payoff');\r\n        var probabilityEnter = edgesEnter.append('text').attr('class', 'probability');\r\n\r\n\r\n        var edgesMerge = edgesEnter.merge(edges);\r\n\r\n\r\n        var optimalClassName = 'optimal';\r\n        edgesMerge.classed(optimalClassName, (d)=>self.isOptimal(d));\r\n\r\n        var edgesMergeT = edgesMerge;\r\n        if(this.transition){\r\n            edgesMergeT = edgesMerge.transition();\r\n        }\r\n\r\n        edgesMergeT.select('path')\r\n            .attr('d', d=> this.layout.edgeLineD(d))\r\n            // .attr(\"stroke\", \"black\")\r\n            // .attr(\"stroke-width\", 2)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"marker-end\", function(d) {\r\n                var suffix = d3.select(this.parentNode).classed('selected') ? '-selected' : (self.isOptimal(d)?'-optimal':'');\r\n                return \"url(#arrow\"+ suffix+\")\"\r\n            });\r\n            // .attr(\"shape-rendering\", \"optimizeQuality\")\r\n\r\n\r\n        edgesMerge.on('click', (event, d) => {\r\n            self.selectEdge(d, true)\r\n        });\r\n\r\n        this.layout.edgeLabelPosition(labelEnter);\r\n        edgesMergeT.select('text.label').each(this.updateTextLines);\r\n        var labelMerge = edgesMerge.select('g.label-group');\r\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\r\n        var labelMergeT = edgesMergeT.select('g.label-group');\r\n        this.layout.edgeLabelPosition(labelMergeT);\r\n            // .text(d=>d.name);\r\n\r\n        var payoff = edgesMerge.select('text.payoff');\r\n\r\n        var payoffTspans = payoff.selectAll('tspan').data(d => {\r\n            let item = d.displayValue('payoff');\r\n            return Utils.isArray(item) ? item.slice(0, Math.min(item.length, self.config.maxPayoffsToDisplay)).map(_=>d) : [d];\r\n        });\r\n        payoffTspans.exit().remove();\r\n\r\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\r\n        payoffTspansM\r\n        // .attr('dominant-baseline', 'hanging')\r\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\r\n            // .attr('x', '0')\r\n\r\n            // .attr('dominant-baseline', 'hanging')\r\n            .classed('negative', (d, i)=> {\r\n                var val = d.displayPayoff(undefined, i);\r\n                return val!==null && val<0;\r\n            })\r\n            .classed('sd-hidden', this.config.hidePayoffs)\r\n            // .text(d=> isNaN(d.payoff) ? d.payoff : self.config.payoffNumberFormatter(d.payoff))\r\n            .text((d, i)=>{\r\n                if(this.config.raw){\r\n                    return d.payoff[i];\r\n                }\r\n\r\n                let item = d.displayValue('payoff');\r\n                let items = Utils.isArray(item) ? item : [item];\r\n\r\n                let val = items[i];\r\n                if (val !== null) {\r\n                    if (!isNaN(val)) {\r\n                        return self.config.payoffNumberFormatter(val, i);\r\n                    }\r\n                    if (Utils.isString(val)) {\r\n                        return val;\r\n                    }\r\n                }\r\n\r\n                if (d.payoff[i] !== null && !isNaN(d.payoff[i]))\r\n                    return self.config.payoffNumberFormatter(d.payoff[i], i);\r\n\r\n                return d.payoff[i];\r\n\r\n            });\r\n\r\n        Tooltip.attach(payoffTspansM, (d, i)=>{\r\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\r\n                return i18n.t('tooltip.edge.payoff.named',{value: d.payoff[i], number: i+1, name: self.config.payoffNames[i]})\r\n            }\r\n            return i18n.t('tooltip.edge.payoff.default',{value: d.payoff[i], number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\r\n        });\r\n\r\n        var payoffTextT = payoff;\r\n        if(this.transition){\r\n            payoffTextT = payoff.transition();\r\n        }\r\n        this.layout.edgePayoffPosition(payoffEnter);\r\n        this.layout.edgePayoffPosition(payoffTextT);\r\n\r\n        Tooltip.attach(edgesMerge.select('text.probability'), d=>i18n.t('tooltip.edge.probability',{value: d.probability=== undefined ? d.displayProbability() : d.probability}));\r\n\r\n        edgesMerge.select('text.probability')\r\n            .classed('sd-hidden', this.config.hideProbabilities);\r\n        var probabilityMerge = edgesMerge.select('text.probability');\r\n        probabilityMerge\r\n            .attr('text-anchor', 'end')\r\n            .text(d=>{\r\n                if(this.config.raw){\r\n                    return d.probability;\r\n                }\r\n                var val = d.displayProbability();\r\n\r\n                if(val!==null){\r\n                    if(!isNaN(val)){\r\n                        return self.config.probabilityNumberFormatter(val);\r\n                    }\r\n                    if(Utils.isString(val)){\r\n                        return val;\r\n                    }\r\n                }\r\n\r\n                if(d.probability!==null && !isNaN(d.probability))\r\n                    return self.config.probabilityNumberFormatter(d.probability);\r\n\r\n                return d.probability;\r\n            });\r\n        var probabilityMergeT = probabilityMerge;\r\n        if(this.transition){\r\n            probabilityMergeT = probabilityMerge.transition();\r\n        }\r\n\r\n        this.layout.edgeProbabilityPosition(probabilityEnter);\r\n        this.layout.edgeProbabilityPosition(probabilityMergeT);\r\n\r\n\r\n        edgesContainer.selectAll('.edge.'+optimalClassName).raise();\r\n\r\n        edgesMerge.on('contextmenu', this.edgeContextMenu);\r\n        edgesMerge.on('dblclick', this.edgeContextMenu);\r\n        edgesMerge.each(function(d, i){\r\n            var elem = this;\r\n            var mc = new Hammer.Manager(elem);\r\n            mc.add(new Hammer.Press({\r\n                pointerType: Hammer.POINTER_TOUCH\r\n            }));\r\n        })\r\n    }\r\n\r\n    redrawFloatingTexts() {\r\n        var self = this;\r\n\r\n\r\n        var textsContainer = this.mainGroup.selectOrAppend('g.floating-texts');\r\n        var texts = textsContainer.selectAll('.floating-text').data(this.data.texts, (d,i)=> d.id);\r\n        texts.exit().remove();\r\n        var textsEnter = texts.enter().appendSelector('g.floating-text')\r\n            .attr('id', d=>'text-'+d.id);\r\n\r\n\r\n        var rectWidth = 40;\r\n        var rectHeight = 20;\r\n\r\n        textsEnter.append('rect').attr('x', -5).attr('y', -16).attr('fill-opacity', 0);\r\n        textsEnter.append('text');\r\n\r\n        var textsMerge = textsEnter.merge(texts);\r\n        var textsMergeT = textsMerge;\r\n        if(this.transition){\r\n            textsMergeT = textsMerge.transition();\r\n        }\r\n\r\n        textsMergeT.attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\r\n\r\n        var tspans = textsMerge.select('text').selectAll('tspan').data(d=>{\r\n            let value = d.$displayValue || d.value;\r\n            return value ? value.split('\\n') : []\r\n        });\r\n\r\n        tspans.enter().append('tspan')\r\n            .merge(tspans)\r\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\r\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\r\n            .attr('x', '0');\r\n\r\n        tspans.exit().remove();\r\n        textsMerge.classed('sd-empty', d=>!d.value || !d.value.trim());\r\n        textsMerge.select('rect').attr('width', rectWidth).attr('height', rectHeight);\r\n\r\n        textsMerge.each(function(d){\r\n            if(!d.value){\r\n                return;\r\n            }\r\n            var bb = d3.select(this).select('text').node().getBBox();\r\n           d3.select(this).select('rect')\r\n               .attr('y', bb.y-5)\r\n               .attr('width', Math.max(bb.width+10, rectWidth))\r\n               .attr('height', Math.max(bb.height+10, rectHeight))\r\n        });\r\n\r\n        if(this.textDragHandler){\r\n            textsMerge.call(this.textDragHandler.drag);\r\n        }\r\n        textsMerge.on('contextmenu', this.textContextMenu);\r\n        textsMerge.on('dblclick', this.textContextMenu);\r\n        textsMerge.each(function(d, i){\r\n            var elem = this;\r\n            var mc = new Hammer.Manager(elem);\r\n            mc.add(new Hammer.Press({\r\n                pointerType: 'touch'\r\n            }));\r\n        })\r\n\r\n    }\r\n\r\n    updateValidationMessages() {\r\n        var nodes = this.mainGroup.selectAll('.node');\r\n        nodes.classed('error', false);\r\n\r\n        this.data.validationResults.forEach(validationResult=>{\r\n            if(validationResult.isValid()){\r\n                return;\r\n            }\r\n\r\n            Object.getOwnPropertyNames(validationResult.objectIdToError).forEach(id=>{\r\n                var errors = validationResult.objectIdToError[id];\r\n                var nodeSelection = this.getNodeD3SelectionById(id);\r\n                nodeSelection.classed('error', true);\r\n                var tooltipHtml = '';\r\n                errors.forEach(e=>{\r\n                    if(tooltipHtml){\r\n                        tooltipHtml+='<br/>'\r\n                    }\r\n                    tooltipHtml+=AppUtils.getValidationMessage(e);\r\n                });\r\n\r\n                Tooltip.attach(nodeSelection.select('.error-indicator'), tooltipHtml);\r\n\r\n\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    initEdgeMarkers() {\r\n        var defs = this.svg.append(\"svg:defs\");\r\n\r\n        this.initArrowMarker(\"arrow\");\r\n        this.initArrowMarker(\"arrow-optimal\");\r\n        this.initArrowMarker(\"arrow-selected\");\r\n    }\r\n\r\n    initArrowMarker(id) {\r\n\r\n        var defs = this.svg.select(\"defs\");\r\n        defs.append(\"marker\")\r\n            .attr(\"id\",id)\r\n            .attr(\"viewBox\",\"0 -5 10 10\")\r\n            .attr(\"refX\",5)\r\n            .attr(\"refY\",0)\r\n            .attr(\"markerWidth\",4)\r\n            .attr(\"markerHeight\",4)\r\n            .attr(\"orient\",\"auto\")\r\n            .append(\"path\")\r\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\r\n            .attr(\"class\",\"arrowHead\");\r\n    }\r\n\r\n    updateBrushExtent() {\r\n        var self =this;\r\n        this.brush.extent([[0, 0], [self.svg.attr('width'), self.svg.attr('height')]]);\r\n        this.brushContainer.call(this.brush);\r\n    }\r\n    initBrush() {\r\n        var self = this;\r\n\r\n        var brushContainer = self.brushContainer = this.brushContainer= this.wrapperGroup.selectOrInsert(\"g.brush\", \":first-child\")\r\n            .attr(\"class\", \"brush\");\r\n\r\n        var brush = this.brush = d3.brush()\r\n            .on(\"start\", brushstart)\r\n            .on(\"brush\", brushmove)\r\n            .on(\"end\", brushend);\r\n\r\n\r\n\r\n        this.updateBrushExtent();\r\n\r\n        brushContainer.select('.overlay').on(\"mousemove.edgeSelection\", mousemoved);\r\n        function mousemoved(event) {\r\n            var m = d3.pointer(event);\r\n            var mgt = self.getMainGroupTranslation();\r\n            var margin = 10;\r\n\r\n            var closest = [null, 999999999];\r\n            var closeEdges = [];\r\n            self.mainGroup.selectAll('.edge').each(function(d){\r\n                var selection = d3.select(this);\r\n                selection.classed('sd-hover', false);\r\n                var pathNode = selection.select('path').node();\r\n                var b = pathNode.getBBox();\r\n                if(b.x+mgt[0] <=m[0] && b.x+b.width+mgt[0] >= m[0] &&\r\n                   b.y+mgt[1]-margin <=m[1] && b.y+b.height+mgt[1]+margin >= m[1]){\r\n\r\n                    var cp = AppUtils.closestPoint(pathNode, [m[0]-mgt[0], m[1]-mgt[1]]);\r\n                    if(cp.distance < margin && cp.distance<closest[1]){\r\n                        closest = [selection, cp.distance];\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n            self.hoveredEdge = null;\r\n            if(closest[0]){\r\n                closest[0].classed('sd-hover', true);\r\n                self.hoveredEdge = closest[0];\r\n            }\r\n\r\n        }\r\n\r\n        function brushstart(event) {\r\n            if (!event.selection) return;\r\n            if(self.hoveredEdge){\r\n                self.selectEdge(self.hoveredEdge.datum(), true)\r\n            }else{\r\n                self.clearSelection();\r\n            }\r\n            ContextMenu.hide();\r\n        }\r\n\r\n        // Highlight the selected nodes.\r\n        function brushmove(event) {\r\n            var s = event.selection;\r\n            if(!s)return;\r\n\r\n            self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\r\n                var mainGroupTranslation = self.getMainGroupTranslation();\r\n                var x = d.location.x+mainGroupTranslation[0];\r\n                var y = d.location.y+mainGroupTranslation[1];\r\n                var nodeSize = self.config.layout.nodeSize;\r\n                var offset = nodeSize*0.25;\r\n                return s[0][0] <= x+offset && x-offset <= s[1][0]\r\n                    && s[0][1] <= y+offset && y-offset <= s[1][1];\r\n            });\r\n        }\r\n        // If the brush is empty, select all circles.\r\n        function brushend(event) {\r\n            if (!event.selection) return;\r\n            brush.move(brushContainer, null);\r\n\r\n            var selectedNodes = self.getSelectedNodes();\r\n            if(selectedNodes && selectedNodes.length === 1){\r\n                self.selectNode(selectedNodes[0]);\r\n            }\r\n            // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\r\n        }\r\n    }\r\n\r\n    disableBrush(){\r\n        if(!this.brushDisabled){\r\n            AppUtils.growl(i18n.t('growl.brushDisabled'), 'info', 'left')\r\n        }\r\n        this.brushDisabled = true;\r\n        this.brushContainer.remove();\r\n    }\r\n\r\n    enableBrush(){\r\n        if(this.brushDisabled){\r\n            AppUtils.growl(i18n.t('growl.brushEnabled'), 'info', 'left')\r\n            this.initBrush();\r\n            this.brushDisabled = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getMainGroupTranslation(invert) {\r\n        var translation = AppUtils.getTranslation(this.mainGroup.attr(\"transform\"));\r\n        if(invert){\r\n            translation[0] = -translation[0];\r\n            translation[1] = -translation[1]\r\n        }\r\n        return translation;\r\n    }\r\n\r\n    initNodeContextMenu() {\r\n        this.nodeContextMenu = new NodeContextMenu(this, this.config.operationsForObject);\r\n    }\r\n\r\n    initEdgeContextMenu() {\r\n        this.edgeContextMenu = new EdgeContextMenu(this);\r\n    }\r\n\r\n    initTextContextMenu() {\r\n        this.textContextMenu = new TextContextMenu(this);\r\n    }\r\n\r\n\r\n\r\n    initMainContextMenu() {\r\n        this.mainContextMenu = new MainContextMenu(this);\r\n        this.svg.on('contextmenu',this.mainContextMenu);\r\n        this.svg.on('dblclick',this.mainContextMenu);\r\n    }\r\n\r\n    addText(text){\r\n        this.data.saveState();\r\n        this.data.addText(text);\r\n        this.redraw();\r\n        this.selectText(text);\r\n    }\r\n\r\n    addNode(node, parent, redraw=false){\r\n        this.data.saveState();\r\n        this.data.addNode(node, parent);\r\n        this.redraw(true);\r\n        this.layout.update(node);\r\n        return node;\r\n    }\r\n\r\n    addDecisionNode(parent){\r\n        var newNode = new model.DecisionNode(this.layout.getNewChildLocation(parent));\r\n        this.addNode(newNode, parent)\r\n    }\r\n    addChanceNode(parent){\r\n        var newNode = new model.ChanceNode(this.layout.getNewChildLocation(parent));\r\n        this.addNode(newNode, parent)\r\n    }\r\n    addTerminalNode(parent){\r\n        var newNode = new model.TerminalNode(this.layout.getNewChildLocation(parent));\r\n        this.addNode(newNode, parent)\r\n    }\r\n\r\n    injectNode(node, edge){\r\n        this.data.saveState();\r\n        this.data.injectNode(node, edge);\r\n        this.redraw();\r\n        this.layout.update(node);\r\n        return node;\r\n    }\r\n\r\n    injectDecisionNode(edge){\r\n        var newNode = new model.DecisionNode(this.layout.getInjectedNodeLocation(edge));\r\n        this.injectNode(newNode, edge);\r\n\r\n    }\r\n\r\n    injectChanceNode(edge){\r\n        var newNode = new model.ChanceNode(this.layout.getInjectedNodeLocation(edge));\r\n        this.injectNode(newNode, edge);\r\n    }\r\n\r\n    removeNode(node) {\r\n        this.data.saveState();\r\n        this.data.removeNode(node);\r\n\r\n\r\n        if(!this.layout.isManualLayout()){\r\n            this.layout.update();\r\n        }else{\r\n            this.redraw();\r\n        }\r\n    }\r\n\r\n    removeSelectedNodes() {\r\n        var selectedNodes = this.getSelectedNodes();\r\n        if(!selectedNodes.length){\r\n            return;\r\n        }\r\n        this.data.saveState();\r\n        this.data.removeNodes(selectedNodes);\r\n        this.clearSelection();\r\n        this.redraw();\r\n        this.layout.update();\r\n    }\r\n\r\n    removeSelectedTexts(){\r\n        var selectedTexts = this.getSelectedTexts();\r\n\r\n        if(!selectedTexts.length){\r\n            return;\r\n        }\r\n        this.data.saveState();\r\n        this.data.removeTexts(selectedTexts);\r\n        this.clearSelection();\r\n        this.redraw();\r\n    }\r\n\r\n    copyNode(d, notClearPrevSelection) {\r\n        var clone = this.data.cloneSubtree(d);\r\n        if(notClearPrevSelection){\r\n            if(!this.copiedNodes){\r\n                this.copiedNodes=[];\r\n            }\r\n            this.copiedNodes.push(clone);\r\n        }else{\r\n            this.copiedNodes = [clone];\r\n        }\r\n\r\n    }\r\n\r\n    cutNode(d) {\r\n        this.copyNode(d);\r\n        this.removeNode(d);\r\n    }\r\n\r\n    cutSelectedNodes(){\r\n        var selectedNodes = this.getSelectedNodes();\r\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\r\n        this.copyNodes(selectedRoots);\r\n        this.removeSelectedNodes();\r\n    }\r\n\r\n    copySelectedNodes() {\r\n        var self;\r\n        var selectedNodes = this.getSelectedNodes();\r\n\r\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\r\n        this.copyNodes(selectedRoots);\r\n\r\n\r\n    }\r\n\r\n    copyNodes(nodes){\r\n        this.copiedNodes = nodes.map(d=>this.data.cloneSubtree(d));\r\n    }\r\n\r\n\r\n\r\n    pasteToNode(node) {\r\n        if(!this.copiedNodes || !this.copiedNodes.length){\r\n            return;\r\n        }\r\n        this.data.saveState();\r\n        var self = this;\r\n        self.clearSelection();\r\n        var nodesToAttach = this.copiedNodes;\r\n        self.copyNodes(this.copiedNodes);\r\n        nodesToAttach.forEach(toAttach=>{\r\n            var attached = this.data.attachSubtree(toAttach, node).childNode;\r\n            if(attached.folded){\r\n                self.foldSubtree(attached, attached.folded, false);\r\n            }\r\n            var location = self.layout.getNewChildLocation(node);\r\n            attached.moveTo(location.x, location.y, true);\r\n            self.layout.moveNodeToEmptyPlace(attached, false);\r\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\r\n\r\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\r\n        });\r\n\r\n        if(node.folded){\r\n            self.foldSubtree(node, node.folded, false);\r\n        }\r\n\r\n        setTimeout(function(){\r\n            self.redraw();\r\n            self.layout.update();\r\n        },10)\r\n\r\n    }\r\n\r\n    pasteToNewLocation(point) {\r\n        this.data.saveState();\r\n        var self = this;\r\n        self.clearSelection();\r\n        var nodesToAttach = this.copiedNodes;\r\n        self.copyNodes(this.copiedNodes);\r\n        nodesToAttach.forEach(toAttach=> {\r\n            var attached = this.data.attachSubtree(toAttach);\r\n            if(attached.folded){\r\n                self.foldSubtree(attached, attached.folded, false);\r\n            }\r\n            attached.moveTo(point.x, point.y, true);\r\n            self.layout.moveNodeToEmptyPlace(attached, false);\r\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\r\n\r\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\r\n        });\r\n\r\n        setTimeout(function(){\r\n            self.redraw();\r\n            self.layout.update();\r\n        },10)\r\n\r\n    }\r\n\r\n    convertNode(node, typeToConvertTo){\r\n        const self = this;\r\n        this.data.saveState();\r\n        this.data.convertNode(node, typeToConvertTo);\r\n        setTimeout(function(){\r\n            self.redraw(true);\r\n        },10)\r\n    }\r\n\r\n    performOperation(object, operation){\r\n        const self = this;\r\n        this.data.saveState();\r\n        this.config.performOperation(object, operation).then(() => {\r\n            setTimeout(function(){\r\n                self.redraw();\r\n                self.layout.update();\r\n            },10)\r\n        });\r\n    }\r\n\r\n    foldSubtree(node, fold = true, redraw = true) {\r\n        const self = this;\r\n        node.folded = fold;\r\n        const preserveNestedFolding = self.config.preserveFoldingOfNestedSubtrees;\r\n\r\n        this.data.getAllDescendantNodes(node).forEach(n => {\r\n            n.$hidden = fold || (n.$parent && (n.$parent.folded || n.$parent.$hidden));\r\n            if (!preserveNestedFolding) {\r\n                n.folded = false;\r\n            }\r\n        });\r\n        this.data.getAllDescendantEdges(node).forEach(e => e.$hidden = e.parentNode.folded || e.parentNode.$hidden);\r\n\r\n        if (!redraw) {\r\n            return;\r\n        }\r\n        setTimeout(function () {\r\n            self.redraw();\r\n            self.layout.update();\r\n        }, 10)\r\n    }\r\n\r\n    updateVisibility(node = null){\r\n        if(!node){\r\n            this.data.getRoots().forEach(n=>this.updateVisibility(n));\r\n            return;\r\n        }\r\n\r\n        if(node.folded){\r\n            this.foldSubtree(node, true, false);\r\n            return;\r\n        }\r\n\r\n        node.childEdges.forEach(e => this.updateVisibility(e.childNode));\r\n\r\n    }\r\n\r\n    moveNodeTo(x,y){\r\n\r\n    }\r\n\r\n    updateNodePosition(node) {\r\n        this.getNodeD3Selection(node).raise().attr('transform', 'translate('+node.location.x+' '+node.location.y+')');\r\n    }\r\n\r\n    updateTextPosition(text) {\r\n        this.getTextD3Selection(text).raise().attr('transform', 'translate('+text.location.x+' '+text.location.y+')');\r\n    }\r\n\r\n    getNodeD3Selection(node){\r\n        return this.getNodeD3SelectionById(node.id);\r\n    }\r\n\r\n    getNodeD3SelectionById(id){\r\n        return this.mainGroup.select('#node-'+id);\r\n    }\r\n    getTextD3Selection(text){\r\n        return this.getTextD3SelectionById(text.id);\r\n    }\r\n    getTextD3SelectionById(id){\r\n        return this.mainGroup.select('#text-'+id);\r\n    }\r\n\r\n    getSelectedNodes(visibleOnly = false) {\r\n        let selectedVisible = this.mainGroup.selectAll(\".node.selected\").data();\r\n        if(visibleOnly){\r\n            return selectedVisible;\r\n        }\r\n\r\n        let allSelected  = [];\r\n        allSelected.push(...selectedVisible);\r\n\r\n        selectedVisible.forEach(n=>{\r\n            if(n.folded){\r\n                let descendants = this.data.getAllDescendantNodes(n);\r\n                if(descendants){\r\n                    allSelected.push(...descendants);\r\n                }\r\n            }\r\n        });\r\n\r\n        return allSelected;\r\n    }\r\n\r\n    getSelectedTexts(){\r\n        return this.mainGroup.selectAll(\".floating-text.selected\").data();\r\n    }\r\n\r\n    clearSelection(){\r\n        this.mainGroup.selectAll(\".edge.selected\").select('path').attr(\"marker-end\", d => \"url(#arrow\"+(this.isOptimal(d)?'-optimal':'')+\")\")\r\n        this.mainGroup.selectAll(\".selected\").classed('selected', false);\r\n        this.config.onSelectionCleared();\r\n    }\r\n\r\n    selectEdge(edge, clearSelectionBeforeSelect){\r\n        if(clearSelectionBeforeSelect){\r\n            this.clearSelection();\r\n        }\r\n        this.config.onEdgeSelected(edge);\r\n        this.mainGroup.select('#edge-'+edge.id)\r\n            .classed('selected', true)\r\n            .select('path')\r\n            .attr(\"marker-end\", d => \"url(#arrow-selected)\")\r\n    }\r\n\r\n    isNodeSelected(node){\r\n        return this.getNodeD3Selection(node).classed('selected');\r\n    }\r\n\r\n    selectNode(node, clearSelectionBeforeSelect, skipCallback){\r\n        if(clearSelectionBeforeSelect){\r\n            this.clearSelection();\r\n        }\r\n\r\n        if(!skipCallback){\r\n            this.config.onNodeSelected(node);\r\n        }\r\n\r\n        this.getNodeD3SelectionById(node.id).classed('selected', true);\r\n    }\r\n\r\n    selectText(text, clearSelectionBeforeSelect, skipCallback){\r\n        if(clearSelectionBeforeSelect){\r\n            this.clearSelection();\r\n        }\r\n\r\n        if(!skipCallback){\r\n            this.config.onTextSelected(text)\r\n        }\r\n\r\n        this.getTextD3SelectionById(text.id).classed('selected', true);\r\n    }\r\n\r\n    selectSubTree(node, clearSelectionBeforeSelect,skipCallback) {\r\n        if(clearSelectionBeforeSelect){\r\n            this.clearSelection();\r\n        }\r\n        this.selectNode(node, false, skipCallback);\r\n        node.childEdges.forEach(e=>this.selectSubTree(e.childNode, false, true));\r\n    }\r\n\r\n    selectAllNodes() {\r\n        this.mainGroup.selectAll(\".node\").classed('selected', true);\r\n    }\r\n\r\n    autoLayout(type, withoutStateSaving){\r\n        this.layout.autoLayout(type, withoutStateSaving);\r\n    }\r\n\r\n    updateDiagramTitle(titleValue){\r\n        if(!titleValue){\r\n            titleValue = '';\r\n        }\r\n        this.diagramTitle = titleValue;\r\n        this.redrawDiagramTitle();\r\n        this.redrawDiagramDescription();\r\n        this.updateMargin(true);\r\n    }\r\n\r\n    redrawDiagramTitle(){\r\n        var svgWidth = this.svg.attr('width');\r\n        var svgHeight = this.svg.attr('height');\r\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\r\n\r\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\r\n        title.text(this.diagramTitle);\r\n        Layout.setHangingPosition(title);\r\n\r\n        var marginTop = parseInt(this.config.title.margin.top);\r\n        this.titleContainer.attr('transform', 'translate('+(svgWidth/2)+','+( marginTop)+')');\r\n    }\r\n    redrawDiagramDescription(){\r\n        var svgWidth = this.svg.attr('width');\r\n        var svgHeight = this.svg.attr('height');\r\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\r\n\r\n        var desc = this.titleContainer.selectOrAppend('text.sd-description');\r\n\r\n        if(!this.config.description.show){\r\n            desc.remove();\r\n            return;\r\n        }\r\n\r\n        var lines = this.diagramDescription ? this.diagramDescription.split('\\n') : [];\r\n        var tspans = desc.selectAll('tspan').data(lines);\r\n        tspans.enter().append('tspan')\r\n            .merge(tspans)\r\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\r\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\r\n            .attr('x', '0');\r\n\r\n        tspans.exit().remove();\r\n        Layout.setHangingPosition(desc);\r\n\r\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\r\n\r\n        var marginTop = 0;\r\n        if(this.diagramTitle){\r\n            marginTop += title.node().getBBox().height;\r\n            marginTop+= Math.max(parseInt(this.config.description.margin.top), 0);\r\n        }\r\n\r\n\r\n        desc.attr('transform', 'translate(0,'+( marginTop)+')');\r\n    }\r\n\r\n    updateDiagramDescription(descriptionValue){\r\n        if(!descriptionValue){\r\n            descriptionValue = '';\r\n        }\r\n        this.diagramDescription = descriptionValue;\r\n        this.redrawDiagramTitle();\r\n        this.redrawDiagramDescription();\r\n        this.updateMargin(true);\r\n    }\r\n\r\n\r\n    getTitleGroupHeight(withMargins){\r\n        if(!this.titleContainer){\r\n            return 0;\r\n        }\r\n        var h = this.titleContainer.node().getBBox().height;\r\n        if(withMargins){\r\n            h+= parseInt(this.config.title.margin.bottom);\r\n            h+= parseInt(this.config.title.margin.top);\r\n        }\r\n        return h;\r\n    }\r\n\r\n}\r\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isValue       = require(\"../value/is\")\n  , isObject      = require(\"../object/is\")\n  , stringCoerce  = require(\"../string/coerce\")\n  , toShortString = require(\"./to-short-string\");\n\nvar resolveMessage = function (message, value) {\n\treturn message.replace(\"%v\", toShortString(value));\n};\n\nmodule.exports = function (value, defaultMessage, inputOptions) {\n\tif (!isObject(inputOptions)) throw new TypeError(resolveMessage(defaultMessage, value));\n\tif (!isValue(value)) {\n\t\tif (\"default\" in inputOptions) return inputOptions[\"default\"];\n\t\tif (inputOptions.isOptional) return null;\n\t}\n\tvar errorMessage = stringCoerce(inputOptions.errorMessage);\n\tif (!isValue(errorMessage)) errorMessage = defaultMessage;\n\tthrow new TypeError(resolveMessage(errorMessage, value));\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\ttry {\n\t\treturn value.toString();\n\t} catch (error) {\n\t\ttry { return String(value); }\n\t\tcatch (error2) { return null; }\n\t}\n};\n","\"use strict\";\n\nvar safeToString = require(\"./safe-to-string\");\n\nvar reNewLine = /[\\n\\r\\u2028\\u2029]/g;\n\nmodule.exports = function (value) {\n\tvar string = safeToString(value);\n\tif (string === null) return \"<Non-coercible to string value>\";\n\t// Trim if too long\n\tif (string.length > 100) string = string.slice(0, 99) + \"…\";\n\t// Replace eventual new lines\n\tstring = string.replace(reNewLine, function (char) {\n\t\tswitch (char) {\n\t\t\tcase \"\\n\":\n\t\t\t\treturn \"\\\\n\";\n\t\t\tcase \"\\r\":\n\t\t\t\treturn \"\\\\r\";\n\t\t\tcase \"\\u2028\":\n\t\t\t\treturn \"\\\\u2028\";\n\t\t\tcase \"\\u2029\":\n\t\t\t\treturn \"\\\\u2029\";\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unexpected character\");\n\t\t}\n\t});\n\treturn string;\n};\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"%v is not a plain function\", arguments[1]);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue  = require(\"../value/is\")\n  , isObject = require(\"../object/is\");\n\nvar objectToString = Object.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return null;\n\tif (isObject(value)) {\n\t\t// Reject Object.prototype.toString coercion\n\t\tvar valueToString = value.toString;\n\t\tif (typeof valueToString !== \"function\") return null;\n\t\tif (valueToString === objectToString) return null;\n\t\t// Note: It can be object coming from other realm, still as there's no ES3 and CSP compliant\n\t\t// way to resolve its realm's Object.prototype.toString it's left as not addressed edge case\n\t}\n\ttry {\n\t\treturn \"\" + value; // Ensure implicit coercion\n\t} catch (error) {\n\t\treturn null;\n\t}\n};\n","\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"Cannot use %v\", arguments[1]);\n};\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","module.exports={\n  \"name\": \"silver-decisions\",\n  \"version\": \"1.2.0\",\n  \"description\": \"Software for creating and analyzing decision trees.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/SilverDecisions/SilverDecisions.git\"\n  },\n  \"author\": \"Michał Wasiluk, Bogumił Kamiński, Przemysław Szufel\",\n  \"license\": \"LGPL-3.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/SilverDecisions/SilverDecisions/issues\"\n  },\n  \"homepage\": \"https://github.com/SilverDecisions/SilverDecisions#readme\",\n  \"browserslist\": [\n    \"last 3 versions\",\n    \"> 0.25%\",\n    \"Firefox ESR\",\n    \"not dead\"\n  ],\n  \"browserify\": {\n    \"transform\": [\n      [\n        \"babelify\",\n        {\n          \"global\": true,\n          \"ignore\": [\n            \"/\\\\/node_modules\\\\/(?!d3-.+\\\\/)/\"\n          ],\n          \"presets\": [\n            \"@babel/preset-env\"\n          ],\n          \"plugins\": [\n            [\n              \"transform-class-properties\",\n              {\n                \"spec\": true\n              }\n            ],\n            \"transform-object-assign\",\n            [\n              \"babel-plugin-transform-builtin-extend\",\n              {\n                \"globals\": [\n                  \"Error\"\n                ]\n              }\n            ],\n            [\n              \"@babel/plugin-transform-runtime\",\n              {\n                \"regenerator\": true,\n                \"helpers\": false\n              }\n            ]\n          ]\n        }\n      ]\n    ]\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.15.8\",\n    \"@babel/plugin-proposal-object-rest-spread\": \"^7.15.6\",\n    \"@babel/plugin-transform-runtime\": \"^7.15.8\",\n    \"@babel/preset-env\": \"^7.15.8\",\n    \"babel-plugin-transform-builtin-extend\": \"^1.1.2\",\n    \"babel-plugin-transform-class-properties\": \"^6.24.1\",\n    \"babel-plugin-transform-es2015-spread\": \"^6.22.0\",\n    \"babel-plugin-transform-object-assign\": \"^6.22.0\",\n    \"babelify\": \"^10.0.0\",\n    \"browser-sync\": \"^2.27.5\",\n    \"browserify\": \"^17.0.0\",\n    \"browserify-shim\": \"^3.8.14\",\n    \"chalk\": \"^4.1.2\",\n    \"del\": \"^6.0.0\",\n    \"es6-set\": \"^0.1.5\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-clean-css\": \"^4.3.0\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-filelist\": \"^2.0.5\",\n    \"gulp-html2js\": \"^0.4.2\",\n    \"gulp-load-plugins\": \"^2.0.7\",\n    \"gulp-plumber\": \"^1.2.1\",\n    \"gulp-rename\": \"^2.0.0\",\n    \"gulp-replace\": \"^1.1.3\",\n    \"gulp-sass\": \"^5.0.0\",\n    \"gulp-sourcemaps\": \"^3.0.0\",\n    \"gulp-strip-debug\": \"^4.0.0\",\n    \"gulp-template\": \"^5.0.0\",\n    \"gulp-uglify\": \"^3.0.2\",\n    \"gulp-util\": \"^3.0.8\",\n    \"jasmine\": \"^3.10.0\",\n    \"jasmine-jquery\": \"^2.1.1\",\n    \"karma\": \"^6.3.4\",\n    \"karma-browserify\": \"^8.1.0\",\n    \"karma-chrome-launcher\": \"^3.1.0\",\n    \"karma-intl-shim\": \"^1.0.3\",\n    \"karma-jasmine\": \"^4.0.1\",\n    \"merge-stream\": \"^2.0.0\",\n    \"odc-d3\": \"^2.0.0\",\n    \"run-sequence\": \"^2.2.1\",\n    \"sass\": \"^1.43.2\",\n    \"stringify\": \"^5.2.0\",\n    \"svg2pdf.js\": \"^2.2.0\",\n    \"vinyl-buffer\": \"^1.0.1\",\n    \"vinyl-source-stream\": \"^2.0.0\",\n    \"yargs\": \"^17.2.1\"\n  },\n  \"dependencies\": {\n    \"autosize\": \"^5.0.1\",\n    \"blueimp-canvas-to-blob\": \"^3.29.0\",\n    \"d3-array\": \"^3.1.1\",\n    \"d3-brush\": \"^3.0.0\",\n    \"d3-dispatch\": \"^3.0.1\",\n    \"d3-drag\": \"^3.0.0\",\n    \"d3-scale\": \"^4.0.2\",\n    \"d3-scale-chromatic\": \"^3.0.0\",\n    \"d3-selection\": \"^3.0.0\",\n    \"d3-shape\": \"^3.0.1\",\n    \"d3-time-format\": \"^4.0.0\",\n    \"file-saver\": \"^2.0.5\",\n    \"hammerjs\": \"^2.0.8\",\n    \"i18next\": \"^21.3.2\",\n    \"jquery\": \"^3.6.0\",\n    \"jquery-ui\": \"^1.13.0\",\n    \"pivottable\": \"^2.23.0\",\n    \"sd-computations\": \"^0.6.0\",\n    \"sd-model\": \"~0.2.11\",\n    \"sd-tree-designer\": \"^0.3.1\",\n    \"sd-utils\": \"~0.1.15\"\n  }\n}\n","import * as d3 from \"./d3\";\nimport * as autosize from \"autosize\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils as TdUtils} from \"sd-tree-designer\";\n\nexport class AppUtils extends TdUtils{\n\n\n\n    static updateInputClass(selection){\n        var value = selection.node().value;\n        selection.classed('empty', value!==0 && !value);\n        return selection;\n    }\n\n    static autoResizeTextarea(element){\n        setTimeout(function(){\n            element.style.width = \"\";\n            var width = element.getBoundingClientRect().width;\n            if(width){\n                element.style.width = width+'px';\n            }\n            autosize.update(element);\n        }, 10);\n    }\n\n    static elasticTextarea(selection){\n        setTimeout(function(){\n            selection.style('width',undefined);\n            var width = selection.node().getBoundingClientRect().width;\n            if(width){\n                selection.style('width', width+'px')\n            }\n            autosize.default(selection.node());\n        },10)\n    }\n\n    static postByForm(url, data) {\n        var name,\n            form;\n\n        // create the form\n        form = AppUtils.createElement('form', AppUtils.mergeDeep({\n            method: 'post',\n            action: url,\n            enctype: 'multipart/form-data'\n        }), document.body);\n\n        for (name in data) {\n            if(data.hasOwnProperty(name)){\n                AppUtils.createElement('input', {\n                    type: 'hidden',\n                    name: name,\n                    value: data[name]\n                }, form);\n            }\n        }\n\n        form.submit();\n\n        AppUtils.removeElement(form);\n    };\n\n    static showFullScreenPopup(title, html, closeCallback){\n        var popup = d3.select(\"body\").selectOrAppend(\"div.sd-full-screen-popup-container\").html(Templates.get('fullscreenPopup', {title:title,body:html}));\n        popup.select('.sd-close-popup').on('click', ()=>{\n            popup.remove();\n            if(closeCallback) {\n                closeCallback()\n            }\n        })\n\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {log, Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport * as model from \"sd-model\";\nimport {TreeDesigner} from \"sd-tree-designer\";\nimport {Templates} from \"./templates\";\nimport {Sidebar} from \"./sidebar\";\nimport {Toolbar} from \"./toolbar\";\nimport {SettingsDialog} from \"./dialogs/settings-dialog\";\nimport {AboutDialog} from \"./dialogs/about-dialog\";\nimport {Exporter} from \"./exporter\";\nimport {DefinitionsDialog} from \"./dialogs/definitions-dialog\";\nimport {ComputationsManager} from \"sd-computations\";\nimport {SensitivityAnalysisDialog} from \"./dialogs/sensitivity-analysis-dialog\";\nimport {LoadingIndicator} from \"./loading-indicator\";\nimport {LeagueTableDialog} from \"./league-table/league-table-dialog\";\nimport {OperationDialog} from \"./dialogs/operation-dialog\";\nimport {TextsInterpolator} from \"./texts-interpolator\";\n\nvar buildConfig = require('../tmp/build-config.js');\n\nexport class AppConfig {\n    readOnly = false;\n    logLevel = 'warn';\n    workerUrl = null;\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n    buttons = {\n        new: true,\n        save: true,\n        open: true,\n        exportToPng: true,\n        exportToSvg: true,\n        exportToPdf: true\n    };\n    exports = {\n        show: true,\n        serverUrl: 'http://export.highcharts.com', //url of the export server\n        pdf: {\n            mode: 'server', // available options: 'client', 'server', 'fallback',\n        },\n        png: {\n            mode: 'fallback', // available options: 'client', 'server', 'fallback',\n        }\n    };\n    showDetails = true;\n    showDefinitions = true;\n    jsonFileDownload = true;\n    width = undefined;\n    height = undefined;\n    rule = \"expected-value-maximization\";\n    lng = 'en';\n    format = {// NumberFormat  options\n        locales: 'en',\n        payoff1: {\n            style: 'currency',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        payoff2: {\n            style: 'decimal',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        probability: { // NumberFormat  options\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 3,\n            useGrouping: true\n        }\n    };\n    title = '';\n    description = '';\n    treeDesigner = {};\n    leagueTable = {\n        plot: {\n            maxWidth: \"800px\",\n            groups: {\n                'highlighted': {\n                    color: '#008000'\n                },\n                'highlighted-default': {\n                    color: '#00bd00'\n                },\n                'extended-dominated': {\n                    color: '#ffa500'\n                },\n                'dominated': {\n                    color: '#ff0000'\n                },\n                'default': {\n                    color: '#000000'\n                }\n            }\n        }\n    };\n    textInterpolation = true;\n\n    //https://github.com/d3/d3-format/blob/master/README.md#format\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class App {\n    static version = ''; // version is set from package.json\n    static buildTimestamp = buildConfig.buildTimestamp;\n    static utils = Utils;\n    static appUtils = AppUtils;\n    static d3 = d3;\n\n    config;\n    container;\n    dataModel; //Data model manager\n    expressionEngine;\n    computationsManager;\n    treeDesigner;\n    toolbar;\n    sidebar;\n    viewModes = [];\n    currentViewMode;\n    textsInterpolator;\n\n    payoffsMaximization=[true, false];\n\n    constructor(containerIdOrElem, config, diagramData) {\n        var p = Promise.resolve();\n        this.setConfig(config);\n        this.initI18n();\n        this.initContainer(containerIdOrElem);\n        this.initViewModes();\n        this.initDataModel();\n        p = this.initComputationsManager();\n        this.initProbabilityNumberFormat();\n        this.initPayoffNumberFormat();\n        this.initTreeDesigner();\n        this.initSidebar();\n        this.initSettingsDialog();\n        this.initAboutDialog();\n        this.initDefinitionsDialog();\n        this.initSensitivityAnalysisDialog();\n        this.initOperationDialog();\n        this.initLeagueTableDialog();\n        this.initOnBeforeUnload();\n        this.initKeyCodes();\n        this.initTextsInterpolator();\n        p.then(()=> {\n            this.initToolbar();\n            if (diagramData) {\n                this.openDiagram(diagramData);\n            } else {\n                this.updateView();\n            }\n        }).catch(e=> {\n            log.error(e);\n        });\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new AppConfig();\n        } else {\n            this.config = new AppConfig(config);\n        }\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    static growl() {\n        return AppUtils.growl(arguments)\n    }\n\n    setLogLevel(level) {\n        log.setLevel(level)\n    }\n\n    initContainer(containerIdOrElem) {\n\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else {\n            this.container = d3.select(containerIdOrElem);\n        }\n        var self = this;\n\n        let html = Templates.get('main', {\n            version: App.version,\n            buildTimestamp: App.buildTimestamp,\n            'lng': self.config.lng\n        });\n        this.container.html(html);\n\n        this.container.select('#silver-decisions').classed('sd-read-only', this.config.readOnly);\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n    initDataModel() {\n        var self = this;\n        this.dataModel = new model.DataModel();\n        // this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = ()=>self.onNodeAddedOrRemoved();\n        this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = (node)=> Utils.waitForFinalEvent(()=>this.onNodeAddedOrRemoved(), 'onNodeAddedOrRemoved', 5);\n\n        this.dataModel.textAddedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextAdded(text), 'onTextAdded');\n        this.dataModel.textRemovedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextRemoved(text), 'onTextAdded');\n    }\n\n    initComputationsManager() {\n        this.computationsManager = new ComputationsManager({\n            ruleName: this.config.ruleName,\n            worker: {\n                url: this.config.workerUrl,\n            },\n            jobRepositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        }, this.dataModel);\n        this.expressionEngine = this.computationsManager.expressionEngine;\n        return this.checkValidityAndRecomputeObjective(false, false, false, true);\n\n    }\n\n    initSidebar() {\n        this.sidebar = new Sidebar(this.container.select('#sd-sidebar'), this);\n\n    }\n\n    initSettingsDialog() {\n        this.settingsDialog = new SettingsDialog(this);\n    }\n\n    initAboutDialog() {\n        this.aboutDialog = new AboutDialog(this);\n    }\n\n    initDefinitionsDialog() {\n        this.definitionsDialog = new DefinitionsDialog(this);\n        this.definitionsDialog.onClosed = ()=> this.recompute(true, true);\n\n    }\n\n    initLeagueTableDialog() {\n        this.leagueTableDialog = new LeagueTableDialog(this);\n    }\n\n    isLeagueTableAvailable() {\n        return this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.leagueTableDialog.validateParams();\n    }\n\n    initSensitivityAnalysisDialog() {\n        this.sensitivityAnalysisDialog = new SensitivityAnalysisDialog(this);\n\n    }\n\n    initOperationDialog() {\n        this.operationDialog = new OperationDialog(this);\n\n    }\n\n    initTextsInterpolator() {\n        this.textsInterpolator = new TextsInterpolator(this);\n    }\n\n    isSensitivityAnalysisAvailable() {\n        return !this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.dataModel.getGlobalVariableNames(true).length;\n    }\n\n    initToolbar() {\n        this.toolbar = new Toolbar(this.container.select('#sd-toolbar'), this);\n\n    }\n\n    initPayoffNumberFormat() {\n\n        this.payoffNumberFormat = [\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff1),\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff2)\n        ]\n\n    }\n\n    initProbabilityNumberFormat() {\n        this.probabilityNumberFormat = new Intl.NumberFormat(this.config.format.locales, this.config.format.probability);\n    }\n\n    initTreeDesigner() {\n        var self = this;\n        var config = this.getTreeDesignerInitialConfig();\n        let container2 = this.container.select('#tree-designer-container');\n\n        this.treeDesigner = new TreeDesigner(container2, this.dataModel, config);\n    }\n\n    getTreeDesignerInitialConfig() {\n        const self = this;\n\n        return Utils.deepExtend({\n            lng: self.config.lng,\n            readOnly: self.config.readOnly,\n            onNodeSelected: function (node) {\n                self.onObjectSelected(node);\n            },\n            onEdgeSelected: function (edge) {\n                self.onObjectSelected(edge);\n            },\n            onTextSelected: function (text) {\n                self.onObjectSelected(text);\n            },\n            onSelectionCleared: function () {\n                self.onSelectionCleared();\n            },\n            payoffNumberFormatter: (v, i) => {\n                let prefix = '';\n                if(self.currentViewMode.multiCriteria){\n                    prefix =  self.dataModel.payoffNames[i].charAt(0) + ': ';\n                }\n\n                return prefix + self.payoffNumberFormat[i || self.currentViewMode.payoffIndex || 0].format(v)\n            },\n            probabilityNumberFormatter: (v) => self.probabilityNumberFormat.format(v),\n            operationsForObject: (o) => self.computationsManager.operationsForObject(o),\n            performOperation: self.performOperation.bind(self)\n        }, self.config.treeDesigner);\n    }\n\n    performOperation(object, operation) {\n\n        if(!operation.jobName){\n            return this.computationsManager.performOperation(object, operation);\n        }\n\n\n        return this.operationDialog.openWith(object, operation).catch(e => {\n            log.error(e);\n            return false;\n        });\n\n    }\n\n    onObjectSelected(object) {\n        var self = this;\n        if (this.selectedObject === object) {\n            return;\n        }\n        this.selectedObject = object;\n        setTimeout(function () {\n            self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10)\n    }\n\n    onSelectionCleared() {\n        var self = this;\n        this.selectedObject = null;\n        this.sidebar.hideObjectProperties();\n        setTimeout(function () {\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10);\n        // console.log();\n    }\n\n    getCurrentVariableDefinitionsSourceObject() {\n        if (this.selectedObject) {\n            if (this.selectedObject instanceof model.domain.Node) {\n                return this.selectedObject;\n            }\n            if (this.selectedObject instanceof model.domain.Edge) {\n                return this.selectedObject.parentNode;\n            }\n        }\n        return this.dataModel;\n    }\n\n    updateVariableDefinitions() {\n        var self = this;\n        var definitionsSourceObject = self.getCurrentVariableDefinitionsSourceObject();\n        var readOnly = (this.selectedObject instanceof model.domain.Edge) || (this.selectedObject instanceof model.domain.TerminalNode);\n        self.sidebar.updateDefinitions(definitionsSourceObject, readOnly, (code)=> {\n            self.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            self.recompute(true, true)\n        });\n\n    }\n\n    openDefinitionsDialog() {\n        var definitionsSourceObject = this.getCurrentVariableDefinitionsSourceObject();\n        this.definitionsDialog.open(definitionsSourceObject, (code)=> {\n            this.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            this.recompute(true, true);\n        });\n    }\n\n    updateView(withTransitions = true, disableTextInterpolation = false) {\n        // console.log('_updateView');\n        this.redrawTreeDesigner(withTransitions, disableTextInterpolation);\n        this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        this.updateVariableDefinitions();\n        this.toolbar.update();\n        this.sidebar.updateLayoutOptions();\n        this.sidebar.updateDiagramDetails();\n        this.sidebar.updateMultipleCriteria();\n    }\n\n    undo() {\n        let self = this;\n        self.dataModel.undo();\n        self.initPayoffNames();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.id);\n        }\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n\n    }\n\n    redo() {\n        let self = this;\n        self.dataModel.redo();\n        self.initPayoffNames();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.id);\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n    }\n\n    onNodeAddedOrRemoved() {\n        var self = this;\n        return this.checkValidityAndRecomputeObjective().then(()=> {\n            self.updateView();\n        });\n\n    }\n\n    onTextAdded(text) {\n        return this.onObjectSelected(text);\n    }\n\n    onTextRemoved(text) {\n        this.updateView();\n    }\n\n    onObjectUpdated(object, fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (!(object instanceof model.domain.Text) && fieldName !== 'name') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        // this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        return p.then(()=> {\n            setTimeout(function () {\n                self.redrawTreeDesigner(true);\n            }, 1);\n        });\n    }\n\n    onMultiCriteriaUpdated(fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (fieldName === 'defaultCriterion1Weight') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        this.sidebar.updateMultipleCriteria();\n\n        return p.then(()=> {\n            setTimeout(function () {\n                self.redrawTreeDesigner(true);\n                self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            }, 1);\n        });\n    }\n\n    redrawTreeDesigner(withTransitions, disableTextInterpolation = false) {\n        this.updateInterpolatedDisplayValues(disableTextInterpolation);\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.treeDesigner.redraw(withTransitions);\n    }\n\n    updateInterpolatedDisplayValues(disableTextInterpolation = false) {\n        this.textsInterpolator.updateInterpolatedDisplayValues(disableTextInterpolation || this.shouldDisableTextInterpolation());\n    }\n\n    updateDiagramTitleAndDescription() {\n        this.updateInterpolatedDisplayValues();\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n    }\n\n    shouldDisableTextInterpolation() {\n        return !this.isAutoRecalculationEnabled() || !this.config.textInterpolation;\n    }\n\n    redrawDiagramTitle() {\n        this.treeDesigner.updateDiagramTitle(this.textsInterpolator.interpolatedDiagramTitle || this.config.title);\n    }\n\n    redrawDiagramDescription() {\n        this.treeDesigner.updateDiagramDescription(this.textsInterpolator.interpolatedDiagramDescription || this.config.description);\n    }\n\n    setObjectiveRule(ruleName, evalCode = false, evalNumeric = false, updateView = true, recompute = true) {\n        let prevRule = this.computationsManager.getCurrentRule();\n        this.computationsManager.setCurrentRuleByName(ruleName);\n        let currentRule = this.computationsManager.getCurrentRule();\n        let multiCriteria = currentRule.multiCriteria;\n        this.treeDesigner.config.maxPayoffsToDisplay = multiCriteria ? 2 : 1;\n\n        if (multiCriteria) {\n            this.payoffsMaximization = currentRule.payoffCoeffs.map(c=>c>0);\n            this.initPayoffNames();\n            this.treeDesigner.config.payoffNames = this.dataModel.payoffNames;\n        } else {\n            this.payoffsMaximization[this.currentViewMode.payoffIndex] = currentRule.maximization;\n            this.treeDesigner.config.payoffNames = [null, null];\n        }\n        if (!recompute) {\n            return Promise.resolve();\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, evalCode, evalNumeric).then(()=> {\n            if (updateView) {\n                this.updateView(false);\n            }\n        });\n\n    }\n\n    initPayoffNames() {\n        if (this.currentViewMode.multiCriteria && !this.dataModel.payoffNames.length) {\n            this.dataModel.payoffNames.push(\n                this.dataModel.payoffNames[0] = i18n.t('multipleCriteria.defaultMinimizedCriterionName'),\n                this.dataModel.payoffNames[1] = i18n.t('multipleCriteria.defaultMaximizedCriterionName'));\n        }\n    }\n\n    isMultipleCriteria() {\n        return this.computationsManager.getCurrentRule().multiCriteria;\n    }\n\n    flipCriteria() {\n        let tmp = this.config.format.payoff1;\n        this.config.format.payoff1 = this.config.format.payoff2;\n        this.config.format.payoff2 = tmp;\n        this.initPayoffNumberFormat();\n\n        this.computationsManager.flipCriteria().then(()=> {\n            this.updateView(false);\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n\n    getCurrentObjectiveRule() {\n        return this.computationsManager.getCurrentRule();\n    }\n\n    getObjectiveRules() {\n        return this.computationsManager.getObjectiveRules().filter(rule=>rule.multiCriteria === this.currentViewMode.multiCriteria);\n    }\n\n\n    initViewModes() {\n        this.viewModes.push({\n            name: \"criterion1\",\n            multiCriteria: false,\n            payoffIndex: 0,\n        });\n\n        this.viewModes.push({\n            name: \"criterion2\",\n            multiCriteria: false,\n            payoffIndex: 1,\n        });\n\n        this.viewModes.push({\n            name: \"twoCriteria\",\n            multiCriteria: true,\n            payoffIndex: null,\n        });\n        this.currentViewMode = this.viewModes[0];\n    }\n\n    getCurrentViewMode() {\n        return this.currentViewMode;\n    }\n\n    setViewModeByName(name, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.name === name), recompute, updateView)\n    }\n\n    setViewMode(mode, recompute = true, updateView = true) {\n        let prevMode = this.currentViewMode;\n        this.currentViewMode = mode;\n\n        this.computationsManager.objectiveRulesManager.setPayoffIndex(this.currentViewMode.payoffIndex);\n\n\n        if (!recompute) {\n            return Promise.resolve();\n        }\n        let rules = this.getObjectiveRules();\n        let prevRule = this.computationsManager.getCurrentRule();\n        let newRule = rules[0];\n\n\n        if(this.currentViewMode.payoffIndex !== null){\n            newRule = Utils.find(rules, r => r.maximization == this.payoffsMaximization[this.currentViewMode.payoffIndex])\n        }else{\n            newRule = Utils.find(rules, r => r.payoffCoeffs.map(c=>c>0).every((max, i)=> this.payoffsMaximization[i] === max))\n        }\n\n        this.setObjectiveRule(newRule.name, false, false, updateView, recompute)\n    }\n\n    setDefaultViewModeForRule(rule, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.multiCriteria === rule.multiCriteria), recompute, updateView)\n    }\n\n    getViewModes() {\n        return this.viewModes;\n    }\n\n    showLeagueTable() {\n        this.leagueTableDialog.open();\n    }\n\n    openSensitivityAnalysis() {\n        let self = this;\n        setTimeout(function(){\n            if(!self.isSensitivityAnalysisAvailable()){\n                return;\n            }\n            self.sensitivityAnalysisDialog.open();\n        }, 200);\n\n    }\n\n    showTreePreview(dataDTO, closeCallback, autoLayout = true) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.dataModel.loadFromDTO(dataDTO, this.computationsManager.expressionEngine.getJsonReviver());\n        this.computationsManager.updateDisplayValues(this.dataModel);\n        this.updateView(false);\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node());\n                AppUtils.showFullScreenPopup('', svgString, ()=> {\n                    if (closeCallback) {\n                        self.dataModel._setNewState(self.originalDataModelSnapshot);\n                        self.updateView(false);\n\n                        closeCallback();\n                        setTimeout(function () {\n                            self.updateView(false);\n                        }, 1)\n                    }\n                });\n            }, 300);\n        }, 1)\n\n    }\n\n    showPolicyPreview(title, policy, closeCallback) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.computationsManager.displayPolicy(policy);\n        this.updateView(false, true);\n        AppUtils.showFullScreenPopup(title, '');\n        LoadingIndicator.show();\n        setTimeout(function () {\n            self.updateView(false, true);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node(), true);\n                LoadingIndicator.hide();\n                AppUtils.showFullScreenPopup(title, svgString, ()=> {\n\n                    self.dataModel._setNewState(self.originalDataModelSnapshot);\n\n                    // self.computationsManager.updateDisplayValues(self.dataModel);\n                    self.updateView(false);\n                    if (closeCallback) {\n                        closeCallback();\n                    }\n                    setTimeout(function () {\n                        self.updateView(false);\n                    }, 1)\n                });\n            }, 500);\n        }, 1)\n    }\n\n\n    recompute(updateView = true, debounce = false, forceWhenAutoIsDisabled=true) {\n        if (debounce) {\n            if (!this.debouncedRecompute) {\n                this.debouncedRecompute = Utils.debounce((updateView)=>this.recompute(updateView, false), 200);\n            }\n            this.debouncedRecompute(updateView);\n            return;\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, true, true, forceWhenAutoIsDisabled).then(()=> {\n            if (updateView) {\n                this.updateView();\n            }\n        });\n\n    }\n\n    onRawOptionChanged() {\n        let p = Promise.resolve();\n        if (this.isAutoRecalculationEnabled()) {\n            p = this.checkValidityAndRecomputeObjective(false, false);\n        }\n        p.then(() => {\n            this.updateView();\n        })\n    }\n    onTextInterpolationOptionChanged() {\n        this.updateView();\n    }\n\n    isAutoRecalculationEnabled(){\n        return !this.treeDesigner.config.raw;\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true, forceWhenAutoIsDisabled=false) {\n        if(!forceWhenAutoIsDisabled && !this.isAutoRecalculationEnabled()){\n            return Promise.resolve();\n        }\n\n        return this.computationsManager.checkValidityAndRecomputeObjective(allRules, evalCode, evalNumeric).then(()=> {\n            this.updateValidationMessages();\n            AppUtils.dispatchEvent('SilverDecisionsRecomputedEvent', this);\n        }).catch(e=> {\n            log.error(e);\n        });\n\n    }\n\n    updateValidationMessages() {\n        var self = this;\n        setTimeout(function () {\n            self.treeDesigner.updateValidationMessages();\n        }, 1);\n    }\n\n    newDiagram() {\n        this.clear();\n        this.updateView();\n    }\n\n    clear() {\n        this.dataModel.clear();\n        this.currentViewMode = this.viewModes[0];\n        this.computationsManager.setCurrentRuleByName(this.computationsManager.getObjectiveRules()[0].name);\n        this.setDiagramTitle('', true);\n        this.setDiagramDescription('', true);\n        this.treeDesigner.setConfig(Utils.deepExtend(this.getTreeDesignerInitialConfig()));\n        this.onSelectionCleared();\n        this.sensitivityAnalysisDialog.clear(true, true)\n\n    }\n\n    openDiagram(diagramData) {\n\n        var self = this;\n        var errors = [];\n\n        if (Utils.isString(diagramData)) {\n            try {\n                diagramData = JSON.parse(diagramData, self.computationsManager.expressionEngine.getJsonReviver());\n            } catch (e) {\n                errors.push('error.jsonParse');\n                alert(i18n.t('error.jsonParse'));\n                log.error(e);\n                return Promise.resolve(errors);\n            }\n        }\n\n        var dataModelObject = diagramData.data;\n\n        this.clear();\n        if (!diagramData.SilverDecisions) {\n            errors.push('error.notSilverDecisionsFile');\n            alert(i18n.t('error.notSilverDecisionsFile'));\n            return Promise.resolve(errors);\n        }\n\n        if (!Utils.isValidVersionString(diagramData.SilverDecisions)) {\n            errors.push('error.incorrectVersionFormat');\n            alert(i18n.t('error.incorrectVersionFormat'));\n        } else {\n            //Check if version in file is newer than version of application\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, App.version) > 0) {\n                errors.push('error.fileVersionNewerThanApplicationVersion');\n                alert(i18n.t('error.fileVersionNewerThanApplicationVersion'));\n            }\n\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, \"0.7.0\") < 0) {\n                dataModelObject = {\n                    code: diagramData.code,\n                    expressionScope: diagramData.expressionScope,\n                    trees: diagramData.trees,\n                    texts: diagramData.texts\n                }\n            }\n        }\n\n        try {\n            if (diagramData.lng) {\n                this.config.lng = diagramData.lng;\n            }\n\n            if (diagramData.rule) {\n                if (this.computationsManager.isRuleName(diagramData.rule)) {\n                    this.config.rule = diagramData.rule;\n                } else {\n                    delete this.config.rule;\n                }\n            }\n\n            if (diagramData.viewMode) {\n                this.setViewModeByName(diagramData.viewMode)\n            } else {\n                this.setDefaultViewModeForRule(this.computationsManager.getObjectiveRuleByName(this.config.rule), false, false);\n            }\n\n            if (diagramData.format) {\n                this.config.format = diagramData.format;\n            }\n\n            this.setConfig(this.config);\n            this.dataModel.load(dataModelObject);\n\n            if (diagramData.treeDesigner) {\n                this.treeDesigner.setConfig(Utils.deepExtend(self.getTreeDesignerInitialConfig(), diagramData.treeDesigner));\n            }\n            this.treeDesigner.updateVisibility();\n\n            this.setDiagramTitle(diagramData.title || '', true);\n            this.setDiagramDescription(diagramData.description || '', true);\n\n            if (diagramData.sensitivityAnalysis) {\n                this.sensitivityAnalysisDialog.loadSavedParamValues(diagramData.sensitivityAnalysis);\n            }\n\n        } catch (e) {\n            errors.push('error.malformedData');\n            alert(i18n.t('error.malformedData'));\n            this.clear();\n            log.error('malformedData', e);\n            return Promise.resolve(errors);\n\n        }\n        try {\n            this.updateNumberFormats(false);\n        } catch (e) {\n            log.error('incorrectNumberFormatOptions', e);\n            errors.push('error.incorrectNumberFormatOptions');\n            alert(i18n.t('error.incorrectNumberFormatOptions'));\n            delete this.config.format;\n            this.setConfig(this.config);\n            this.updateNumberFormats(false);\n        }\n        return this.setObjectiveRule(this.config.rule, false, true, false).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            return errors\n        }).then(()=> {\n            this.updateView(false);\n            return errors;\n        }).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            this.updateView(false);\n            return errors\n        });\n    }\n\n    serialize(filterLocation = false, filterComputed = false, filterPrivate = true) {\n        var self = this;\n        return self.checkValidityAndRecomputeObjective(true, false, false, true).then(()=> {\n            var obj = {\n                SilverDecisions: App.version,\n                buildTimestamp: App.buildTimestamp,\n                savetime: d3.isoFormat(new Date()),\n                lng: self.config.lng,\n                viewMode: self.currentViewMode.name,\n                rule: self.computationsManager.getCurrentRule().name,\n                title: self.config.title,\n                description: self.config.description,\n                format: self.config.format,\n                treeDesigner: self.treeDesigner.config,\n                data: self.dataModel.serialize(false),\n                sensitivityAnalysis: this.sensitivityAnalysisDialog.jobNameToParamValues\n            };\n\n            return Utils.stringify(obj, self.dataModel.getJsonReplacer(filterLocation, filterComputed, self.computationsManager.expressionEngine.getJsonReplacer(), filterPrivate), filterPrivate ? ['$'] : []);\n        });\n    }\n\n    saveToFile(filterLocation = false, filterComputed = false, filterPrivate = true){\n        this.serialize(filterLocation, filterComputed, filterPrivate).then((json)=>{\n            AppUtils.dispatchEvent('SilverDecisionsSaveEvent', json);\n            if(this.config.jsonFileDownload){\n                var blob = new Blob([json], {type: \"application/json\"});\n                Exporter.saveAs(blob, Exporter.getExportFileName('json'));\n            }\n        });\n    }\n\n    updateNumberFormats(updateView = true) {\n        this.initPayoffNumberFormat();\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    updatePayoffNumberFormat(updateView = true) {\n        this.initPayoffNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n\n    }\n\n    updateProbabilityNumberFormat(updateView = true) {\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    initOnBeforeUnload() {\n        var self = this;\n        window.addEventListener(\"beforeunload\", function (e) {\n            if (!(self.dataModel.isUndoAvailable() || self.dataModel.isRedoAvailable())) {\n                return;\n            }\n\n            var dialogText = i18n.t('confirm.beforeunload');\n            e.returnValue = dialogText;\n            return dialogText;\n        });\n    }\n\n    setConfigParam(path, value, withoutStateSaving, callback) {\n        var self = this;\n        var prevValue = Utils.get(this.config, path);\n\n        if (prevValue == value) {\n            return;\n        }\n        if (!withoutStateSaving) {\n            this.dataModel.saveState({\n                data: {\n                    prevValue: prevValue\n                },\n                onUndo: (data)=> {\n                    self.setConfigParam(path, data.prevValue, true, callback);\n                },\n                onRedo: (data)=> {\n                    self.setConfigParam(path, value, true, callback);\n                }\n            });\n        }\n        Utils.set(this.config, path, value);\n        if (callback) {\n            callback(value);\n        }\n    }\n\n\n    setDiagramTitle(title, withoutStateSaving) {\n        this.setConfigParam('title', title, withoutStateSaving, (v) => this.updateDiagramTitleAndDescription());\n    }\n\n    setDiagramDescription(description, withoutStateSaving) {\n        this.setConfigParam('description', description, withoutStateSaving, (v) => this.updateDiagramTitleAndDescription());\n    }\n\n    initKeyCodes() {\n\n        this.container.on(\"keyup\", (event, d)=> {\n            let srcElement = event.target || event.srcElement;\n\n            if (srcElement && ['INPUT', 'TEXTAREA'].indexOf(srcElement.nodeName.toUpperCase()) > -1) { //ignore events from input and textarea elements\n                return;\n            }\n\n            var key = event.keyCode;\n            if (key == 46) {//delete\n                this.treeDesigner.removeSelectedNodes();\n                this.treeDesigner.removeSelectedTexts();\n                return;\n            }\n            if (!event.ctrlKey) {\n                return;\n            }\n\n\n            if (event.altKey) {\n                if (this.selectedObject instanceof model.domain.Node) {\n                    let selectedNode = this.selectedObject;\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.addDecisionNode(selectedNode);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.addChanceNode(selectedNode);\n                    } else if (key == 84) { // ctrl + alt + t\n                        this.treeDesigner.addTerminalNode(selectedNode);\n                    }\n                    return;\n                } else if (this.selectedObject instanceof model.domain.Edge) {\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.injectDecisionNode(this.selectedObject);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.injectChanceNode(this.selectedObject);\n                    }\n                }\n\n            }\n\n\n            if (key == 90) {//ctrl + z\n                this.undo();\n                return;\n            }\n            if (key == 89) {//ctrl + y\n                this.redo();\n                return;\n            }\n\n            /*if(key==65){//ctrl + a\n             if(selectedNodes.length==1){\n             this.treeDesigner.selectSubTree(selectedNodes[0])\n             }else{\n             this.treeDesigner.selectAllNodes();\n             }\n             // d3.event.preventDefault()\n             return;\n             }*/\n            var selectedNodes = this.treeDesigner.getSelectedNodes();\n            if (key == 86) {//ctrl + v\n                if (selectedNodes.length == 1) {\n                    let selectedNode = selectedNodes[0];\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    this.treeDesigner.pasteToNode(selectedNode)\n                } else if (selectedNodes.length == 0) {\n\n                }\n                return;\n            }\n\n            if (!selectedNodes.length) {\n                return;\n            }\n\n            if (key == 88) {//ctrl + x\n                this.treeDesigner.cutSelectedNodes();\n\n            } else if (key == 67) {//ctrl + c\n                this.treeDesigner.copySelectedNodes();\n\n            }\n\n        });\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nvar $ = require('jquery');\nvar global$ = Utils.getGlobalObject().jQuery;\nUtils.getGlobalObject().jQuery = $;\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/button');\nrequire('jquery-ui/ui/widgets/menu');\nrequire('jquery-ui/ui/unique-id');\nrequire('jquery-ui/ui/position');\nrequire('jquery-ui/ui/keycode');\nrequire('jquery-ui/ui/safe-active-element');\nrequire('jquery-ui/ui/widgets/autocomplete');\nUtils.getGlobalObject().jQuery = global$;\n\nimport * as d3 from './d3'\n\n$( function() {\n    $.widget( \"sd.combobox\", {\n        _create: function() {\n            this.wrapper = $( \"<span>\" )\n                .addClass( \"sd-combobox\" )\n                .insertAfter( this.element );\n\n            this.element.hide();\n            this._createAutocomplete();\n            this._createShowAllButton();\n        },\n\n        _createAutocomplete: function() {\n            var selected = this.element.children( \":selected\" ),\n                value = selected.val() ? selected.text() : \"\";\n\n            this.input = $( \"<input>\" )\n                .appendTo( this.wrapper )\n                .val( value )\n                .attr( \"title\", \"\" )\n                .attr( \"type\", \"text\" )\n                .addClass( \"sd-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left\" )\n                .autocomplete({\n                    delay: 0,\n                    minLength: 0,\n                    source: $.proxy( this, \"_source\" ),\n                    classes: {\n                        \"ui-autocomplete\": \"sd-combobox-autocomplete\"\n                    }\n                });\n            $( \"<span class='bar'>\" ).appendTo( this.wrapper )\n\n            var input = this.input;\n            this._on( this.input, {\n                autocompleteselect: function( event, ui ) {\n                    ui.item.option.selected = true;\n                    this._trigger( \"select\", event, {\n                        item: ui.item.option\n                    });\n\n                },\n\n                autocompletechange: function(){\n                    let inputD3 = d3.select($(input).get(0));\n                    AppUtils.dispatchHtmlEvent(inputD3.node(), \"change\");\n                }\n            });\n        },\n\n        _createShowAllButton: function() {\n            var input = this.input,\n                wasOpen = false;\n\n            $( \"<button>\" )\n                .attr( \"tabIndex\", -1 )\n                .attr( \"type\", \"button\" )\n                .html('<i class=\"material-icons\">arrow_drop_down</i>')\n                .appendTo( this.wrapper )\n                .addClass( \"sd-combobox-toggle ui-corner-right\" )\n                .on( \"mousedown\", function() {\n                    wasOpen = input.autocomplete( \"widget\" ).is( \":visible\" );\n                })\n                .on( \"click\", function() {\n                    input.trigger( \"focus\" );\n                    // Close if already visible\n                    if ( wasOpen ) {\n                        return;\n                    }\n\n                    // Pass empty string as value to search for, displaying all results\n                    input.autocomplete( \"search\", \"\" );\n                });\n        },\n\n        _source: function( request, response ) {\n            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), \"i\" );\n            response( this.element.children( \"option\" ).map(function() {\n                var text = $( this ).text();\n                if ( this.value && ( !request.term || matcher.test(text) ) )\n                    return {\n                        label: text,\n                        value: text,\n                        option: this\n                    };\n            }) );\n        },\n\n        _destroy: function() {\n            this.wrapper.remove();\n            this.element.show();\n        },\n\n        input_element: function(){\n            return this.input;\n        }\n    });\n} );\n\nexport class Autocomplete{\n\n\n    constructor(container){\n        this.container= container;\n        this.combobox = $( this.container.node() ).combobox();\n    }\n\n    getInput(){\n        return d3.select($(this.combobox).combobox('input_element').get(0))\n    }\n\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-scale-chromatic';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","import {Dialog} from './dialog'\n\nexport class AboutDialog extends Dialog{\n\n    constructor(app){\n        super(app.container.select('#sd-about-dialog'), app);\n    }\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {Templates} from \"../templates\";\nimport {domain as model} from \"sd-model\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class DefinitionsDialog extends Dialog {\n    changeCallback;\n\n    constructor(app) {\n        super(app.container.select('#sd-definitions-dialog'), app);\n        var self = this;\n\n        this.definitionsScopeLabel = this.container.select(\".sd-definitions-dialog-scope-label\");\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('input', function () {\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('change', function () {\n            if (self.changeCallback) {\n                self.changeCallback(this.value)\n            }\n        });\n\n        this.recalculateButton = this.container.select('button#sd-definitions-dialog-recalculate-button').on('click', function () {\n            self.app.recompute();\n        });\n\n        this.variableValuesContainer = this.container.select(\"#sd-definitions-dialog-variable-values\");\n        AppUtils.elasticTextarea(this.definitionsCode);\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.update();\n            }\n        });\n    }\n\n\n    open(definitionsSourceObject, changeCallback) {\n        super.open();\n        this.changeCallback = changeCallback;\n        this.definitionsSourceObject = definitionsSourceObject;\n        this.update();\n    }\n\n    update(force = false) {\n        if (!force && !this.isVisible()) {\n            return;\n        }\n\n        let scopeType = 'global';\n        let labelSuffix=\"\";\n        if (this.definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node';\n            let name =  this.definitionsSourceObject.name;\n            if(name){\n                labelSuffix += \" (\"+name+\")\"\n            }\n        }\n        this.definitionsScopeLabel.text(i18n.t(\"definitionsDialog.scope.\"+scopeType)+labelSuffix);\n\n        this.definitionsCode.node().value = this.definitionsSourceObject.code;\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node());\n        this.definitionsCode.classed('invalid', !!this.definitionsSourceObject.$codeError);\n        if(this.definitionsSourceObject.$codeError){\n            this.printError(this.definitionsSourceObject.$codeError);\n        }else{\n            this.printVariables(this.definitionsSourceObject.expressionScope);\n        }\n\n    }\n\n    printError(error) {\n        var html = error;\n        this.variableValuesContainer.html(html);\n    }\n\n    printVariables(scope) {\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(scope)});\n        this.variableValuesContainer.html(html);\n    }\n\n\n}\n","\nexport class Dialog{\n\n    app;\n\n    container;\n\n    constructor(container,app){\n        this.app = app;\n        this.container=container;\n        this.container.select('.sd-close-modal').on('click', ()=>this.close());\n        this.container.select('.sd-extend-modal').on('click', ()=>this.extend());\n        this.container.select('.sd-shrink-modal').on('click', ()=>this.shrink());\n    }\n\n    open(){\n        this.onOpen();\n        this.container.classed('open', true);\n    }\n    close(){\n        this.container.classed('open', false);\n        this.onClosed();\n    }\n\n    setFullScreen(fullScreen=true){\n        let self = this;\n        this.container.classed('sd-full-screen', fullScreen);\n        setTimeout(function(){ self.onResized() }, 10)\n    }\n\n    extend(){\n        this.setFullScreen();\n    }\n\n    shrink(){\n        this.setFullScreen(false);\n    }\n\n    isVisible(){\n        return this.container.classed('open');\n    }\n\n    onClosed(){\n\n    }\n\n    onOpen(){\n\n    }\n\n    onResized(){\n\n    }\n}\n","import {Dialog} from \"./dialog\";\nimport {JobParametersBuilder} from \"../jobs/job-parameters-builder\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {LoadingIndicator} from \"../loading-indicator\";\n\nexport class OperationDialog extends Dialog {\n    computationsManager;\n    jobConfigurationContainer;\n\n    jobConfigurations = [];\n    jobInstanceManager;\n    jobNameToParamValues = {};\n\n    constructor(app) {\n        super(app.container.select('.sd-operation-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n\n        this.jobConfigurationContainer = this.container.select(\".sd-operation-job-configuration\");\n        this.parameterBuilderContainer = this.jobConfigurationContainer.select(\".sd-job-parameters-builder\");\n        this.jobParametersBuilder = new JobParametersBuilder(this.parameterBuilderContainer, 'job', () => this.onJobParametersChanged());\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.dialogTitle = this.container.select(\".sd-modal-header-title\");\n\n        this.debouncedCheckWarnings = Utils.debounce(()=>this.checkWarnings(), 200);\n        this.initButtons();\n\n    }\n\n    openWith(object, operation){\n        const self = this;\n\n        this.object = object;\n        this.operation = operation;\n        this.dialogTitle.text(i18n.t('job.payoffs-transformation.name'))\n\n        return new Promise((resolve, reject) => {\n            self.resolve = resolve;\n            self.open();\n        });\n    }\n\n    onOpen() {\n        this.job = this.computationsManager.getJobByName(this.operation.jobName);\n        this.setJobParamsValues({});\n    }\n\n    onClosed() {\n        const r = this.resolve;\n        this.clear();\n        r();\n    }\n\n    setJobParamsValues(jobParamsValues, deleteId = true) {\n        if(!this.job){\n            return;\n        }\n\n        if(deleteId){\n            delete jobParamsValues.id;\n        }\n\n        this.jobParameters = this.job.createJobParameters(jobParamsValues);\n\n\n        this.jobParametersBuilder.setJobParameters(this.job.name, this.jobParameters,  {\n            'id': {\n                hidden: true\n            },\n            'objectId': {\n                value: this.object.id,\n                hidden: true\n            }\n        });\n    }\n\n\n    clearWarnings() {\n        this.container.select(\".sd-operation-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-operation-warnings\").appendSelector(\"div.sd-operation-warning\").html(msgHTML);\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-operation-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n    initButtons() {\n        this.runJobButton = this.container.select(\".sd-run-job-button\").on('click', this.runOperation.bind(this));\n\n    }\n\n    runOperation(){\n        if (!this.jobParametersBuilder.validate()) {\n            return;\n        }\n        this.disableActionButtonsAndShowLoadingIndicator();\n\n        this.onJobStarted();\n        this.computationsManager.performOperation(this.object, this.operation.name, this.jobParameters.values).catch(e=> {\n            log.error(e);\n            this.onJobFailed(e);\n        }).then(()=> {\n            this.disableActionButtonsAndShowLoadingIndicator(false);\n            let promise = this.app.checkValidityAndRecomputeObjective(false, true);\n            this.close();\n            return promise;\n        });\n    }\n\n\n    onJobParametersChanged() {\n\n    }\n\n    clear(clearParams = false) {\n        this.resolve = null;\n        this.clearWarnings();\n        this.markAsError(false);\n\n\n        if (this.job) {\n            if (clearParams) {\n                this.setJobParamsValues({});\n            } else {\n                this.setJobParamsValues(this.jobParameters.values);\n            }\n        }\n\n\n        AppUtils.show(this.jobConfigurationContainer);\n        AppUtils.show(this.runJobButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.jobConfigurationContainer);\n        AppUtils.hide(this.runJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n\n\n    onJobFailed(errors) {\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n\n\n\n}\n","import {Dialog} from \"./dialog\";\nimport {JobParametersBuilder} from \"../jobs/job-parameters-builder\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {SensitivityAnalysisJobResultTable} from \"../jobs/sensitivity-analysis-result-table\";\nimport {ProbabilisticSensitivityAnalysisJobResultTable} from \"../jobs/probabilistic-sensitivity-analysis-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {TornadoDiagramPlot} from \"../jobs/tornado-diagram-plot\";\nimport {SpiderPlot} from \"../jobs/spider-plot\";\n\nexport class SensitivityAnalysisDialog extends Dialog {\n    computationsManager;\n    jobConfigurationContainer;\n\n    jobConfigurations = [];\n    jobInstanceManager;\n    jobNameToParamValues = {};\n\n    constructor(app) {\n        super(app.container.select('.sd-sensitivity-analysis-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        // this.initJobConfigurations();\n\n        this.jobConfigurationContainer = this.container.select(\".sd-sensitivity-analysis-job-configuration\");\n        this.parameterBuilderContainer = this.jobConfigurationContainer.select(\".sd-job-parameters-builder\");\n        this.jobParametersBuilder = new JobParametersBuilder(this.parameterBuilderContainer, 'job', () => this.onJobParametersChanged());\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-sensitivity-analysis-job-results\");\n        this.jobResultPlotContainer = this.jobResultsContainer.select(\".sd-job-result-plot-container\");\n\n        this.debouncedCheckWarnings = Utils.debounce(()=>this.checkWarnings(), 200);\n\n        this.initButtons();\n        let self = this;\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.onOpen();\n            }\n        });\n    }\n\n    onOpen() {\n\n        this.initJobConfigurations();\n        if (!this.jobSelect) {\n            this.initJobSelect();\n        }\n\n        let payoffConf = Utils.cloneDeep(this.app.config.format.payoff1);\n        payoffConf.style = 'decimal';\n        payoffConf.useGrouping = false;\n        this.payoffNumberFormat = new Intl.NumberFormat('en', payoffConf);\n        // this.payoffNumberFormat = {\n        //     format: v => this.app.computationsManager.expressionEngine.constructor.toFloat(v, payoffConf.maximumFractionDigits)\n        // }\n\n        this.clear();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n\n\n    onJobSelected(jobConfig) {\n\n        this.clearWarnings();\n        this.selectedJobConfig = jobConfig;\n        if (!jobConfig) {\n            return;\n        }\n        this.jobSelect.node().value = jobConfig.jobName;\n        let jobName = this.selectedJobConfig.jobName;\n        this.job = this.computationsManager.getJobByName(jobName);\n\n        var jobParamsValues = this.jobNameToParamValues[jobName] || {};\n\n        this.setJobParamsValues(jobParamsValues)\n    }\n\n    refreshSelectedJobConfig() {\n        if (this.selectedJobConfig) {\n            this.selectedJobConfig = Utils.find(this.jobConfigurations, (c)=>c.jobName === this.selectedJobConfig.jobName);\n        }\n    }\n\n    setJobParamsValues(jobParamsValues, deleteId = true) {\n        if(!this.job){\n            return;\n        }\n        this.refreshSelectedJobConfig();\n\n        if(deleteId){\n            delete jobParamsValues.id;\n        }\n        this.jobParameters = this.job.createJobParameters(jobParamsValues);\n\n        this.jobNameToParamValues[this.job.name] = this.jobParameters.values;\n\n        this.jobParametersBuilder.setJobParameters(this.job.name, this.jobParameters, this.selectedJobConfig.customParamsConfig);\n    }\n\n    onJobParametersChanged() {\n        this.debouncedCheckWarnings();\n\n    }\n\n    getGlobalVariableNames() {\n        return this.app.dataModel.getGlobalVariableNames(true);\n    }\n\n    initJobConfigurations() {\n        let self = this;\n        this.jobConfigurations.length = 0;\n        let ExpressionEngine = this.app.expressionEngine.constructor;\n        let customVariablesValidator = values => {\n            var isValidArray = [];\n\n            var names = [];\n            values.forEach((v, i)=>{\n                let isVariableInGlobalScope = self.app.dataModel.expressionScope.hasOwnProperty(v.name);\n                var valid = names.indexOf(v.name)<0 && isVariableInGlobalScope;\n                names.push(v.name);\n                isValidArray.push(valid);\n            });\n\n            return isValidArray;\n        };\n\n        let largeScenariosNumberWarning = {\n            name: 'largeScenariosNumber',\n            data: {\n                number: 10000,\n                numberFormatted: \"10,000\"\n            },\n            check: function (jobParameters) { // called with this set to warning config object\n                let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a * (b || 1), 1);\n                return combinations > this.data.number\n            }\n        };\n        this.jobConfigurations.push({\n            jobName: 'sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try {\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n\n                }\n            },\n            warnings: [\n                largeScenariosNumberWarning,\n                {\n                    name: 'largeParametersNumber',\n                    data: {\n                        number: 2,\n                    },\n                    check: function (jobParameters) { // called with this set to warning config object\n                        return jobParameters.values.variables.length > this.data.number\n                    }\n                }\n            ]\n        });\n\n\n        this.jobConfigurations.push({\n            jobName: 'tornado-diagram',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        },\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: (values)=>{\n                        let isValidNameArray = customVariablesValidator(values);\n\n                        return values.map((v, i)=>{\n                            if(!isValidNameArray[i]){\n                                return false;\n                            }\n\n                            if (!v.name || v.min === undefined || v.min === null || v.max === undefined || v.max === null) {\n                                return false;\n                            }\n\n                            let defVal = self.app.dataModel.expressionScope[v.name];\n                            return v.min < defVal && v.max >  defVal;\n                        });\n                    }\n\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a + b, 0);\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'probabilistic-sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    formula:{\n                        options: ExpressionEngine.randomMenuList,\n                        optionsAutocomplete: true\n                    },\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [largeScenariosNumberWarning]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'spider-plot',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.length * jobParameters.values.variables.length;\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n    }\n\n\n    checkWarnings() {\n        this.clearWarnings();\n        if (!this.selectedJobConfig.warnings) {\n            return;\n        }\n\n        this.selectedJobConfig.warnings.forEach(warnConf=> {\n            if (warnConf.check.call(warnConf, this.jobParameters)) {\n                this.addWarning(warnConf);\n            }\n        })\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-sensitivity-analysis-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-sensitivity-analysis-warnings\").appendSelector(\"div.sd-sensitivity-analysis-warning\").html(msgHTML);\n    }\n\n    initJobSelect() {\n        var self = this;\n        this.jobSelect = this.container.select(\".sd-job-select-input-group\").html(Templates.get(\"selectInputGroup\", {\n            id: Utils.guid(),\n            label: null,\n            name: \"sd-job-select\",\n            options: this.jobConfigurations.map(c=>({\n                label: i18n.t(\"job.\" + c.jobName + \".name\"),\n                value: c.jobName\n            }))\n        })).select(\"select\").on('change input', function (event, d) {\n            self.onJobSelected(Utils.find(self.jobConfigurations, c=>c.jobName === this.value))\n        });\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (rows, indexes, e)=> this.onResultRowSelected(rows, indexes, e),\n            className: \"sd-\" + this.job.name\n        };\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.setClassName(\"sd-\" + this.job.name);\n            this.resultTable.hide();\n        }\n\n        if (this.job.name == \"sensitivity-analysis\") {\n            this.resultTable = new SensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n        } else if (this.job.name == \"probabilistic-sensitivity-analysis\") {\n            this.resultTable = new ProbabilisticSensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config, (v) => this.payoffNumberFormat.format(v), (v) => this.app.probabilityNumberFormat.format(v));\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n\n        }\n\n\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-sensitivity-analysis-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n    initButtons() {\n        this.runJobButton = this.container.select(\".sd-run-job-button\").on('click', ()=> {\n            if (!this.jobParametersBuilder.validate()) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.checkWarnings();\n\n            this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n                onJobStarted: this.onJobStarted,\n                onJobCompleted: this.onJobCompleted,\n                onJobFailed: this.onJobFailed,\n                onJobStopped: this.onJobStopped,\n                onJobTerminated: this.onJobTerminated,\n                onProgress: this.onProgress,\n                callbacksThisArg: this\n            }).then(jobInstanceManager=> {\n                this.jobInstanceManager = jobInstanceManager;\n            }).catch(e=> {\n                log.error(e);\n            }).then(()=> {\n                this.disableActionButtonsAndShowLoadingIndicator(false);\n            })\n\n        });\n\n        this.resumeJobButton = this.container.select(\".sd-resume-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.resume();\n        });\n\n        this.stopJobButton = this.container.select(\".sd-stop-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.stop();\n        });\n\n        this.terminateJobButton = this.container.select(\".sd-terminate-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.terminateJob();\n        });\n\n        this.backButton = this.container.select(\".sd-back-button \").on('click', ()=> {\n            if (this.jobInstanceManager) {\n                this.jobInstanceManager.terminate();\n            }\n\n        });\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    loadSavedParamValues(jobNameToParamValues){\n        this.jobNameToParamValues = jobNameToParamValues;\n        this.selectedJobConfig = null;\n        this.jobParameters = null;\n    }\n\n\n    clear(clearParams = false, clearAllParams = false) {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        if (!this.selectedJobConfig) {\n            this.onJobSelected(this.jobConfigurations[0]);\n        }\n\n        if(clearAllParams){\n            Utils.forOwn(this.jobNameToParamValues, (value, key)=> this.jobNameToParamValues[key] = {})\n        }\n\n        let globalVariableNames = this.getGlobalVariableNames();\n        Utils.forOwn(this.jobNameToParamValues, (value, key)=> {\n            let paramValues = value;\n            if(clearAllParams){\n                paramValues = {}\n            }else if(paramValues.variables){\n                paramValues.variables = paramValues.variables.filter(v=>globalVariableNames.indexOf(v.name)!==-1);\n                if(!paramValues.variables.length){\n                    paramValues.variables.push({})\n                }\n            }\n\n            this.jobNameToParamValues[key] = paramValues;\n        });\n\n        if (this.job) {\n            if (clearParams) {\n                this.jobNameToParamValues[this.job.name] = {};\n                this.setJobParamsValues({});\n            } else {\n                this.jobParameters.values.ruleName = this.computationsManager.getCurrentRule().name;\n                this.setJobParamsValues(this.jobParameters.values);\n            }\n        }\n\n\n        AppUtils.show(this.jobConfigurationContainer);\n        AppUtils.show(this.runJobButton);\n        AppUtils.show(this.clearButton);\n\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.jobResultsContainer);\n        AppUtils.hide(this.backButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n        if(this.resultPlots){\n            this.resultPlots.forEach(p=>p.destroy())\n            this.jobResultPlotContainer.selectAll(\"*\").remove();\n        }\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.jobConfigurationContainer);\n        AppUtils.hide(this.runJobButton);\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.clearButton);\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n        AppUtils.show(this.stopJobButton);\n        AppUtils.show(this.terminateJobButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.backButton);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.clearButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlots(result);\n\n\n\n    }\n\n    initResultPlots(result) {\n\n\n        if (this.job.name === \"tornado-diagram\") {\n            this.initTornadoResultPlots(result);\n        } else if (this.job.name === \"spider-plot\") {\n            this.initSpiderResultPlots(result);\n        }\n\n\n\n    }\n\n    initTornadoResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new TornadoDiagramPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    initSpiderResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new SpiderPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    onResized() {\n        if (this.resultPlots) {\n            this.resultPlots.forEach(p=>p.init());\n\n        }\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.clearButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(rows, indexes, event) {\n\n        if (!rows.length) {\n            return;\n        }\n\n        let policyIndexes = rows.map(r=>r.policyIndex).filter((value, index, self)=>self.indexOf(value) === index);\n\n        if (policyIndexes.length > 1) {\n            Tooltip.show(i18n.t('jobResultTable.tooltip.multiplePoliciesInCell', {number: policyIndexes.length}), 5, 28, event, 2000);\n            return;\n        }\n\n\n        let policy = this.result.policies[policyIndexes[0]];\n        let title = Policy.toPolicyString(policy, false);\n\n        if(rows.length==1){\n\n            let row = rows[0];\n            if(row.variables){\n                title = '';\n                this.result.variableNames.forEach((v, i)=>{\n                    if(i){\n                        title += \"; \"\n                    }\n                    title += v + \" = \" + row.variables[i];\n                });\n            }\n        }\n\n        this.app.showPolicyPreview(title, policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows())\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {i18n} from \"../i18n/i18n\";\nimport {Templates} from \"../templates\";\nimport {AppUtils} from \"../app-utils\";\nimport {InputField} from \"../form/input-field\";\nimport {PathValueAccessor} from \"../form/path-value-accessor\";\n\nexport class SettingsDialog extends Dialog{\n\n    formGroups=[];\n\n    static fontWeightOptions = ['normal', 'bold', 'lighter', 'bolder'];\n    static fontStyleOptions = ['normal', 'italic', 'oblique'];\n\n    constructor(app){\n        super(app.container.select('#sd-settings-dialog'), app);\n\n        var group = new FormGroup('general', ()=> {\n            app.treeDesigner.updateCustomStyles();\n            app.updateNumberFormats();\n        });\n        group\n            .addField('fontFamily', 'text', app.treeDesigner, 'config.fontFamily')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('numberFormatLocale', 'text', app, 'config.format.locales', {validate: (v)=>{try{new Intl.NumberFormat(v); return true;}catch (e){return false}}});\n        this.formGroups.push(group);\n\n\n        var payoffGroup = new FormGroup('payoff1', ()=>app.updatePayoffNumberFormat());\n        payoffGroup\n            .addSelectField('style', app, 'config.format.payoff1.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff1.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff1.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff1.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff1.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff1.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff1.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff1.useGrouping')\n\n        this.formGroups.push(payoffGroup);\n\n        var payoff2Group = new FormGroup('payoff2', ()=>app.updatePayoffNumberFormat());\n        payoff2Group\n            .addSelectField('style', app, 'config.format.payoff2.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff2.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff2.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff2.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff2.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff2.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff2.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff2.useGrouping')\n\n        this.formGroups.push(payoff2Group);\n\n\n        group = new FormGroup('probability', ()=>{\n            app.updateProbabilityNumberFormat();\n            app.treeDesigner.updateCustomStyles().redraw();\n        });\n        group\n            .addSelectField('style', app, 'config.format.probability.style', ['decimal', 'percent'])\n            .addField('minimumFractionDigits', 'number', app, 'config.format.probability.minimumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.probability.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.probability.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.probability.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('fontSize', 'text', app.treeDesigner, 'config.probability.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.probability.color');\n        this.formGroups.push(group);\n\n\n        var nodeGroup = new FormGroup('node', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        nodeGroup\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.strokeWidth');\n\n        nodeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.optimal.stroke');\n\n        nodeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.label.color');\n\n        nodeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.node.payoff.negativeColor');\n\n        this.formGroups.push(nodeGroup);\n\n        nodeGroup.addGroup('decision')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.decision.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.decision.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.decision.selected.fill');\n\n\n        nodeGroup.addGroup('chance')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.chance.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.chance.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.chance.selected.fill');\n\n        nodeGroup.addGroup('terminal')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.terminal.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.terminal.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.terminal.selected.fill')\n            .addGroup('payoff')\n                .addField('fontSize', 'text', app.treeDesigner, 'config.node.terminal.payoff.fontSize')\n                .addField('color', 'color', app.treeDesigner, 'config.node.terminal.payoff.color')\n                .addField('negativeColor', 'color', app.treeDesigner, 'config.node.terminal.payoff.negativeColor');\n\n\n\n        var edgeGroup = new FormGroup('edge', ()=>app.treeDesigner.updateCustomStyles().redraw())\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.stroke')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.strokeWidth');\n\n        edgeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.optimal.stroke');\n\n        edgeGroup.addGroup('selected')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.selected.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.selected.stroke');\n\n        edgeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.label.color');\n\n        edgeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.edge.payoff.negativeColor');\n        this.formGroups.push(edgeGroup);\n\n\n        var titleGroup = new FormGroup('diagramTitle', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        titleGroup\n            .addField('fontSize', 'text', app.treeDesigner, 'config.title.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.title.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.title.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.title.color')\n\n        .addGroup('margin')\n            .addField('top', 'number', app.treeDesigner, 'config.title.margin.top')\n            .addField('bottom', 'number', app.treeDesigner, 'config.title.margin.bottom');\n\n        titleGroup\n            .addGroup('description')\n            .addField('show', 'checkbox', app.treeDesigner, 'config.description.show')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.description.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.description.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.description.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.description.color')\n            .addField('marginTop', 'number', app.treeDesigner, 'config.description.margin.top');\n\n        this.formGroups.push(titleGroup);\n\n\n\n        var leagueTableGroup = new FormGroup('leagueTable');\n        leagueTableGroup\n            .addGroup('plot')\n            .addField('maxWidth', 'text', app, 'config.leagueTable.plot.maxWidth')\n            .addField('highlightedColor', 'color', app, 'config.leagueTable.plot.groups.highlighted.color')\n            .addField('highlightedDefaultColor', 'color', app, 'config.leagueTable.plot.groups.highlighted-default.color')\n            .addField('extendedDominatedColor', 'color', app, 'config.leagueTable.plot.groups.extended-dominated.color')\n            .addField('dominatedColor', 'color', app, 'config.leagueTable.plot.groups.dominated.color')\n            .addField('defaultColor', 'color', app, 'config.leagueTable.plot.groups.default.color');\n\n        this.formGroups.push(leagueTableGroup);\n\n\n\n        var otherGroup = new FormGroup('other', ()=>app.treeDesigner.redraw());\n        otherGroup\n            .addField('disableAnimations', 'checkbox', app.treeDesigner, 'config.disableAnimations')\n            .addField('forceFullEdgeRedraw', 'checkbox', app.treeDesigner, 'config.forceFullEdgeRedraw')\n            .addField('hideLabels', 'checkbox', app.treeDesigner, 'config.hideLabels')\n            .addField('hidePayoffs', 'checkbox', app.treeDesigner, 'config.hidePayoffs')\n            .addField('hideProbabilities', 'checkbox', app.treeDesigner, 'config.hideProbabilities')\n            .addField({\n                name: 'raw',\n                type: 'checkbox',\n                config: app.treeDesigner,\n                path: 'config.raw',\n                valueUpdateCallback: () => app.onRawOptionChanged()\n            }).addField({\n                name: 'textInterpolation',\n                type: 'checkbox',\n                config: app,\n                path: 'config.textInterpolation',\n                valueUpdateCallback: () => app.onTextInterpolationOptionChanged()\n            });\n\n        this.formGroups.push(otherGroup);\n\n        this.initView();\n\n    }\n\n    initFormGroups(container, data){\n        var self = this;\n        var temp = {};\n        var formGroups = container.selectAll('div.sd-form-group').filter(function(d) { return this.parentNode==container.node(); }).data(data);\n        var formGroupsEnter = formGroups.enter().appendSelector('div.sd-form-group').attr('id', d=>d.id).html(d=>Templates.get('settingsDialogFormGroup', d));\n        formGroupsEnter.select('.toggle-button').on('click', (event, d) => {\n            var g = container.select('#'+d.id);\n            g.classed('sd-extended', !g.classed('sd-extended'));\n        });\n\n        var formGroupsMerge = formGroupsEnter.merge(formGroups);\n        var inputGroups = formGroupsMerge.select('  .sd-form-group-content > .sd-form-group-inputs').selectAll('div.input-group').data(d=>d.fields);\n\n\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n\n\n        inputGroupsEnter.merge(inputGroups).select('input, select').on('change input', function(event, d){\n            var value = this.value;\n            if(d.type=='checkbox'){\n                value = this.checked\n            }\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n                if(event.type=='change'){\n                    this.value = d.valueAccessor.get();\n                }\n                return;\n            }\n            d3.select(this).classed('invalid', false);\n\n            d.valueAccessor.set(value);\n            if(d.valueUpdateCallback){\n                d.valueUpdateCallback();\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n\n        }).each(function(d, i){\n            var value = d.valueAccessor.get();\n            if(d.type=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n        });\n\n        formGroupsMerge.each(function(d){\n            self.initFormGroups(d3.select(this).select('.sd-form-group-content > .sd-form-group-child-groups'), d.groups);\n        });\n    }\n\n    initView() {\n        var temp = {};\n        this.initFormGroups(this.container.select('form#sd-settings-form'), this.formGroups);\n\n    }\n\n    onOpen(){\n        this.initView();\n    }\n\n}\n\nexport class FormGroup{\n    id;\n    name;\n    fields=[];\n    groups=[];\n    valueUpdateCallback;\n\n    constructor(name, valueUpdateCallback){\n        this.id = 'sd-form-group-'+name.replace(/\\./g, '-');\n        this.name = name;\n        this.valueUpdateCallback = valueUpdateCallback;\n    }\n\n    addSelectField(name, config, path, options) {\n        this.addField(name, 'select', config, path, null, options);\n        return this;\n    }\n\n    addField(fieldConfig){\n        if(arguments.length>1){\n            return this._addField(...arguments);\n        }\n\n        return this._addField(fieldConfig['name'], fieldConfig['type'], fieldConfig['config'], fieldConfig['path'], fieldConfig['validator'],\n                                fieldConfig['options'], fieldConfig['valueUpdateCallback'])\n    }\n\n    _addField(name, type, config, path, validator, options, valueUpdateCallback){\n        var fieldId = this.name+\"-\"+name;\n        var label = i18n.t(\"settingsDialog.\"+this.name+\".\"+name);\n        var configInputField = new ConfigInputField(fieldId,fieldId, type,label, config, path, validator, options);\n        if(valueUpdateCallback){\n            configInputField.valueUpdateCallback =  ()=>{\n                this.valueUpdateCallback();\n                valueUpdateCallback();\n            };\n        }else{\n            configInputField.valueUpdateCallback =  this.valueUpdateCallback;\n        }\n\n        this.fields.push(configInputField);\n        return this;\n    }\n\n    addGroup(name){\n        var groupName = this.name+'.'+name;\n        var group = new FormGroup(groupName, this.valueUpdateCallback);\n        this.groups.push(group);\n        return group;\n    }\n}\n\n\nclass ConfigInputField extends InputField{\n    constructor(id, name, type, label, sourceObject, path, validator, options){\n        super(id, name, type, label, new PathValueAccessor(sourceObject, path), validator, options);\n    }\n}\n\n","import {dataURLtoBlob} from \"blueimp-canvas-to-blob\";\nimport {saveAs} from \"file-saver\";\nimport * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {log, Utils} from \"sd-utils\";\nimport {LoadingIndicator} from \"./loading-indicator\";\n\nexport class Exporter {\n    static saveAs = saveAs;\n    static dataURLtoBlob = dataURLtoBlob;\n    static exportedStyles = [/^font/, /^color/, /^opacity$/];\n    static svgProperties = [/^stroke/, /^fill/, /^text/];\n\n// Below are the function that handle actual exporting:\n// getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\n    static getSvgCloneWithInlineStyles(svgNode) {\n        var svgClone = svgNode.cloneNode(true);\n        appendInlineStyles(svgNode, svgClone);\n\n        function appendInlineStyles(source, target, parentCs) {\n            if (!source) {\n                log.error('Exporter.appendInlineStyles - undefined source!');\n                return false;\n            }\n            var children = source.children;\n            var targetChildren = target.children;\n            if (!source.children) {\n                children = source.childNodes;\n                targetChildren = target.childNodes;\n            }\n\n            if (source.tagName === 'text') {\n                /*\n                 var bBox = source.getBBox();\n                 console.log(source, bBox);\n                 target.setAttribute('y', bBox.y)*/\n            }\n\n\n            var cssStyleText = '';\n            var cs = getComputedStyle(source);\n            if (!cs) {\n                return true;\n            }\n            if (cs.display === 'none') {\n                return false;\n            }\n\n\n            for (let i = 0; i < cs.length; i++) {\n                var styleName = cs.item(i);\n                if (Utils.startsWith(styleName, '-')) {\n                    continue;\n                }\n\n                var propertyValue = cs.getPropertyValue(styleName);\n                if (parentCs) {\n                    if (propertyValue === parentCs.getPropertyValue(styleName)) {\n                        continue;\n                    }\n                }\n\n                if (Exporter.exportedStyles.some(s=>s.test(styleName))) {\n                    cssStyleText += '; ' + styleName + ': ' + propertyValue;\n                } else if (Exporter.svgProperties.some(s=>s.test(styleName))) {\n                    target.setAttribute(styleName, propertyValue);\n                }\n\n            }\n            if (cssStyleText.length) {\n                target.setAttribute(\"style\", cssStyleText);\n            } else {\n                target.removeAttribute(\"style\")\n            }\n\n\n            var toRemove = [];\n            for (let i = 0; i < children.length; i++) {\n                var node = children[i];\n                if (!appendInlineStyles(node, targetChildren[i], cs)) {\n                    toRemove.push(targetChildren[i]);\n                }\n            }\n            toRemove.forEach(n=> {\n                target.removeChild(n)\n            });\n            return true;\n        }\n\n        /*var textElements = svgNode.getElementsByTagName('text')\n         _.each(textElements, function (el) {\n\n\n         var textBBox = el.getBBox();\n         console.log(el,textBBox, el.getBoundingClientRect());\n         _.each(el.getElementsByTagName('tspan'), tspan=>{\n         var tspanBBox = tspan.getBBox();\n         console.log(tspan,tspanBBox, tspan.getBoundingClientRect());\n         })\n\n         // el.style['font-family'] = el.style['font-family'] && el.style['font-family'].split(' ').splice(-1);\n         });*/\n\n\n        svgClone.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        return svgClone;\n    }\n\n\n    static getSVGString(svgNode, removeIds=false) {\n        // svgNode = svgNode.cloneNode(true);\n        var svgClone = Exporter.getSvgCloneWithInlineStyles(svgNode);\n\n        var svgString = Exporter.serializeSvgNode(svgClone);\n        // svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink=') // Fix root xlink without namespace\n        // svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href') // Safari NS namespace fix\n        svgString = Exporter.sanitizeSVG(svgString, removeIds);\n\n        return svgString;\n    }\n\n    static serializeSvgNode(svgNode) {\n        var serializer = new XMLSerializer();\n        return serializer.serializeToString(svgNode);\n    }\n\n    static validateSvgNode(svgNode) {\n        var svgString = Exporter.serializeSvgNode(svgNode);\n        var oParser = new DOMParser();\n        var doc = oParser.parseFromString(svgString, 'image/svg+xml');\n        return doc.documentElement.nodeName.indexOf('parsererror') === -1;\n    }\n\n    static svgString2Image(svgString, width, height, format, callback) {\n        var format = format ? format : 'png';\n        var imgsrc = 'data:image/svg+xml,' + (encodeURIComponent(svgString)); // Convert SVG string to dataurl\n\n        // var canvas = document.createElement(\"canvas\");\n        var canvas = document.createElement(\"canvas\");\n        var context = canvas.getContext(\"2d\");\n\n        canvas.width = width;\n        canvas.height = height;\n\n        var image = new Image;\n        image.width = width;\n        image.height = height;\n        var target = new Image;\n        target.width = width;\n        target.height = height;\n\n\n        image.onload = function () {\n            // context.clearRect(0, 0, width, height);\n            context.drawImage(image, 0, 0, width, height);\n            canvas.toBlob(function (blob) {\n                var filesize = Math.round(blob.length / 1024) + ' KB';\n                if (callback) callback(blob, filesize);\n            });\n\n        };\n\n        image.src = imgsrc;\n    }\n\n    //decisiontree@yyyy.mm.dd_hh.mm.ss\n    static getExportFileName(ext, name='decisiontree') {\n        var format = d3.timeFormat(\"%Y.%m.%d_%H.%M.%S\");\n        var date = new Date();\n        name += '@' + format(date);\n        if (ext) {\n            name += '.' + ext\n        }\n        return name;\n    }\n\n    static saveAsPng(svg, options) {\n\n        var clientSide = options.png.mode === 'client';\n        var fallback = options.png.mode === 'fallback';\n        var serverSide = options.png.mode === 'server';\n        if (Utils.detectIE()) {\n            if (clientSide) {\n                alert(i18n.t('error.pngExportNotSupportedIE'));\n                return;\n            }\n\n            if (fallback) {\n                fallback = false;\n                serverSide = true;\n            }\n        }\n        LoadingIndicator.show();\n\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n            var svgWidth = svg.attr('width');\n            var svgHeight = svg.attr('height');\n\n            var pngWidth = 4 * svgWidth;\n            var pngHeight = 4 * svgHeight;\n            if (clientSide || fallback) {\n                Exporter.svgString2Image(svgString, pngWidth, pngHeight, 'png', function (dataBlob, filesize) {\n                    try {\n                        Exporter.saveAs(dataBlob, Exporter.getExportFileName('png'));\n                        LoadingIndicator.hide();\n                    } catch (e) {\n                        log.warn('client side png rendering failed!');\n                        if (fallback) {\n                            log.info('performing server side fallback.');\n                            Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n                        } else {\n                            throw e;\n                        }\n                    }\n\n                }); // passes Blob and filesize String to the callback\n            } else if (serverSide) {\n                Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n            }\n\n\n        } catch (e) {\n            alert(i18n.t('error.pngExportNotSupported'));\n            LoadingIndicator.hide();\n            log.error('pngExportNotSupported', e);\n        }\n    }\n\n\n    static saveAsSvg(svg) {\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n\n            var blob = new Blob([svgString], {type: \"image/svg+xml\"});\n            Exporter.saveAs(blob, Exporter.getExportFileName('svg'));\n        } catch (e) {\n            alert(i18n.t('error.svgExportNotSupported'));\n            log.error('svgExportNotSupported', e);\n        }\n    }\n\n    static exportPdfClientSide(svgString, width, height) {\n        var doc = new jsPDF('l', 'pt', [width, height]);\n        var dummy = document.createElement('svg');\n        dummy.innerHTML = svgString;\n        svg2pdf(dummy.firstChild, doc, {\n            xOffset: 0,\n            yOffset: 0,\n            scale: 1\n        });\n        doc.save(Exporter.getExportFileName('pdf'));\n        LoadingIndicator.hide();\n\n    }\n\n    static postAndSave(url, data, filename, successCallback, failCallback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('post', url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function () {\n            var status = xhr.status;\n            log.debug(status);\n            var type = xhr.getResponseHeader('Content-Type');\n            if (status == 200) {\n                var blob = new Blob([this.response], {type: type});\n                Exporter.saveAs(blob, filename);\n                if (successCallback) {\n                    successCallback();\n                }\n            } else {\n                if (failCallback) {\n                    failCallback();\n                }\n            }\n        };\n        xhr.onreadystatechange = function (oEvent) {\n            if (xhr.readyState === 4) {\n                if (xhr.status !== 200) {\n                    failCallback();\n                }\n            }\n        };\n\n\n        xhr.send(JSON.stringify(data));\n    }\n\n    static exportPdfServerSide(svgString, url) {\n        var filename = Exporter.getExportFileName('pdf');\n        var data = {svg: svgString, type: 'pdf', noDownload: true};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        // Utils.postByForm(url, {\n        //     filename: filename,\n        //     type: 'pdf',\n        //     // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n        //     // scale: options.scale,\n        //     svg: svgString\n        // });\n\n    }\n\n    static exportPngServerSide(svgString, url, pngWidth, pngHeight) {\n        var filename = Exporter.getExportFileName('png');\n        var data = {svg: svgString, type: 'png', noDownload: true, width: pngWidth};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        /*Utils.postByForm(url, {\n         filename: filename,\n         type: 'pdf',\n         // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n         // scale: options.scale,\n         svg: svgString\n         });*/\n\n    }\n\n    static saveAsPdf(svg, options) {\n        var clientSidePdfExportAvailable = Exporter.isClientSidePdfExportAvailable();\n        if (options.pdf.mode === 'client') {\n            if (!clientSidePdfExportAvailable) {\n                alert(i18n.t('error.jsPDFisNotIncluded'));\n                return;\n            }\n        }\n        LoadingIndicator.show();\n        var margin = 20;\n        var svgElement = svg.node();\n        var width = svgElement.width.baseVal.value + 2 * margin,\n            height = svgElement.height.baseVal.value + 2 * margin;\n        try {\n            var svgString = Exporter.getSVGString(svgElement);\n\n            var fallback = options.pdf.mode === 'fallback';\n            if (options.pdf.mode === 'client' || fallback) {\n                try {\n                    Exporter.exportPdfClientSide(svgString, width, height);\n                } catch (e) {\n                    log.error('client side pdf rendering failed!');\n                    if (fallback) {\n                        log.info('performing server side fallback.');\n                        Exporter.exportPdfServerSide(svgString, options.serverUrl);\n                    } else {\n                        throw e;\n                    }\n                }\n            } else if (options.pdf.mode === 'server') {\n                Exporter.exportPdfServerSide(svgString, options.serverUrl);\n            }\n        } catch (e) {\n            log.error('pdfExportNotSupported', e);\n            LoadingIndicator.hide();\n            alert(i18n.t('error.pdfExportNotSupported'));\n\n        }\n\n    }\n\n    static isClientSidePdfExportAvailable() {\n        return typeof jsPDF !== 'undefined' && typeof svg2pdf !== 'undefined'\n    }\n\n\n    static sanitizeSVG(svg, removeIds=false) {\n        let sanitized = svg\n            .replace(/zIndex=\"[^\"]+\"/g, '')\n            .replace(/isShadow=\"[^\"]+\"/g, '')\n            .replace(/symbolName=\"[^\"]+\"/g, '')\n            .replace(/jQuery[0-9]+=\"[^\"]+\"/g, '')\n            .replace(/url\\((\"|&quot;)(\\S+)(\"|&quot;)\\)/g, 'url($2)')\n            .replace(/url\\([^#]+#/g, 'url(#')\n            .replace(/<svg /, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ')\n            .replace(/ (NS[0-9]+\\:)?href=/g, ' xlink:href=')\n            .replace(/\\n/, ' ')\n            .replace(/<\\/svg>.*?$/, '</svg>')\n            .replace(/(fill|stroke)=\"rgba\\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\\.]+)\\)\"/g, '$1=\"rgb($2)\" $1-opacity=\"$3\"')\n            .replace(/&nbsp;/g, '\\u00A0')\n            .replace(/&shy;/g, '\\u00AD');\n\n        if(removeIds){\n            return sanitized.replace(/id=\"[^\"]+\"/g, '')\n        }\n\n        return sanitized;\n\n    }\n\n    static saveAsCSV(rows, name='decisiontree') {\n        var csvRows = [];\n        rows.forEach(row => {\n            csvRows.push(row.map(r=>Exporter.escapeCsvField(r)).join(','))\n        });\n        var csvString = csvRows.join(\"\\r\\n\");\n\n        var blob = new Blob([csvString], {type: \"text/csv\"});\n        Exporter.saveAs(blob, Exporter.getExportFileName('csv', name));\n\n    }\n\n    static escapeCsvField(field){\n        if(Utils.isString(field)){\n            return '\"'+field.replace(/\"/g, '\"\"')+'\"'\n        }\n        return field;\n    }\n}\n","import {i18n} from './i18n/i18n'\n\nexport class FileLoader{\n\n    static openFile(callback){\n        var input =  document.getElementById('sd-file-input');\n        input.onchange = loadFile;\n\n        input.click();\n\n        function loadFile() {\n\n             var file, fr;\n\n\n            if (typeof window.FileReader !== 'function') {\n                alert(i18n.t('error.fileApiNotSupported'));\n                return;\n            }\n            input =  document.getElementById('sd-file-input');\n            if (!input.files) {\n                alert(i18n.t('error.inputFilesProperty'));\n                return;\n            }\n\n            if (!input.files[0]) {\n                return;\n            }\n\n            file = input.files[0];\n            fr = new FileReader();\n            fr.onload = receivedText;\n            fr.readAsText(file);\n\n\n            function receivedText(e) {\n                callback(e.target.result);\n                input.value = null;\n            }\n        }\n    }\n\n}\n","export class InputField{\n    name;\n    type;\n    validator;\n    valueAccessor;\n\n    id;\n    label;\n    valueUpdateCallback;\n\n    constructor(id, name, type, label, valueAccessor, validator, options, parser, styleClass){\n        this.name = name;\n        this.type = type;\n        this.valueAccessor = valueAccessor;\n        this.validator = validator;\n        this.id=id;\n        this.label = label;\n        this.options = options;\n        this.parser = parser;\n        this.styleClass = styleClass;\n    }\n\n    getValue(){\n        return this.valueAccessor.get();\n    }\n\n    setValue(val){\n        return this.valueAccessor.set(val);\n    }\n\n    parse(val){\n        if(this.parser){\n            return this.parser(val)\n        }\n        return val;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PathValueAccessor {\n    sourceObject;\n    path;\n    constructor(sourceObject, path){\n        this.sourceObject=sourceObject;\n        this.path = path;\n    }\n\n    get(){\n        return Utils.get(this.sourceObject, this.path);\n    }\n\n    set(v){\n        return Utils.set(this.sourceObject, this.path, v);\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Neues Diagramm\",\n        \"openDiagram\": \"Diagramm öffnen\",\n        \"saveDiagram\": \"Aktuelles Diagramm speichern\",\n        \"export\":{\n            \"label\": \"Exportieren nach\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Baum\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"Aussicht\",\n            \"options\": {\n                \"criterion1\":\"Kriterium 1\",\n                \"criterion2\":\"Kriterium 2\",\n                \"twoCriteria\":\"Zwei Kriterien\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regel\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Rückgängig machen\",\n        \"redo\": \"Wiederholen\",\n        \"settings\": \"Einstellungen\",\n        \"about\": \"Über\",\n        \"sensitivityAnalysis\": \"Sensitivitätsanalyse\",\n        \"recompute\": \"Neu Berechnen\"\n    },\n    \"node\":{\n        \"name\": \"Beschreibung\"\n    },\n    \"edge\":{\n        \"name\": \"Beschreibung\",\n        \"payoff\": \"Auszahlung\",\n        \"probability\": \"Wahrscheinlichkeit\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Rangliste\",\n        \"buttons\": {\n            \"downloadCsv\": \"CSV Herunterladen\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regel #\",\n            \"policy\": \"Regel\",\n            \"comment\": \"Kommentar\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominiert (durch#{{policy}})\",\n            \"extendedDominatedBy\": \"Erweitert-dominiert (durch #{{policy1}} und #{{policy2}})\",\n            \"incratio\": \"Inkrementelles Verhältnis={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Markiert\",\n                \"highlighted-default\": \"Empfohlen (für Standard-WTP)\",\n                \"extended-dominated\" : \"Erweitert-dominiert\",\n                \"dominated\": \"Dominiert\",\n                \"default\": \"Andere\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Richtung von{{name}} Optimierung\",\n                \"gradientArrow2\": \"Richtung von {{name}} Optimierung\",\n                \"dominatedRegion\": \"Dominierte Region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Graumarkiert Bereich stellt dominierte Region dar\",\n                \"gradientArrows\": \"Pfeile zeigen Verbesserungsrichtung an\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivitätsanalyse\",\n        \"buttons\": {\n            \"runJob\": \"Lauf\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Beenden\",\n            \"resumeJob\": \"Fortsetzen\",\n            \"downloadCsv\": \"CSV Herunterladen\",\n            \"back\": \"Zurück\",\n            \"clear\": \"Löschen\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Entfernen\",\n            \"addParameterValue\": \"Hinzufügen\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} Grundregeln\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Wärmekarte\"\n            }\n        },\n        \"policyPreview\": \"Grundregel Vorschau\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-Wege-Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado-diagramm\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Verringerung\",\n                    \"high\": \"Erhöhung\"\n                },\n                \"xAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistische Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"numberOfRuns\": {\n                    \"label\": \"Anzahl der Läufe\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formel\",\n                        \"help\": \"Wählen Sie die Formelvorlage aus dem Menü aus oder schreiben Sie benutzerdefinierten Code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\",\n                \"param-computation\": \"Fehler beim Berechnen von Parameterwerten:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Netzdiagramm\",\n            \"param\": {\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- prozentuale Veränderung zum Berücksichtigen\"\n                },\n                \"length\": {\n                    \"label\": \"Anzahl der zu testenden Werte\",\n                    \"help\": \"Anzahl der zu testenden Werte (an einer Seite des Bereichs)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Prozentuale Veränderung\",\n                \"yAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"payoffs-transformation\": {\n            \"name\": \"Auszahlungstransformation\",\n            \"param\": {\n                \"functionName\": {\n                    \"label\": \"Funktionsname\"\n                },\n                \"functionBody\": {\n                    \"label\": \"Funktionskörper\"\n                },\n                \"functionArgumentName\": {\n                    \"label\": \"Name des Funktionsarguments\"\n                },\n                \"makeClone\": {\n                    \"label\": \"Kopieren\"\n                }\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Rangliste\"\n        },\n        \"errors\":{\n            \"generic\": \"Fehler bei der Sensitivitätsanalyse: {{message}}\",\n            \"params\": \"Inkorrekte {{jobName}} Parametern\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Einstellungen\",\n        \"general\":{\n            \"title\": \"Allgemein\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontFamily\": \"Schriftfamilie\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"numberFormatLocale\": \"Zahlenformat Gebietsschema\"\n        },\n        \"payoff1\":{\n            \"title\": \"Auszahlung 1 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"payoff2\":{\n            \"title\": \"Auszahlung 2 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"probability\":{\n            \"title\": \"Wahrscheinlichkeit Zahlenformat\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"fontSize\": \"Schriftgröße\",\n            \"color\": \"Farbe\"\n        },\n        \"node\":{\n            \"title\": \"Knoten\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Beschreibung Schriftgröße\",\n                \"color\": \"Beschreibungsfarbe\"\n            },\n            \"payoff\": {\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            },\n            \"decision\": {\n                \"title\": \"Entscheidungsknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Zufall Knoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Endknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                },\n                \"payoff\": {\n                    \"title\": \"Auszahlung\",\n                    \"fontSize\": \"Schriftgröße\",\n                    \"color\": \"Farbe\",\n                    \"negativeColor\": \"Negative Farbe\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \" Zweig\",\n            \"stroke\": \"Farbe\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"selected\":{\n                \"title\": \"Ausgewählt\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\"\n            },\n            \"payoff\":{\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagrammtitel\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"color\": \"Farbe\",\n            \"margin\":{\n                \"title\": \"Rand\",\n                \"top\": \"Oben\",\n                \"bottom\": \"Unten\"\n            },\n            \"description\":{\n                \"title\": \"Untertitel (Diagrammbeschreibung)\",\n                \"show\": \"Anzeigen\",\n                \"fontSize\": \"Schriftgröße\",\n                \"fontWeight\": \"Schriftgewicht\",\n                \"fontStyle\": \"Schriftstil\",\n                \"color\": \"Farbe\",\n                \"marginTop\": \"Rand Oben\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Rangliste\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max Breite\",\n                \"highlightedColor\": \"Farbe der markierten Regel\",\n                \"highlightedDefaultColor\": \"Empfohlene Regel(für Standard-WTP) Farbe\",\n                \"extendedDominatedColor\": \"Farbe der erweitert-dominierten Regel\",\n                \"dominatedColor\": \"Farbe der dominierten Regel\",\n                \"defaultColor\": \"Farbe der anderen Regeln\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Weitere\",\n            \"disableAnimations\": \"Animationen Deaktivieren\",\n            \"forceFullEdgeRedraw\": \"Erzwingt vollständige Neuzeichnung der Zweige\",\n            \"hideLabels\": \"Verstecke Beschreibung\",\n            \"hidePayoffs\": \"Verstecke Auszahlungen\",\n            \"hideProbabilities\": \"Verstecke Wahrscheinlichkeiten\",\n            \"raw\": \"Rau\",\n            \"textInterpolation\": \"Textinterpolation\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Über\"\n    },\n    \"help\":{\n        \"header\": \"Hilfe\",\n        \"mouse\": {\n            \"header\":\"Mausaktionen:\",\n            \"list\":{\n                \"1\": \"Linke Maustaste: Knoten/Zweig Auswahl\",\n                \"2\": \"Rechte Maustaste: Kontextmenü (Hinzufügen / Manipulieren von Knoten)\",\n                \"3\": \"Linke Maus Doppelklick: Kontextmenü\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Tastatur:\",\n            \"list\":{\n                \"1\": \"Del: ausgewählte Knoten Löschen\",\n                \"2\": \"Ctrl-C/X: ausgewählte Knoten Kopieren/Ausschneiden\",\n                \"3\": \"Ctrl-V: kopierte Knoten als Teilbaum ausgewähltes Knotens einfügen\",\n                \"4\": \"Ctrl-Y/Z: Rückgängig/Wiederholen\",\n                \"5\": \"Ctrl-Alt-D/C/T: Neue Entscheidungs/Zufall/Endsknoten als Unterknoten von <strong>ausgewähltem Knoten</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Neue Entscheidungs/Zufall Knoten in <strong>ausgewählten Zweig </strong> Injizieren\"\n            }\n        },\n        \"docs\": \"Die Dokumentation von SilverDecisions ist unter <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a> verfügbar\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variablendefinitionen\",\n        \"scope\": {\n            \"global\": \"Globaler Anwendungsbereich\",\n            \"node\": \"Gewählten Knoten und Teilbaum Anwendungsbereich\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variabel Anwendungsbereich:\",\n            \"global\": \"Globaler\",\n            \"node\": \"Gewählten Knoten und Teilbaum\"\n        },\n        \"header\": \"Variablen\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Dialog Öffnen\",\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Mehrere Kriterien\",\n        \"defaultMaximizedCriterionName\": \"Effekt\",\n        \"defaultMinimizedCriterionName\": \"Kosten\",\n        \"nameOfCriterion1\": \"Name des Kriteriums 1\",\n        \"nameOfCriterion2\": \"Name des Kriteriums 2\",\n        \"defaultCriterion1Weight\": \"Default 1. Kriterium Gewicht\",\n        \"weightLowerBound\": \"Gewicht untere Grenze\",\n        \"weightUpperBound\": \"Gewicht obere Grenze\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Rangliste anzeigen\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontaler Rand\",\n        \"marginVertical\": \"Vertikaler Rand\",\n        \"nodeSize\": \"Knotengröße\",\n        \"edgeSlantWidthMax\": \"Kantenschräge (max)\",\n        \"gridWidth\": \"Breite\",\n        \"gridHeight\": \"Höhe\",\n        \"scale\": \"Skala\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Einzelheiten\",\n        \"title\" : \"Titel\",\n        \"description\" : \"Beschreibung\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Entscheidungsknoten\",\n                \"chance\":\"Zufall Knoten\",\n                \"terminal\":\"Endknoten\"\n            },\n            \"edge\": \"Zweig\",\n            \"text\": \"Schwimmender Text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Verbindungen\",\n                \"child\": {\n                    \"header\": \"Zweig #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Möchten Sie das aktuelle Diagramm wirklich löschen? Alle nicht gespeicherten Daten werden verloren.\",\n        \"openDiagram\": \"Sind Sie sicher? Alle nicht gespeicherten Diagrammdaten werden verloren.\",\n        \"beforeunload\": \"Sind Sie sicher, dass Sie SilverDecisions schließen möchten? Alle nicht gespeicherten Diagrammdaten werden verloren.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Fehler beim Analysieren der Datei!\",\n        \"fileApiNotSupported\":\"Die Datei-API wird in diesem Browser noch nicht unterstützt.\",\n        \"inputFilesProperty\":\"Ihr Browser scheint die `files`-Eigenschaft der Dateieingaben nicht zu unterstützen.\",\n        \"notSilverDecisionsFile\":\"Keine SilverDecisions-Datei!\",\n        \"incorrectVersionFormat\": \"Falsches Format der Versionszeichenfolge!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version der Datei ist neuer als Version des Softwares. Einige Funktionen möglicherweise fehlen.\",\n        \"objectiveComputationFailure\": \"Fehler beim Berechnen von Objektiven!\",\n        \"diagramDrawingFailure\": \"Fehler beim Zeichnen des Diagramms!\",\n        \"malformedData\":\"Fehler beim Lesen der Baumdaten!\",\n        \"pngExportNotSupported\": \"Der Export nach PNG wird in Ihrem Browser nicht unterstützt.\",\n        \"pngExportNotSupportedIE\": \"Der Export nach PNG wird in Internet Explorer nicht unterstützt.\",\n        \"svgExportNotSupported\": \"Der Export nach SVG wird in Ihrem Browser nicht unterstützt.\",\n        \"pdfExportNotSupported\": \"Der Export nach PDF wird in Ihrem Browser nicht unterstützt.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Falsche Auszahlungsformat Optionen\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Falsche Wahrscheinlichkeitsformat Optionen\",\n        \"incorrectNumberFormatOptions\": \"Falsche Zahlenformat, die Standardeinstellungen angewendet.\",\n        \"jsPDFisNotIncluded\": \"jsPDF ist nicht enthalten!\",\n        \"serverSideExportRequestFailure\": \"Export Server Anfrage fehlgeschlagen!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"New diagram\",\n        \"openDiagram\": \"Open existing diagram\",\n        \"saveDiagram\": \"Save current diagram\",\n        \"export\":{\n            \"label\": \"Export to\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Tree\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"View\",\n            \"options\": {\n                \"criterion1\":\"Criterion 1\",\n                \"criterion2\":\"Criterion 2\",\n                \"twoCriteria\":\"Two criteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Rule\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Undo\",\n        \"redo\": \"Redo\",\n        \"settings\": \"Settings\",\n        \"about\": \"About\",\n        \"sensitivityAnalysis\": \"Sensitivity analysis\",\n        \"recompute\": \"Recompute\"\n    },\n    \"node\":{\n        \"name\": \"Label\"\n    },\n    \"edge\":{\n        \"name\": \"Label\",\n        \"payoff\": \"Payoff\",\n        \"probability\": \"Probability\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"League table\",\n        \"buttons\": {\n            \"downloadCsv\": \"Download CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Policy #\",\n            \"policy\": \"Policy\",\n            \"comment\": \"Comment\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominated (by #{{policy}})\",\n            \"extendedDominatedBy\": \"extended-dominated (by #{{policy1}} and #{{policy2}})\",\n            \"incratio\": \"incremental ratio={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Recommended (for some WTP in range)\",\n                \"highlighted-default\": \"Recommended (for default WTP)\",\n                \"extended-dominated\" : \"Extended-dominated\",\n                \"dominated\": \"Dominated\",\n                \"default\": \"Other\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direction of {{name}} optimization\",\n                \"gradientArrow2\": \"Direction of {{name}} optimization\",\n                \"dominatedRegion\": \"Not recommended region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Grey area highlights not recommended region\",\n                \"gradientArrows\": \"Arrows indicate improvement direction\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivity analysis\",\n        \"buttons\": {\n            \"runJob\": \"Run\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Terminate\",\n            \"resumeJob\": \"Resume\",\n            \"downloadCsv\": \"Download CSV\",\n            \"back\": \"Back\",\n            \"clear\": \"Clear\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Remove\",\n            \"addParameterValue\": \"Add\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} policies\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Heatmap\"\n            }\n        },\n        \"policyPreview\": \"policy preview\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-way sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado diagram\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decrease\",\n                    \"high\": \"Increase\"\n                },\n                \"xAxisTitle\": \"Payoff\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistic sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"numberOfRuns\": {\n                    \"label\": \"Number of runs\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Select formula template from the menu or write custom code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\",\n                \"param-computation\": \"Error computing parameter values:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Spider plot\",\n            \"param\": {\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- percentage change to consider\"\n                },\n                \"length\": {\n                    \"label\": \"Number of values to test\",\n                    \"help\": \"Number of values to test (in one side of range)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Percentage change\",\n                \"yAxisTitle\": \"Payoff\"\n            }\n        },\n        \"payoffs-transformation\": {\n            \"name\": \"Payoffs Transformation\",\n            \"param\": {\n                \"functionName\": {\n                    \"label\": \"Function name\"\n                },\n                \"functionBody\": {\n                    \"label\": \"Function body\"\n                },\n                \"functionArgumentName\": {\n                    \"label\": \"Function argument name\"\n                },\n                \"makeClone\": {\n                    \"label\": \"Make clone\"\n                }\n            }\n        },\n        \"league-table\":{\n            \"name\": \"League table\"\n        },\n        \"errors\":{\n            \"generic\": \"Error in {{jobName}} computations: {{message}}\",\n            \"params\": \"Incorrect {{jobName}} parameters\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Settings\",\n        \"general\":{\n            \"title\": \"General\",\n            \"fontSize\": \"Font size\",\n            \"fontFamily\": \"Font family\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"numberFormatLocale\": \"Number format locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Payoff 1 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"payoff2\":{\n            \"title\": \"Payoff 2 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"probability\":{\n            \"title\": \"Probability number format\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"fontSize\": \"Font size\",\n            \"color\": \"Color\"\n        },\n        \"node\":{\n            \"title\": \"Node\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Label font size\",\n                \"color\": \"Label color\"\n            },\n            \"payoff\": {\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            },\n            \"decision\": {\n                \"title\": \"Decision Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Chance Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Terminal Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                },\n                \"payoff\": {\n                    \"title\": \"Payoff\",\n                    \"fontSize\": \"Font size\",\n                    \"color\": \"Color\",\n                    \"negativeColor\": \"Negative color\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Edge\",\n            \"stroke\": \"Color\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"selected\":{\n                \"title\": \"Selected\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\"\n            },\n            \"payoff\":{\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagram title\",\n            \"fontSize\": \"Font size\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"color\": \"Color\",\n            \"margin\":{\n                \"title\": \"Margin\",\n                \"top\": \"Top\",\n                \"bottom\": \"Bottom\"\n            },\n            \"description\":{\n                \"title\": \"Subtitle (diagram description)\",\n                \"show\": \"Show\",\n                \"fontSize\": \"Font size\",\n                \"fontWeight\": \"Font weight\",\n                \"fontStyle\": \"Font style\",\n                \"color\": \"Color\",\n                \"marginTop\": \"Margin top\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"League Table\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max width\",\n                \"highlightedColor\": \"Recommended (for some WTP in range) policy color\",\n                \"highlightedDefaultColor\": \"Recommended (for default WTP) policy color\",\n                \"extendedDominatedColor\": \"Extended dominated policy color\",\n                \"dominatedColor\": \"Dominated policy color\",\n                \"defaultColor\": \"Other policies color\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Other\",\n            \"disableAnimations\": \"Disable animations\",\n            \"forceFullEdgeRedraw\": \"Force full redraw of edges\",\n            \"hideLabels\": \"Hide labels\",\n            \"hidePayoffs\": \"Hide payoffs\",\n            \"hideProbabilities\": \"Hide probabilities\",\n            \"raw\": \"Raw\",\n            \"textInterpolation\": \"Text interpolation\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"About\"\n    },\n    \"help\":{\n        \"header\": \"Help\",\n        \"mouse\": {\n            \"header\":\"Mouse actions:\",\n            \"list\":{\n                \"1\": \"left mouse button: node/edge selection\",\n                \"2\": \"right mouse button: context menu (adding/manipulating nodes)\",\n                \"3\": \"left mouse dbclick: context menu\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Keyboard:\",\n            \"list\":{\n                \"1\": \"Del: delete selected nodes\",\n                \"2\": \"Ctrl-C/X: copy/cut selected nodes\",\n                \"3\": \"Ctrl-V: paste copied nodes as a subtree of a selected node\",\n                \"4\": \"Ctrl-Y/Z: undo/redo\",\n                \"5\": \"Ctrl-Alt-D/C/T: add new Decision/Chance/Terminal subnode of a <strong>selected node</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inject new Decision/Chance node into a <strong>selected edge</strong>\"\n            }\n        },\n        \"docs\": \"Documentation of SilverDecisions is available <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variable definitions\",\n        \"scope\": {\n            \"global\": \"global scope\",\n            \"node\": \"selected node and subtree scope\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variable scope:\",\n            \"global\": \"global\",\n            \"node\": \"selected node and subtree\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Open dialog\",\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Multiple criteria\",\n        \"defaultMaximizedCriterionName\": \"Effect\",\n        \"defaultMinimizedCriterionName\": \"Cost\",\n        \"nameOfCriterion1\": \"Name for criterion 1\",\n        \"nameOfCriterion2\": \"Name for criterion 2\",\n        \"defaultCriterion1Weight\": \"Default 1st criterion weight\",\n        \"weightLowerBound\": \"Weight lower bound\",\n        \"weightUpperBound\": \"Weight upper bound\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Show league table\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontal Margin\",\n        \"marginVertical\": \"Vertical Margin\",\n        \"nodeSize\": \"Node size\",\n        \"edgeSlantWidthMax\": \"Edge slant (max)\",\n        \"gridWidth\": \"Width\",\n        \"gridHeight\": \"Height\",\n        \"scale\": \"Scale\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Details\",\n        \"title\" : \"Title\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Decision Node\",\n                \"chance\":\"Chance Node\",\n                \"terminal\":\"Terminal Node\"\n            },\n            \"edge\": \"Edge\",\n            \"text\": \"Floating text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connections\",\n                \"child\": {\n                    \"header\": \"Edge #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Do you really want to clear current diagram? All unsaved data will be lost.\",\n        \"openDiagram\": \"Are you sure? All unsaved diagram data will be lost.\",\n        \"beforeunload\": \"Are you sure you want to close SilverDecisions? All unsaved diagram data will be lost.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Error parsing file!\",\n        \"fileApiNotSupported\":\"The file API isn't supported on this browser yet.\",\n        \"inputFilesProperty\":\"Your browser doesn't seem to support the `files` property of file inputs.\",\n        \"notSilverDecisionsFile\":\"Not a SilverDecisions file!\",\n        \"incorrectVersionFormat\": \"Incorrect format of version string!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version in file is newer than version of the application. Some features may be missing.\",\n        \"objectiveComputationFailure\": \"Error while computing objective!\",\n        \"diagramDrawingFailure\": \"Error while drawing diagram!\",\n        \"malformedData\":\"Error reading tree data!\",\n        \"pngExportNotSupported\": \"Export to PNG is not supported in your browser.\",\n        \"pngExportNotSupportedIE\": \"Export to PNG not supported in Internet Explorer.\",\n        \"svgExportNotSupported\": \"Export to SVG is not supported in your browser.\",\n        \"pdfExportNotSupported\": \"Export to PDF is not supported in your browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Incorrect payoff number format options\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Incorrect probability number format options\",\n        \"incorrectNumberFormatOptions\": \"Incorrect number format options, using default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF is not included!\",\n        \"serverSideExportRequestFailure\": \"Export Server request failed!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nouveau diagramme\",\n        \"openDiagram\": \"Ouvrir le diagramme existant\",\n        \"saveDiagram\": \"Enregistrer le diagramme actuel\",\n        \"export\":{\n            \"label\": \"Exporter vers\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposition\",\n            \"manual\": \"Manuel\",\n            \"tree\": \"Arbre\",\n            \"cluster\": \"Grappe\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vue\",\n            \"options\": {\n                \"criterion1\":\"Critère 1\",\n                \"criterion2\":\"Critère 2\",\n                \"twoCriteria\":\"Deux critères\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regle\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Annuler\",\n        \"redo\": \"Refaire\",\n        \"settings\": \"Parametres\",\n        \"about\": \"A propos\",\n        \"sensitivityAnalysis\": \"Analyse de sensibilité\",\n        \"recompute\": \"Recalculer\"\n    },\n    \"node\":{\n        \"name\": \"Étiquette\"\n    },\n    \"edge\":{\n        \"name\": \"Étiquette\",\n        \"payoff\": \"Avantage\",\n        \"probability\": \"Probabilité\"\n    },\n    \"text\":{\n        \"value\": \"Texte\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classement\",\n        \"buttons\": {\n            \"downloadCsv\": \"Télécharger CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Règle #\",\n            \"policy\": \"Règle\",\n            \"comment\": \"Commentaire\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominé (par #{{policy}})\",\n            \"extendedDominatedBy\": \"Étendu-dominé (par #{{policy1}} et #{{policy2}})\",\n            \"incratio\": \"Ratio incrémental={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Surligné\",\n                \"highlighted-default\": \"Recommandée (pour WTP par défaut)\",\n                \"extended-dominated\" : \"Étendu-dominé\",\n                \"dominated\": \"Dominé\",\n                \"default\": \"Autre\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"La direction de {{name}} optimisation\",\n                \"gradientArrow2\": \"La direction de {{name}} optimisation\",\n                \"dominatedRegion\": \"Région dominée\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"La région grise surligne la région dominée\",\n                \"gradientArrows\": \"Les flèches indiquent une direction d'amélioration\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analyse de sensibilité\",\n        \"buttons\": {\n            \"runJob\": \"Exécuter\",\n            \"stopJob\": \"Arrêter\",\n            \"terminateJob\": \"Terminer\",\n            \"resumeJob\": \"Reprendre\",\n            \"downloadCsv\": \"Télécharger CSV\",\n            \"back\": \"Retourner\",\n            \"clear\": \"Effacer\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Effacer\",\n            \"addParameterValue\": \"Ajouter\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} règles\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Carte de chaleur\"\n            }\n        },\n        \"policyPreview\": \"Aperçu de la règle\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité multivariée\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Graphique en tornade\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Diminuer\",\n                    \"high\": \"Augmenter\"\n                },\n                \"xAxisTitle\": \"Avantage\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité probabiliste\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"numberOfRuns\": {\n                    \"label\": \"Nombre d'essais\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formule\",\n                        \"help\": \"Sélectionner le modèle de la formule dans le menu ou écrire un code personnalisé.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\",\n                \"param-computation\": \"Erreur de calcul des valeurs de paramètres:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Graphique en radar\",\n            \"param\": {\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- changement de pourcentage à considérer\"\n                },\n                \"length\": {\n                    \"label\": \"Nombre de valeurs à tester\",\n                    \"help\": \"Nombre de valeurs à tester (dans une partie de gamme)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Nom\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Changement de pourcentage\",\n                \"yAxisTitle\": \"Avantage\"\n            }\n        },\n        \"payoffs-transformation\": {\n            \"name\": \"Transformation des gains\",\n            \"param\": {\n                \"functionName\": {\n                    \"label\": \"Nom de la fonction\"\n                },\n                \"functionBody\": {\n                    \"label\": \"Corps de fonction\"\n                },\n                \"functionArgumentName\": {\n                    \"label\": \"Nom de l'argument de la fonction\"\n                },\n                \"makeClone\": {\n                    \"label\": \"Cloner\"\n                }\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classement\"\n        },\n        \"errors\":{\n            \"generic\": \"Erreur de calcul d'analyse de sensibilité: {{message}}\",\n            \"params\": \"Paramètres du {{jobName}} sont incorrect\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Parametres\",\n        \"general\":{\n            \"title\": \"Général\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontFamily\": \"Famille de police\",\n            \"fontWeight\": \"Poid de la police\",\n            \"fontStyle\": \"Style de police\",\n            \"numberFormatLocale\": \"format local de numérotation\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format de la numérotation des avantages 1\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format de la numérotation des avantages 2\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"probability\":{\n            \"title\": \"Format de la numérotatio des probabilités\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"fontSize\": \"Taille de police\",\n            \"color\": \"Couleur\"\n        },\n        \"node\":{\n            \"title\": \"Noud\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police de l'étiquette\",\n                \"color\": \"Couleur de l'étiquette\"\n            },\n            \"payoff\": {\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            },\n            \"decision\": {\n                \"title\": \"Noeud décisionnel\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de trait\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionnée\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Noud aléatoire\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Noeud terminal\",\n                \"fill\": \"Couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                },\n                \"payoff\": {\n                    \"title\": \"Avantage\",\n                    \"fontSize\": \"Taille de la police\",\n                    \"color\": \"Couleur\",\n                    \"negativeColor\": \"Négatif couleur\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Bord\",\n            \"stroke\": \"Couleur\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"selected\":{\n                \"title\": \"Choisi\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\"\n            },\n            \"payoff\":{\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titre du diagramme\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontWeight\": \"Poids de la police\",\n            \"fontStyle\": \"Style de la police\",\n            \"color\": \"Couleur\",\n            \"margin\":{\n                \"title\": \"Marge\",\n                \"top\": \"Haut du diagramme\",\n                \"bottom\": \"Bas du diagramme\"\n            },\n            \"description\":{\n                \"title\": \"Sous-titre (description du diagramme)\",\n                \"show\": \"Afficher\",\n                \"fontSize\": \"Taille de la police\",\n                \"fontWeight\": \"Poids de la police\",\n                \"fontStyle\": \"Style de police\",\n                \"color\": \"Couleur\",\n                \"marginTop\": \"Haut du marge\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classement\",\n            \"plot\": {\n                \"title\": \"Le graphe\",\n                \"maxWidth\": \"Largeur maximale\",\n                \"highlightedColor\": \"Couleur de la règle soulignée\",\n                \"highlightedDefaultColor\": \"Couleur recommandée pour la règle (pour WTP par défaut)\",\n                \"extendedDominatedColor\": \"Couleur de la règle étendu-dominée\",\n                \"dominatedColor\": \"Couleur de la règle dominée\",\n                \"defaultColor\": \"Couleur des autres règles\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Autre\",\n            \"disableAnimations\": \"Désactiver les animations\",\n            \"forceFullEdgeRedraw\": \"Forcer le redessinage complet des bords\",\n            \"hideLabels\": \"Masquer les étiquettes\",\n            \"hidePayoffs\": \"Masquer les paiements\",\n            \"hideProbabilities\": \"Masquer les probabilités\",\n            \"raw\": \"Brut\",\n            \"textInterpolation\": \"Interpolation de texte\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"A propos\"\n    },\n    \"help\":{\n        \"header\": \"Aide\",\n        \"mouse\": {\n            \"header\":\"Actions de la souris:\",\n            \"list\":{\n                \"1\": \"Bouton gauche de la souris: sélection du noud/bord\",\n                \"2\": \"Bouton droit de la souris: menu contextuel (ajout/manipulation des nouds)\",\n                \"3\": \"Double clic gauche de la souris: menu contextuel\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Raccourcis clavier:\",\n            \"list\":{\n                \"1\": \"Del: effacer les nouds sélectionnés\",\n                \"2\": \"Ctrl-C/X: copier/couper les nouds sélectionnés\",\n                \"3\": \"Ctrl-V: coller les nouds copiés comme un sous-arbre d'un noud sélectionné\",\n                \"4\": \"Ctrl-Y/Z: annuler/refaire\",\n                \"5\": \"Ctrl-Alt-D/C/T: ajouter un nouveau sous-noud de décision/aléatoire/terminal d'un <strong>noud sélectionné</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: injecter un nouveau noeud de décision/aléatoire dans un <strong>bord sélectionné</strong>\"\n            }\n        },\n        \"docs\": \"La documentation de SilverDecisions est disponible  <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">ici</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Définitions des variables\",\n        \"scope\": {\n            \"global\": \"portée mondiale\",\n            \"node\": \"la portée des nœud et sous-arborescence sélectionné\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Portée de la variable:\",\n            \"global\": \"mondial\",\n            \"node\": \"nœud et sous-arborescence sélectionné\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Ouvrir la boîte de dialogue\",\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Critères multiples\",\n        \"defaultMaximizedCriterionName\": \"Effet\",\n        \"defaultMinimizedCriterionName\": \"Coût\",\n        \"nameOfCriterion1\": \"Le nome de critère 1\",\n        \"nameOfCriterion2\": \"Le nome de critère 2\",\n        \"defaultCriterion1Weight\": \"Par défaut poid du 1er critère\",\n        \"weightLowerBound\": \"Poid de la limite inférieure\",\n        \"weightUpperBound\": \"Poid de la limite supérieure\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Montrer classement\",\n            \"flip\": \"Basculer\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposition\",\n        \"marginHorizontal\": \"Marge horizontale\",\n        \"marginVertical\": \"Marge verticale\",\n        \"nodeSize\": \"Taille du noeud\",\n        \"edgeSlantWidthMax\": \"Inclinaison du bord (max.)\",\n        \"gridWidth\": \"Largeur\",\n        \"gridHeight\": \"Taille\",\n        \"scale\": \"Échelle\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Détails\",\n        \"title\" : \"Titre\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Noeud de décision\",\n                \"chance\":\"Noud aléatoire\",\n                \"terminal\":\"Noeud terminal\"\n            },\n            \"edge\": \"Bord\",\n            \"text\": \"Texte flottant\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Les connexions\",\n                \"child\": {\n                    \"header\": \"Bord #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Voulez-vous vraiment effacer le diagramme actuel? Toutes les données non enregistrées seront perdues.\",\n        \"openDiagram\": \"Etes-vous sur? Toutes les données de diagramme non enregistrées seront perdues.\",\n        \"beforeunload\": \"Voulez-vous vraiment fermer SilverDecisions? Toutes les données de diagramme non enregistrées seront perdues.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Erreur lors de l'analyse du fichier!\",\n        \"fileApiNotSupported\":\"L'API du fichier n'est pas encore prise en charge sur ce navigateur.\",\n        \"inputFilesProperty\":\"Votre navigateur ne semble pas prendre en charge la propriété `fichiers`.\",\n        \"notSilverDecisionsFile\":\"Pas de fichiers SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Format incorrect de la chaîne de version!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La version dans le fichier est plus récente que la version de l'application. Certaines fonctionnalités peuvent être manquantes.\",\n        \"objectiveComputationFailure\": \"Erreur en calculant l'objectif!\",\n        \"diagramDrawingFailure\": \"Erreur lors du dessin diagramme!\",\n        \"malformedData\":\"Erreur lors de la lecture des données arborescentes!\",\n        \"pngExportNotSupported\": \"L'exportation vers PNG n'est pas prise en charge dans votre navigateur.\",\n        \"pngExportNotSupportedIE\": \"Exporter vers PNG n'est pas pris en charge dans Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'exportation vers SVG n'est pas prise en charge par votre navigateur.\",\n        \"pdfExportNotSupported\": \"L'exportation au format PDF n'est pas prise en charge par votre navigateur.\",\n        \"incorrectPayoffNumberFormatOptions\": \"L'option de format de numérotation des avantages chiosie est incorrecte.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"L'option de format de numérotation des probabilités chiosie est incorrecte.\",\n        \"incorrectNumberFormatOptions\": \"L'option de format de numérotation choisie est incorrecte.\",\n        \"jsPDFisNotIncluded\": \"JsPDF n'est pas inclus!\",\n        \"serverSideExportRequestFailure\": \"La demande de téléchargement au serveur a échoué!\"\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\nimport * as pt_br from './pt-br.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: {\n                en: {\n                    translation: en\n                },\n                pl: {\n                    translation: pl\n                },\n                it: {\n                    translation: it\n                },\n                de: {\n                    translation: de\n                },\n                fr: {\n                    translation: fr\n                },\n                'pt-BR': {\n                    translation: pt_br\n                }\n            }\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nuovo diagramma\",\n        \"openDiagram\": \"Apri diagramma esistnte\",\n        \"saveDiagram\": \"Salva il diagramma corente\",\n        \"export\":{\n            \"label\": \"Esporta in\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposizione\",\n            \"manual\": \"Manuale\",\n            \"tree\": \"Albero\",\n            \"cluster\": \"Grappolo\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vista\",\n            \"options\": {\n                \"criterion1\":\"Criterio 1\",\n                \"criterion2\":\"Criterio 2\",\n                \"twoCriteria\":\"Due criteri\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regola\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"max-min\",\n                \"maxi-max\":\"max-max\",\n                \"mini-min\":\"min-min\",\n                \"mini-max\":\"min-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Ripristina\",\n        \"redo\": \"Ripeti\",\n        \"settings\": \"Settaggi\",\n        \"about\": \"Di\",\n        \"sensitivityAnalysis\": \"Analisi di sensibilità\",\n        \"recompute\": \"Ricalcola\"\n    },\n    \"node\":{\n        \"name\": \"Etichetta\"\n    },\n    \"edge\":{\n        \"name\": \"Etichetta\",\n        \"payoff\": \"Saldo\",\n        \"probability\": \"Probabilità\"\n    },\n    \"text\":{\n        \"value\": \"Testo\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classifica\",\n        \"buttons\": {\n            \"downloadCsv\": \"Scarica CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regola #\",\n            \"policy\": \"Regola\",\n            \"comment\": \"Commento\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominata (da #{{policy}})\",\n            \"extendedDominatedBy\": \"estesa-dominata (da #{{policy1}} e #{{policy2}})\",\n            \"incratio\": \"rapporto incrementale={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Evidenziato\",\n                \"highlighted-default\": \"Raccomandato (per default WTP)\",\n                \"extended-dominated\" : \"Estesa-dominata\",\n                \"dominated\": \"Dominata\",\n                \"default\": \"Altro\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direzione di {{name}} ottimizzazione\",\n                \"gradientArrow2\": \"Direzione di {{name}} ottimizzazione\",\n                \"dominatedRegion\": \"Regione dominata\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"L'area grigia evidenzia la regione dominata\",\n                \"gradientArrows\": \"Le frecce indicano la direzione di miglioramento\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analisi di sensibilità\",\n        \"buttons\": {\n            \"runJob\": \"Esegui\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Esci\",\n            \"resumeJob\": \"Riprendi\",\n            \"downloadCsv\": \"Scaricare CSV\",\n            \"back\": \"Indietro\",\n            \"clear\": \"Cancella\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Cancella\",\n            \"addParameterValue\": \"Aggiungi\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} politiche\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Massimo\",\n                \"minimum\": \"Minimo\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mappa di calore\"\n            }\n        },\n        \"policyPreview\": \"Anteprima della politica\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità multivariata\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagramma a tornado\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decresce\",\n                    \"high\": \"Cresce\"\n                },\n                \"xAxisTitle\": \"Saldo\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità probabilistica\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"numberOfRuns\": {\n                    \"label\": \"Numero di operazioni\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Seleziona modello di formula dal menu o scrivi un codice personalizzato.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\",\n                \"param-computation\": \"Errore di calcolo dei valori dei parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n                \"spider-plot\": {\n            \"name\": \"Diagramma di Kiviat\",\n            \"param\": {\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- variazione percentuale da considerare\"\n                },\n                \"length\": {\n                    \"label\": \"Numero di valpri da testare\",\n                    \"help\": \"Numero di valpri da testare (in una parte della gamma)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Variazione percentuale\",\n                \"yAxisTitle\": \"Saldo\"\n            }\n        },\n        \"payoffs-transformation\": {\n            \"name\": \"Trasformazione dei profitti\",\n            \"param\": {\n                \"functionName\": {\n                    \"label\": \"Nome della funzione\"\n                },\n                \"functionBody\": {\n                    \"label\": \"Corpo funzione\"\n                },\n                \"functionArgumentName\": {\n                    \"label\": \"Nome dell'argomento della funzione\"\n                },\n                \"makeClone\": {\n                    \"label\": \"Clonare\"\n                }\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classifica\"\n        },\n        \"errors\":{\n            \"generic\": \"Errore nei calcoli di analisi di sensibilità: {{message}}\",\n            \"params\": \"{{jobName}} parameteri errati\"\n        }\n    },\n\n    \"settingsDialog\":{\n        \"title\": \"Settaggi\",\n        \"general\":{\n            \"title\": \"Generale\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontFamily\": \"Famiglia font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"numberFormatLocale\": \"Formato numero locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Formato saldo 1\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"payoff2\":{\n            \"title\": \"Formato saldo 2\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"probability\":{\n            \"title\": \"Formato probabilità\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"fontSize\": \"Dimensione font\",\n            \"color\": \"Colore\"\n        },\n        \"node\":{\n            \"title\": \"Nodo\",\n            \"strokeWidth\": \"Spessore linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Spessore linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font etichetta\",\n                \"color\": \"Colore etichetta\"\n            },\n            \"payoff\": {\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            },\n            \"decision\": {\n                \"title\": \"Nodo dicisione\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Nodo opportunità\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Nodo terminale\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                },\n                \"payoff\": {\n                    \"title\": \"Saldo\",\n                    \"fontSize\": \"Dimensione font\",\n                    \"color\": \"Colore\",\n                    \"negativeColor\": \"Colore negativo\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Ramo\",\n            \"stroke\": \"Colore\",\n            \"strokeWidth\": \"Larghezza linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"selected\":{\n                \"title\": \"Selezionato\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\"\n            },\n            \"payoff\":{\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titolo diagramma\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"color\": \"Colore\",\n            \"margin\":{\n                \"title\": \"Margine\",\n                \"top\": \"Superiore\",\n                \"bottom\": \"Inferiore\"\n            },\n            \"description\":{\n                \"title\": \"Sotto-titolo (descrizione diagramma)\",\n                \"show\": \"Mostra\",\n                \"fontSize\": \"Dimensione font\",\n                \"fontWeight\": \"Peso del font\",\n                \"fontStyle\": \"Stile font\",\n                \"color\": \"Colore\",\n                \"marginTop\": \"Margine superiore\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classifica\",\n            \"plot\": {\n                \"title\": \"Grafico\",\n                \"maxWidth\": \"Larghezza massima\",\n                \"highlightedColor\": \"Colore evidenziato della regola\",\n                \"highlightedDefaultColor\": \"Colore polizza raccomandata (per default WTP)\",\n                \"extendedDominatedColor\": \"Colori della regola dominata estesa\",\n                \"dominatedColor\": \"Colore della denominata regola\",\n                \"defaultColor\": \"Altri criteri colore\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Altro\",\n            \"disableAnimations\": \"Disabilita animazione\",\n            \"forceFullEdgeRedraw\": \"Forza ridisegno dei rami\",\n            \"hideLabels\": \"Nascondi le etichette\",\n            \"hidePayoffs\": \"Nascondi saldo\",\n            \"hideProbabilities\": \"Nascondi le probabilità\",\n            \"raw\": \"Non elaborato\",\n            \"textInterpolation\": \"Interpolazione del testo\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informazioni\"\n    },\n    \"help\":{\n        \"header\": \"Aiuto\",\n        \"mouse\": {\n            \"header\":\"Azioni mouse:\",\n            \"list\":{\n                \"1\": \"Bottone sinistro: selezione nodo/ramo\",\n                \"2\": \"Bottone destro: menu di contesto (aggiunta/manipolazione nodi)\",\n                \"3\": \"Doppio click bottone sinistro: menu di contesto\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Scorciatoie tastiera:\",\n            \"list\":{\n                \"1\": \"Del: cancella nodi selezionati\",\n                \"2\": \"Ctrl-C/X: copia/taglia nodi selezionati\",\n                \"3\": \"Ctrl-V: incolla nodi copiati come sotto-albero di un nodo selezionato\",\n                \"4\": \"Ctrl-Y/Z: ripristina/ripeti\",\n                \"5\": \"Ctrl-Alt-D/C/T: aggiungi nuovo sottonodo Decisione/Opportunità/Terminale di un <strong>nodo selezionato</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inietta un nuovo nodo Decisione/Opportunità in un <strong>ramo selezionato</strong>\"\n            }\n        },\n        \"docs\": \"La documentazione di SilverDecisions e disponibile <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">qui</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definizioni delle variabili\",\n        \"scope\": {\n            \"global\": \"raggio globale\",\n            \"node\": \"raggio di nodo e sotto-albero selezionati\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Raggio variabile:\",\n            \"global\": \"globale\",\n            \"node\": \"nodo e sotto-albero selezionati\"\n        },\n        \"header\": \"Variabili\",\n        \"code\": \"Codice\",\n        \"buttons\":{\n            \"openDialog\" : \"Apri il dialogo\",\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Criteri multipli\",\n        \"defaultMaximizedCriterionName\": \"Effetto\",\n        \"defaultMinimizedCriterionName\": \"Costo\",\n        \"nameOfCriterion1\": \"Nome del criterio 1\",\n        \"nameOfCriterion2\": \"Nome del criterio 2\",\n        \"defaultCriterion1Weight\": \"Predefinito 1° peso criterio\",\n        \"weightLowerBound\": \"Peso inferiore limitato\",\n        \"weightUpperBound\": \"Peso superiore del limite\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Mostra la classifica\",\n            \"flip\": \"Ribalta\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposizione\",\n        \"marginHorizontal\": \"Margine orizzontale\",\n        \"marginVertical\": \"Margine verticale\",\n        \"nodeSize\": \"Dimensione nodo\",\n        \"edgeSlantWidthMax\": \"Inclinazione nodo\",\n        \"gridWidth\": \"Larghezza\",\n        \"gridHeight\": \"Altezza\",\n        \"scale\": \"Scala\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Dettagli\",\n        \"title\" : \"Titolo\",\n        \"description\" : \"Descrizione\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Nodo decisione\",\n                \"chance\":\"Nodo opportunità\",\n                \"terminal\":\"Nodo terminale\"\n            },\n            \"edge\": \"Ramo\",\n            \"text\": \"Testo mobile\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connessioni\",\n                \"child\": {\n                    \"header\": \"Ramo #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Vuoi davvero cancellare ildiagramma corrente ? Tutti i dati non salvati saranno persi.\",\n        \"openDiagram\": \"Sei sicuro? Tutti i dati non salvati saranno persi.\",\n        \"beforeunload\": \"Sei sicuro di voler uscire da SilverDecisions ?Tutti i dati non salvati saranno persi.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Errore analizzando il file !\",\n        \"fileApiNotSupported\":\"l'API di questo file non è ancora supportata in questo browser.  \",\n        \"inputFilesProperty\":\"Il tuo browser non sembra supportare la proprieta del file di input.\",\n        \"notSilverDecisionsFile\":\"Non è un file SilverDecisions !\",\n        \"incorrectVersionFormat\": \"Formato non corretto della serie di versione!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La versione in file è più recente rispetto alla versione dell'applicazione. Alcune funzionalità possono essere indisponibili.\",\n        \"objectiveComputationFailure\": \"Errore durante il calcolo obiettivo!\",\n        \"diagramDrawingFailure\": \"Errore durante il disegno della diagramma!\",\n        \"malformedData\":\"Errore durante la lettura dei dati dell'albero !\",\n        \"pngExportNotSupported\": \"L'esport in formato PNG non è supportata nel tuo browser.\",\n        \"pngExportNotSupportedIE\": \"L'esport in formato PNG non è supportata in Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'esport in formato SVG non è supportata nel tuo browser.\",\n        \"pdfExportNotSupported\": \"L'esport in formato PDF non è supportata nel tuo browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Opzioni per il formato dei saldi non corrette.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Opzioni per il formato delle probabilità non corrette.\",\n        \"incorrectNumberFormatOptions\": \"Opzioni per il formato dei numeri non corrette, utilizzo del default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF non incluso !\",\n        \"serverSideExportRequestFailure\": \"Richiesta di export fallita lato server !\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nowy diagram\",\n        \"openDiagram\": \"Otwórz diagram\",\n        \"saveDiagram\": \"Zapisz diagram\",\n        \"export\":{\n            \"label\": \"Eksport\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Układ\",\n            \"manual\": \"Ręczny\",\n            \"tree\": \"Drzewo\",\n            \"cluster\": \"Zgrupowany\"\n        },\n        \"viewMode\": {\n            \"label\": \"Widok\",\n            \"options\": {\n                \"criterion1\":\"Kryterium 1\",\n                \"criterion2\":\"Kryterium 2\",\n                \"twoCriteria\":\"Dwa kryteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Reguła\",\n            \"options\": {\n                \"expected-value-maximization\":\"maksimum\",\n                \"expected-value-minimization\":\"minimum\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Cofnij\",\n        \"redo\": \"Ponów\",\n        \"settings\": \"Ustawienia\",\n        \"about\": \"Informacje\",\n        \"sensitivityAnalysis\": \"Analiza wrażliwości\",\n        \"recompute\": \"Przelicz\"\n    },\n    \"node\":{\n        \"name\": \"Etykieta\"\n    },\n    \"edge\":{\n        \"name\": \"Etykieta\",\n        \"payoff\": \"Wypłata\",\n        \"probability\": \"Prawdopodobieństwo\"\n    },\n    \"text\":{\n        \"value\": \"Tekst\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Tabela ligowa\",\n        \"buttons\": {\n            \"downloadCsv\": \"Pobierz CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Nr polityki\",\n            \"policy\": \"Polityka\",\n            \"comment\": \"Komentarz\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"zdominowana (przez #{{policy}})\",\n            \"extendedDominatedBy\": \"zdominowana rozszerzenie (przez #{{policy1}} i #{{policy2}})\",\n            \"incratio\": \"inkrementalny iloraz={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Rekomendowany (dla pewnej wartości WTP w zakresie)\",\n                \"highlighted-default\": \"Rekomendowany (dla domyślnej wartości WTP)\",\n                \"extended-dominated\" : \"Zdominowana rozszerzenie\",\n                \"dominated\": \"Zdominowana\",\n                \"default\": \"Inne\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Kierunek optymalizacji {{name}}\",\n                \"gradientArrow2\": \"Kierunek optymalizacji {{name}}\",\n                \"dominatedRegion\": \"Obszar zdominowany\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Szary region oznacza obszar zdominowany\",\n                \"gradientArrows\": \"Strzałki wskazują kierunek poprawy\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analiza wrażliwości\",\n        \"buttons\": {\n            \"runJob\": \"Uruchom\",\n            \"stopJob\": \"Zatrzymaj\",\n            \"terminateJob\": \"Zakończ\",\n            \"resumeJob\": \"Wznów\",\n            \"downloadCsv\": \"Pobierz CSV\",\n            \"back\": \"Wstecz\",\n            \"clear\": \"Wyczyść\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Usuń\",\n            \"addParameterValue\": \"Dodaj\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} polityk\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maksimum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mapa cieplna\"\n            }\n        },\n        \"policyPreview\": \"podgląd polityki\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analiza wrażliwości N-czynnikowa\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maksimum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagram tornado\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maximum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Zmniejszenie\",\n                    \"high\": \"Zwiększenie\"\n                },\n                \"xAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistyczna analiza wrażliwości\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"numberOfRuns\": {\n                    \"label\": \"Liczba powtórzeń\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis reguły\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formuła\",\n                        \"help\": \"Wybierz wzór formuły z menu lub wpisz własny kod\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\",\n                \"param-computation\": \"Błąd w wyliczaniu wartości parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"payoffs-transformation\": {\n            \"name\": \"Transformacja wypłat\",\n            \"param\": {\n                \"functionName\": {\n                    \"label\": \"Nazwa funkcji\"\n                },\n                \"functionBody\": {\n                    \"label\": \"Ciało funkcji\"\n                },\n                \"functionArgumentName\": {\n                    \"label\": \"Nazwa argumentu funkcji\"\n                },\n                \"makeClone\": {\n                    \"label\": \"Utwórz klon\"\n                }\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Tabela ligowa\"\n        },\n        \"spider-plot\": {\n            \"name\": \"Wykres pajęczynowy\",\n            \"param\": {\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- zmiana procentowa do analizy\"\n                },\n                \"length\": {\n                    \"label\": \"Liczba wartości do przetestowa\",\n                    \"help\": \"Liczba wartości do przetestowa (po jednej stronie zakresu)\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Zmiana procentowa\",\n                \"yAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"errors\":{\n            \"generic\": \"Błąd w obliczeniach analizy wrażliwości: {{message}}\",\n            \"params\": \"Błędne parametry w {{jobName}}\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Ustawienia\",\n        \"general\":{\n            \"title\": \"Ogólne\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontFamily\": \"Rodzina czcionek\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"numberFormatLocale\": \"Kod lokalizacji językowej liczb\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format wypłaty 1\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format wypłaty 2\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"probability\":{\n            \"title\": \"Format prawdopodobieństwa\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"color\": \"Kolor\"\n        },\n        \"node\":{\n            \"title\": \"Węzeł\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalny\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki etykiety\",\n                \"color\": \"Kolor etykiety\"\n            },\n            \"payoff\": {\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            },\n            \"decision\": {\n                \"title\": \"Węzeł Decyzyjny\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Węzeł Losowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Węzeł Końcowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                },\n                \"payoff\": {\n                    \"title\": \"Wypłata\",\n                    \"fontSize\": \"Rozmiar czcionki\",\n                    \"color\": \"Kolor\",\n                    \"negativeColor\": \"Kolor wartości ujemnej\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Krawędź\",\n            \"stroke\": \"Kolor\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalna\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"selected\":{\n                \"title\": \"Zaznaczona\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\"\n            },\n            \"payoff\":{\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Tytuł diagramu\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"color\": \"Kolor\",\n            \"margin\":{\n                \"title\": \"Margines\",\n                \"top\": \"Górny\",\n                \"bottom\": \"Dolny\"\n            },\n            \"description\":{\n                \"title\": \"Podtytuł (opis diagramu)\",\n                \"show\": \"Wyświetl\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"fontWeight\": \"Waga czcionki\",\n                \"fontStyle\": \"Styl czcionki\",\n                \"color\": \"Kolor\",\n                \"marginTop\": \"Margines górny\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Tabela ligowa\",\n            \"plot\": {\n                \"title\": \"Wykres\",\n                \"maxWidth\": \"Maksymalna szerokość\",\n                \"highlightedColor\": \"Kolor polityki rekomendowanej (dla pewnego WTP w zakresie)\",\n                \"highlightedDefaultColor\": \"Kolor polityki rekomendowanej (dla domyślnego WTP)\",\n                \"extendedDominatedColor\": \"Kolog polityki zdominowanej rozszerzenie\",\n                \"dominatedColor\": \"Kolor polityki zdominowanej\",\n                \"defaultColor\": \"Kolor innych polityk\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Inne\",\n            \"disableAnimations\": \"Wyłącz animacje\",\n            \"forceFullEdgeRedraw\": \"Wymuś pełne przerysowywanie krawędzi\",\n            \"hideLabels\": \"Ukryj etykiety\",\n            \"hidePayoffs\": \"Ukryj wypłaty\",\n            \"hideProbabilities\": \"Ukryj prawdopodobieństwa\",\n            \"raw\": \"Surowy\",\n            \"textInterpolation\": \"Interpolacja tekstu\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informacje\"\n    },\n    \"help\":{\n        \"header\": \"Pomoc\",\n        \"mouse\": {\n            \"header\":\"Akcje myszy:\",\n            \"list\":{\n                \"1\": \"lewy klawisz myszy: wybór węzła/krawędzi\",\n                \"2\": \"prawy klawisz myszy: menu kontekstowe (dodawanie/manipulowanie węzłami)\",\n                \"3\": \"podwójne kliknięcie lewym przyciskiem myszy: menu kontekstowe\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Skróty klawiszowe:\",\n            \"list\":{\n                \"1\": \"Del: usuwanie wybranych węzłów\",\n                \"2\": \"Ctrl-C/X: kopiowanie/wycinanie wybranych węzłów\",\n                \"3\": \"Ctrl-V: wklej skopiowane węzły jako poddrzewo wybranego węzła\",\n                \"4\": \"Ctrl-Y/Z: cofnij/ponów\",\n                \"5\": \"Ctrl-Alt-D/C/T: dodaj nowy węzeł Decyzyjny/Losowy/Końcowy jako dziecko <strong>wybranego węzła</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Wstrzyknij nowy węzeł Decyzyjny/Losowy do <strong>wybranej krawędzi</strong>\"\n            }\n        },\n        \"docs\": \"Dokumentacja SilverDecisions jest dostępna <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">tutaj</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definicje zmiennych\",\n        \"scope\": {\n            \"global\": \"zasięg globalny\",\n            \"node\": \"zasięg wybranego węzła i poddrzewa\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Zasięg zmiennej:\",\n            \"global\": \"globalny\",\n            \"node\": \"wybrany węzeł i poddrzewo\"\n        },\n        \"header\": \"Zmienne\",\n        \"code\": \"Kod\",\n        \"buttons\":{\n            \"openDialog\" : \"Otwórz okno dialogowe\",\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Wiele kryteriów\",\n        \"defaultMaximizedCriterionName\": \"Efekt\",\n        \"defaultMinimizedCriterionName\": \"Koszt\",\n        \"nameOfCriterion1\": \"Nazwa kryterium 1\",\n        \"nameOfCriterion2\": \"Nazwa kryterium 2\",\n        \"defaultCriterion1Weight\": \"Domyślna waga kryerium 1\",\n        \"weightLowerBound\": \"Dolna granica wagi\",\n        \"weightUpperBound\": \"Górna granica wagi\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Pokaż tabelę ligową\",\n            \"flip\": \"Zamień\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Układ\",\n        \"marginHorizontal\": \"Margines w poziomie\",\n        \"marginVertical\": \"Margines w pionie\",\n        \"nodeSize\": \"Rozmiar węzła\",\n        \"edgeSlantWidthMax\": \"Skos krawędzi (maksymalny)\",\n        \"gridWidth\": \"Szerokość\",\n        \"gridHeight\": \"Wysokość\",\n        \"scale\": \"Skala\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Szczegóły\",\n        \"title\" : \"Tytuł\",\n        \"description\" : \"Opis\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Węzeł Decyzyjny\",\n                \"chance\":\"Węzeł Losowy\",\n                \"terminal\":\"Węzeł Końcowy\"\n            },\n            \"edge\": \"Krawędź\",\n            \"text\": \"Pływający tekst\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Połączenia\",\n                \"child\": {\n                    \"header\": \"Krawędź #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Czy jesteś pewien, że chcesz porzucić obecny diagram? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"openDiagram\": \"Czy jesteś pewien? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"beforeunload\": \"Czy jesteś pewien, że chcesz zamknąć SilverDecisions? Wszystkie niezapisane zmiany zostaną utracone.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Błąd przetwarzania danych z pliku!\",\n        \"fileApiNotSupported\":\"Funckja 'file API' nie jest wspierana w tej przeglądarce internetowej.\",\n        \"inputFilesProperty\":\"Twoje przeglądarka nie wspiera opcji `pliki` przy otwieraniu pliku.\",\n        \"notSilverDecisionsFile\":\"Plik niezgodny z formatem SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Niepoprawny format ciągu z numerem wersji!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Wersja pliku jest nowasza niż wersja aplikacji. Niektóre funkcjonalności mogą być niedostępne.\",\n        \"objectiveComputationFailure\": \"Błąd podczas wyliczania celu!\",\n        \"diagramDrawingFailure\": \"Błąd podczas rysowania diagramu!\",\n        \"malformedData\":\"Błąd odczytu danych drzewa!\",\n        \"pngExportNotSupported\": \"Eksport do obrazu PNG nie jest wspierany w Twojej przeglądarce.\",\n        \"pngExportNotSupportedIE\": \"Eksport do obrazu PNG nie jest wspierany w przeglądarce Internet Explorer.\",\n        \"svgExportNotSupported\": \"Eksport do obrazu SVG nie jest wspierany w Twojej przeglądarce.\",\n        \"pdfExportNotSupported\": \"Eksport do PDF nie jest wspierany w Twojej przeglądarce.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu wypłaty.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu prawdopodobieństw.\",\n        \"incorrectNumberFormatOptions\": \"Niewłaściwe ustawiono formatowanie liczb. Przyjęto ustawienia domyślne.\",\n        \"jsPDFisNotIncluded\": \"Nie włączono jsPDF!\",\n        \"serverSideExportRequestFailure\": \"Nieudane zapytanie do serwera exportu!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Novo diagrama\",\n        \"openDiagram\": \"Abrir um diagrama existente\",\n        \"saveDiagram\": \"Salvar o diagrama atual\",\n        \"export\":{\n            \"label\": \"Exportar para\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Tree\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"Visualização\",\n            \"options\": {\n                \"criterion1\":\"Critério 1\",\n                \"criterion2\":\"Critério 2\",\n                \"twoCriteria\":\"Dois Critérios\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regra\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Desfazer\",\n        \"redo\": \"Refazer\",\n        \"settings\": \"Configurações\",\n        \"about\": \"Sobre\",\n        \"sensitivityAnalysis\": \"Análise de Sensibilidade\",\n        \"recompute\": \"Recomputar\"\n    },\n    \"node\":{\n        \"name\": \"Rótulo\"\n    },\n    \"edge\":{\n        \"name\": \"Rótulo\",\n        \"payoff\": \"Peso\",\n        \"probability\": \"Probabilidade\"\n    },\n    \"text\":{\n        \"value\": \"Texto\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Ranking\",\n        \"buttons\": {\n            \"downloadCsv\": \"Download CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regra #\",\n            \"policy\": \"Regra\",\n            \"comment\": \"Comentário\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominado (por #{{policy}})\",\n            \"extendedDominatedBy\": \"Dominado por estiramento (através #{{policy1}} e #{{policy2}})\",\n            \"incratio\": \"razão incremental={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Recomendado (por algum WTP no intervalo)\",\n                \"highlighted-default\": \"Recomendado (por padrão WTP)\",\n                \"extended-dominated\" : \"Dominado por extensão\",\n                \"dominated\": \"Dominado\",\n                \"default\": \"Outro\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direção de {{name}} otimização\",\n                \"gradientArrow2\": \"Direção de {{name}} otimização\",\n                \"dominatedRegion\": \"Região não recomendada\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Area cinza em realce não é uma região recomendada\",\n                \"gradientArrows\": \"Setas indicam melhorias na direção\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Análise sensitiva\",\n        \"buttons\": {\n            \"runJob\": \"Executar\",\n            \"stopJob\": \"Parar\",\n            \"terminateJob\": \"Terminar\",\n            \"resumeJob\": \"Retormar\",\n            \"downloadCsv\": \"Download CSV\",\n            \"back\": \"Voltar\",\n            \"clear\": \"Limpar\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Remover\",\n            \"addParameterValue\": \"Adicionar\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} Regras\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Máximo\",\n                \"minimum\": \"Mínimo\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mapa de Calor\"\n            }\n        },\n        \"policyPreview\": \"Visão geral da regra\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Análise sensitiva multivalorada\",\n            \"param\":{\n                \"ruleName\": \"Nome da Regra\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrição da regra extendida\"\n                },\n                \"variables\": {\n                    \"label\": \"Variáveis\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Tamanho\"\n                    },\n                    \"step\": {\n                        \"label\": \"Etapa\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erro nos cálculos de análise de sensibilidade para os seguintes parâmetros:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Número dos cenários definidos maiores que {{numberFormatted}}. A análise de sensibilidade pode falhar no cálculo ou ser muito lenta.\",\n                \"largeParametersNumber\": \"Número dos parâmetros maiores que {{number}}. A exibição da análise de sensibilidade pode falhar ou ficar muito lenta.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagrama de Tornado\",\n            \"param\":{\n                \"ruleName\": \"Nome da Regra\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrição detalhada da regra\"\n                },\n                \"variables\": {\n                    \"label\": \"Variáveis\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Tamanho\"\n                    },\n                    \"step\": {\n                        \"label\": \"Etapa\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valor padrão\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erro nos cálculos de análise de sensibilidade para os seguintes parâmetros:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Número dos cenários definidos maiores que {{numberFormatted}}. A análise de sensibilidade pode falhar no cálculo ou ser muito lenta.\",\n                \"largeParametersNumber\": \"Número dos parâmetros maiores que {{number}}. A exibição da análise de sensibilidade pode falhar ou ficar muito lenta.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Diminuir\",\n                    \"high\": \"Aumentar\"\n                },\n                \"xAxisTitle\": \"Peso\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Análise de sensibilidade probabilística\",\n            \"param\":{\n                \"ruleName\": \"Nome da regra\",\n                \"numberOfRuns\": {\n                    \"label\": \"Número de tentatívas\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrição detalhada da regra\"\n                },\n                \"variables\": {\n                    \"label\": \"Variáveis\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Fórmula\",\n                        \"help\": \"Selecione o template da fórmula do menu ou escreva um código personalizado.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erro nos cálculos de análise de sensibilidade para os seguintes parâmetros:\",\n                \"param-computation\": \"Erro ao calcular os valores dos parâmetros:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Número de cenários definidos maiores que {{numberFormatted}}. A análise de sensibilidade pode falhar no cálculo ou ser muito lenta.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Gráfico de Radar\",\n            \"param\": {\n                \"ruleName\": \"Nome da Regra\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrição estendida da regra\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- mudança percentual a considerar\"\n                },\n                \"length\": {\n                    \"label\": \"Número de valores para testar\",\n                    \"help\": \"Número de valores para testar (em um lado do intervalo)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variáveis\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valor Padrão\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Erro nos cálculos de análise de sensibilidade para os seguintes parâmetros:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Número dos cenários definidos maiores que {{numberFormatted}}. A análise de sensibilidade pode falhar no cálculo ou ser muito lenta.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Alteração percentual\",\n                \"yAxisTitle\": \"Peso\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Ranking\"\n        },\n        \"errors\":{\n            \"generic\": \"Erro no {{jobName}} cálculo : {{message}}\",\n            \"params\": \"Parâmetros {{jobName}}incorretos\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Configurações\",\n        \"general\":{\n            \"title\": \"Geral\",\n            \"fontSize\": \"Tamanho da Fonte\",\n            \"fontFamily\": \"Família da Fonte\",\n            \"fontWeight\": \"Espessura da Fonte\",\n            \"fontStyle\": \"Estilo da Fonte\",\n            \"numberFormatLocale\": \"Formato de Número (Regional)\"\n        },\n        \"payoff1\":{\n            \"title\": \"Peso 1 formato do número\",\n            \"currency\": \"Moeda\",\n            \"currencyDisplay\": \"Exibição de Moeda\",\n            \"style\": \"Estilo\",\n            \"minimumFractionDigits\": \"Número mínimo de frações\",\n            \"maximumFractionDigits\": \"Número máximo de frações\",\n            \"useGrouping\": \"Use separadores de agrupamento\"\n        },\n        \"payoff2\":{\n            \"title\": \"Peso 2 formato do número\",\n            \"currency\": \"Moeda\",\n            \"currencyDisplay\": \"Exibição de Moeda\",\n            \"style\": \"Estilo\",\n            \"minimumFractionDigits\": \"Número mínimo de frações\",\n            \"maximumFractionDigits\": \"Número máximo de frações\",\n            \"useGrouping\": \"Use separadores de agrupamento\"\n        },\n        \"probability\":{\n            \"title\": \"Formato do número da probabilidade\",\n            \"style\": \"Estilo\",\n            \"minimumFractionDigits\": \"Número mínimo de frações\",\n            \"maximumFractionDigits\": \"Número máximo de frações\",\n            \"fontSize\": \"Tamanho da Fonte\",\n            \"color\": \"Cor\"\n        },\n        \"node\":{\n            \"title\": \"Nó\",\n            \"strokeWidth\": \"Espessura da linha\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Cor\",\n                \"strokeWidth\": \"Espessura da linha\"\n            },\n            \"label\": {\n                \"title\": \"Rótulo\",\n                \"fontSize\": \"Tamanho da fonte do rótulo \",\n                \"color\": \"Cor do rótulo\"\n            },\n            \"payoff\": {\n                \"title\": \"Peso\",\n                \"fontSize\": \"Tamanho da Fonte\",\n                \"color\": \"Cor\",\n                \"negativeColor\": \"Cor negativa\"\n            },\n            \"decision\": {\n                \"title\": \"Nó de decisão\",\n                \"fill\": \"Cor de preenchimento\",\n                \"stroke\": \"Cor da linha\",\n                \"selected\": {\n                    \"fill\": \"Cor de preenchimento selecionada\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Nó aleatório\",\n                \"fill\": \"Cor de preenchimento\",\n                \"stroke\": \"Cor da linha\",\n                \"selected\": {\n                    \"fill\": \"Cor de preenchimento selecionada\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Nó terminal\",\n                \"fill\": \"Cor de preenchimento\",\n                \"stroke\": \"Cor da linha\",\n                \"selected\": {\n                    \"fill\": \"Cor de preenchimento selecionada\"\n                },\n                \"payoff\": {\n                    \"title\": \"Peso\",\n                    \"fontSize\": \"Tamanho da Fonte\",\n                    \"color\": \"Cor\",\n                    \"negativeColor\": \"Cor negativa\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Borda\",\n            \"stroke\": \"Cor\",\n            \"strokeWidth\": \"Espessura da linha\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Cor\",\n                \"strokeWidth\": \"Espessura da linha\"\n            },\n            \"selected\":{\n                \"title\": \"Selecionado\",\n                \"stroke\": \"Cor\",\n                \"strokeWidth\": \"Espessura da linha\"\n            },\n            \"label\": {\n                \"title\": \"Rótulo\",\n                \"fontSize\": \"Tamanho da fonte\",\n                \"color\": \"Cor\"\n            },\n            \"payoff\":{\n                \"title\": \"Peso\",\n                \"fontSize\": \"Tamanho da fonte\",\n                \"color\": \"Cor\",\n                \"negativeColor\": \"Cor negativa\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Título do Diagrama\",\n            \"fontSize\": \"Tamanho da Fonte\",\n            \"fontWeight\": \"Espessura da fonte\",\n            \"fontStyle\": \"Estilo da fonte\",\n            \"color\": \"Cor\",\n            \"margin\":{\n                \"title\": \"Margem\",\n                \"top\": \"Top\",\n                \"bottom\": \"Bottom\"\n            },\n            \"description\":{\n                \"title\": \"Sub-título (descrição do diagrama)\",\n                \"show\": \"Exibição\",\n                \"fontSize\": \"Tamanho da fonte\",\n                \"fontWeight\": \"Espessura da fonte\",\n                \"fontStyle\": \"Estilo da fonte\",\n                \"color\": \"Cor\",\n                \"marginTop\": \"Margin top\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classificação\",\n            \"plot\": {\n                \"title\": \"Gráfico\",\n                \"maxWidth\": \"Largura Máxima\",\n                \"highlightedColor\": \"Recomendado (para alguns WTP no intervalo) regra da cor\",\n                \"highlightedDefaultColor\": \"Recomendado (por padrão WTP) regra da cor\",\n                \"extendedDominatedColor\": \"Cor da regra do domínio estendido\",\n                \"dominatedColor\": \"Cor da regra dominada\",\n                \"defaultColor\": \"Cor de outras regras\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Outros\",\n            \"disableAnimations\": \"Desabilitar animações\",\n            \"forceFullEdgeRedraw\": \"Forçar redesenho completo das bordas\",\n            \"hideLabels\": \"Esconder rótulos\",\n            \"hidePayoffs\": \"Esconder pesos\",\n            \"hideProbabilities\": \"Esconder probabilidades\",\n            \"raw\": \"Bruto\",\n            \"textInterpolation\": \"Interpolação de texto\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Sobre\"\n    },\n    \"help\":{\n        \"header\": \"Ajuda\",\n        \"mouse\": {\n            \"header\":\"Ações do mouse:\",\n            \"list\":{\n                \"1\": \"Botão esquerdo do mouse: seleção do nó/borda\",\n                \"2\": \"Botão direito do mouse: menu de contexto  (adição/manipulação de nós)\",\n                \"3\": \"Duplo clique botão esquerdo: menu de contexto\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Atalhos de Teclado:\",\n            \"list\":{\n                \"1\": \"Del: apagar o nó selecionado\",\n                \"2\": \"Ctrl-C/X: copiar/recortar o nó selecionado\",\n                \"3\": \"Ctrl-V: colar os nós copiados como uma sub-árvore do nó selecionado\",\n                \"4\": \"Ctrl-Y/Z: desfazer/refazer\",\n                \"5\": \"Ctrl-Alt-D/C/T: adicionar uma nova Decisão/Aleatório/Terminal sub nó de um <strong>nó selecionado</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: injetar um novo nó de Decisão/Aleatório dentro da <strong>borda selecionada</strong>\"\n            }\n        },\n        \"docs\": \"A documentação do SilverDecisions esta disponível em <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">aqui</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definição das variáveis\",\n        \"scope\": {\n            \"global\": \"escopo global\",\n            \"node\": \"nó selecionado e escopo da sub-árvore\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalcular\"\n        },\n        \"evaluatedVariables\": \"Variáveis avaliadas\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Escopo das variáveis:\",\n            \"global\": \"global\",\n            \"node\": \"nó selecionado e sub-árvore\"\n        },\n        \"header\": \"Variáveis\",\n        \"code\": \"Código\",\n        \"buttons\":{\n            \"openDialog\" : \"Abrir diálogo\",\n            \"recalculate\": \"Recalcular\"\n        },\n        \"evaluatedVariables\": \"Variáveis avaliadas\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Multiplos critérios\",\n        \"defaultMaximizedCriterionName\": \"Efeito\",\n        \"defaultMinimizedCriterionName\": \"Custo\",\n        \"nameOfCriterion1\": \"Nome do critério 1\",\n        \"nameOfCriterion2\": \"Nome do critério 2\",\n        \"defaultCriterion1Weight\": \"Peso padrão do 1st critério\",\n        \"weightLowerBound\": \"Peso do limite inferior\",\n        \"weightUpperBound\": \"Peso do limite superior\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Mostrar classificação\",\n            \"flip\": \"Para alternar\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposição\",\n        \"marginHorizontal\": \"Margem Horizontal\",\n        \"marginVertical\": \"Margem Vertical\",\n        \"nodeSize\": \"Tamanho do Nó\",\n        \"edgeSlantWidthMax\": \"Inclinação (max) da borda\",\n        \"gridWidth\": \"Largura\",\n        \"gridHeight\": \"Altura\",\n        \"scale\": \"Escala\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Detalhes\",\n        \"title\" : \"Título\",\n        \"description\" : \"Descrição\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Nó de decisão\",\n                \"chance\":\"Nó aleatório\",\n                \"terminal\":\"Nó terminal\"\n            },\n            \"edge\": \"Borda\",\n            \"text\": \"Texto Flutuante\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Conexões\",\n                \"child\": {\n                    \"header\": \"Borda #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Tem certeza que deseja excluir o diagrama atual? Todos os dados não salvos serão perdidos.\",\n        \"openDiagram\": \"Você tem certeza? Todos os dados não salvos serão perdidos.\",\n        \"beforeunload\": \"Tem certeza que deseja fechar o SilverDecisions? Todos os dados não salvos serão perdidos.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Erro ao analisar o arquivo!\",\n        \"fileApiNotSupported\":\"A API do arquivo ainda não é compatível com este navegador.\",\n        \"inputFilesProperty\":\"seu navegador parece não suportar a propriedade `files`.\",\n        \"notSilverDecisionsFile\":\"Não é um arquivo SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Formato incorreto da string de versão!\",\n        \"fileVersionNewerThanApplicationVersion\": \"A versão no arquivo é mais recente que a versão do aplicativo. Alguns recursos podem estar faltando.\",\n        \"objectiveComputationFailure\": \"Erro ao calcular a meta!\",\n        \"diagramDrawingFailure\": \"Erro ao desenhar o diagrama!\",\n        \"malformedData\":\"Erro ao ler os dados da árvore!\",\n        \"pngExportNotSupported\": \"Exportar para PNG não é compatível com o seu navegador.\",\n        \"pngExportNotSupportedIE\": \"Exportar para PNG não é compatível com o Internet Explorer.\",\n        \"svgExportNotSupported\": \"Exportar para SVG não é compatível com o seu navegador.\",\n        \"pdfExportNotSupported\": \"Exportar para PDF não é compatível com o seu navegador.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Opções de formato de número de pesos incorretas\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Opções de formato de número de probabilidade incorretas\",\n        \"incorrectNumberFormatOptions\": \"Opções de formato de número incorretas, usando o padrão.\",\n        \"jsPDFisNotIncluded\": \"jsPDF não está incluído!\",\n        \"serverSideExportRequestFailure\": \"A solicitação de exportação do servidor falhou!\"\n    }\n}\n","require('es6-set/implement');\nimport {D3Extensions} from 'sd-tree-designer'\nimport {App} from './app'\nimport {version} from '../package.json';\nD3Extensions.extend();\n\nApp.version = version;\nmodule.exports = App;\n\n\n\n\n\n\n","import {Templates} from \"../templates\";\nimport {PARAMETER_TYPE} from \"sd-computations/src/jobs/engine/job-parameter-definition\";\nimport {log} from 'sd-utils'\nimport * as d3 from \"../d3\";\nimport {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {Autocomplete} from \"../autocomplete\"\n\nexport class JobParametersBuilder{\n\n\n    jobParameters;\n    hiddenParams;\n    constructor(container, i18nPrefix='', onChange=()=>{}){\n        this.container=container;\n        this.i18nPrefix = i18nPrefix;\n        this.paramTypeToInputType ={};\n        this.paramTypeToInputAttrs = {};\n\n        this.paramTypeToInputType[PARAMETER_TYPE.BOOLEAN] = 'checkbox';\n        this.paramTypeToInputType[PARAMETER_TYPE.DATE] = 'date';\n        this.paramTypeToInputType[PARAMETER_TYPE.INTEGER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.INTEGER] = [{\n            name: \"step\",\n            value: \"1\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.NUMBER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.NUMBER] = [{\n            name: \"step\",\n            value: \"any\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.STRING] = 'text';\n\n        this.onChange = onChange;\n    }\n\n\n    setJobParameters(jobName, jobParameters, customParamsConfig={}){\n        this.jobName=jobName;\n        this.jobParameters = jobParameters;\n        this.customParamsConfig = customParamsConfig;\n        this.clean();\n        this.build(this.container, this.jobParameters.definitions, this.jobParameters.values, '', this.onChange);\n    }\n\n    clean() {\n        this.container.html('');\n        this.pristine = {};\n        this.customValidators = {};\n        this.strictValidation(false);\n    }\n\n    validate(strictValidation = true){\n        this.strictValidation(strictValidation);\n        this.pristine = {};\n        this.container.selectAll('.sd-pristine').classed('sd-pristine', false);\n        return this.checkCustomValidators() && this.jobParameters.validate();\n    }\n\n    checkCustomValidators(){\n        let valid = true;\n        Utils.forOwn(this.customValidators, (val, key)=>{\n            valid = valid && val();\n        });\n        return valid;\n    }\n\n    strictValidation(enabled=true){\n        this.container.classed('sd-strict-validation', enabled);\n    }\n\n\n    build(container, jobParameterDefinitions, parentValueObject,  parentPath='', onChange=()=>{}, onInput=()=>{}){\n        container.html('');\n        var self = this;\n        var params = container.selectAll(\".sd-job-parameter\").data(jobParameterDefinitions);\n        var paramsEnter = params.enter().appendSelector('div.sd-job-parameter');\n\n        paramsEnter.html(d=>Templates.get('jobParameter', d));\n\n        var paramsMerge = paramsEnter.merge(params);\n        paramsMerge.each(function(d,i){\n            var paramSelection = d3.select(this);\n            var path = parentPath;\n\n            if(path){\n                path+='.';\n\n            }\n            path += d.name;\n            paramSelection.classed('sd-hidden', Utils.get(self.customParamsConfig, path+'.hidden'));\n\n            var value = parentValueObject[d.name];\n            var repeating = d.maxOccurs>1;\n            if(value==undefined){\n                if(repeating){\n                    value = [];\n                    for(var vi=0; vi<d.minOccurs; vi++){\n                        value.push(self.getEmptyValue(d.type))\n                    }\n\n                }else{\n                    value=Utils.get(self.customParamsConfig, path+'.value', self.getEmptyValue(d.type))\n                }\n\n                parentValueObject[d.name]=value;\n            }\n\n            if(!repeating) {\n                self.buildParameterSingleValue(paramSelection, d, {\n                    get: ()=> parentValueObject[d.name],\n                    set: (v)=> parentValueObject[d.name]=v\n                }, path,onChange, onInput)\n            }else{\n                paramSelection.appendSelector(\"div.sd-job-parameter-name\").html(self.getParamNameI18n(path));\n\n                var valuesContainer = paramSelection.appendSelector(\"div.sd-job-parameter-values\");\n                var actionButtons = paramSelection.appendSelector(\"div.sd-action-buttons\");\n                var addButton = actionButtons.appendSelector('button.sd-add-job-parameter-value-button.icon-button');\n                addButton.appendSelector(\"i.material-icons\").html('add');\n\n\n                paramSelection.classed('invalid', !d.validate(value));\n                var callbacks = {};\n                callbacks.onValueRemoved = function(v,i){\n                    value.splice(i, 1);\n                    self.buildParameterValues(valuesContainer, d, value, path,callbacks)\n                    addButton.classed('sd-hidden', value.length>=d.maxOccurs)\n                    callbacks.onChange();\n                };\n                callbacks.onChange = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onChange();\n                };\n                callbacks.onInput = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onInput();\n                };\n\n                addButton\n                    .attr('title', i18n.t('jobParametersBuilder.buttons.addParameterValue'))\n                    .classed('sd-hidden', value.length>=d.maxOccurs)\n                    .on('click', ()=>{\n                        value.push(self.getEmptyValue(d.type));\n                        Utils.set(self.pristine, path+\"[\"+(value.length-1)+\"]\", true);\n                        self.buildParameterValues(valuesContainer, d, value, path, callbacks);\n                        addButton.classed('sd-hidden', value.length>=d.maxOccurs);\n                        callbacks.onChange();\n                    });\n\n\n\n\n                self.buildParameterValues(valuesContainer, d, value, path,callbacks);\n            }\n\n        });\n\n    }\n\n    buildParameterValues(container, paramDefinition, values, path, callbacks){\n        var self = this;\n        container.html(\"\");\n\n        var paramValues = container.selectAll(\".sd-job-parameter-value\").data(values);\n\n        paramValues.exit().remove();\n        var paramValuesEnter = paramValues.enter().appendSelector('div.sd-job-parameter-value');\n\n        var paramValuesMerge = paramValuesEnter.merge(paramValues);\n\n        var indexToSelection = {};\n\n        var customValidator = Utils.get(self.customParamsConfig, path+'.customValidator');\n\n        function checkCustomValidator(){\n            let allValid = true;\n            if(customValidator){\n                customValidator(values).forEach((isValid, i)=>{\n                    var selection = indexToSelection[i];\n                    let valid = paramDefinition.validateSingleValue(values[i]) && isValid;\n                    selection.classed('invalid', !valid);\n                    allValid = allValid && valid;\n                })\n            }\n\n            return allValid;\n        }\n\n        self.customValidators[path] = checkCustomValidator;\n\n        paramValuesEnter.each(function (value, i) {\n            var derivedValueUpdaters = [];\n\n            function updateDerivedValues(){\n                derivedValueUpdaters.forEach(updater=>updater(values[i]))\n            }\n\n            var selection = d3.select(this);\n            indexToSelection[i] = selection;\n\n\n            if (PARAMETER_TYPE.COMPOSITE == paramDefinition.type) {\n                var nestedParameters = selection.selectOrAppend(\"div.sd-nested-parameters\");\n                var onChange = ()=>{\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    updateDerivedValues();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                };\n                var onInput = ()=>{\n                    updateDerivedValues();\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                };\n\n                self.build(nestedParameters, paramDefinition.nestedParameters, value, path, onChange, onInput);\n                selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                selection.classed('sd-pristine', Utils.get(self.pristine, path+\"[\"+i+\"]\", false));\n            }else{\n                self.buildParameterSingleValue(selection, paramDefinition, {\n                    get: ()=> values[i],\n                    set: (v)=> values[i]=v\n                }, path, ()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                },()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                })\n\n            }\n\n\n            var derivedValuesConfigs = Utils.get(self.customParamsConfig, path+'._derivedValues');\n            if(derivedValuesConfigs){\n                derivedValuesConfigs.forEach(derivedValueConfig =>{\n                    let updater = self.buildDerivedValue(selection, derivedValueConfig, path);\n                    updater(value);\n                    derivedValueUpdaters.push(updater);\n                });\n            }\n\n\n            var actionButtons = selection.appendSelector(\"div.sd-action-buttons\");\n            var removeButton = actionButtons.appendSelector('button.sd-remove-job-parameter-value-button.icon-button');\n            removeButton.appendSelector(\"i.material-icons\").html('remove')\n            removeButton\n                .attr('title', i18n.t('jobParametersBuilder.buttons.removeParameterValue'))\n                .classed('sd-hidden', values.length<=paramDefinition.minOccurs)\n                .on('click', (event, d)=> callbacks.onValueRemoved(d,i))\n\n        });\n\n        checkCustomValidator();\n\n        paramValuesMerge.each(function (value, i) {\n\n        });\n\n\n    }\n\n    buildDerivedValue(container, derivedValueConfig, path){\n        var self = this;\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group.sd-derived-value');\n        var name = this.getParamNameI18n(path+'.'+derivedValueConfig.name);\n        var input = selection.append('input').attr('type', 'text').attr(\"disabled\", \"disabled\");\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(name);\n\n        return (paramValue) => {\n            input.node().value = derivedValueConfig.value(paramValue);\n            AppUtils.updateInputClass(input);\n        }\n\n    }\n\n    buildParameterSingleValue(container, paramDefinition, valueAccessor, path, onChange, onInput){\n        var self = this;\n        var temp = {};\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group');\n        selection.classed('sd-parameter-'+paramDefinition.name, true);\n        var help = this.getParamHelpI18n(path);\n        if(help) {\n            let helpContainer = container.appendSelector('div.sd-help-icon');\n            helpContainer.html('<i class=\"material-icons\">info_outline</i>');\n            Tooltip.attach(helpContainer, (d)=>{\n                return help;\n            }, 5, 15);\n        }\n\n        var options = Utils.get(self.customParamsConfig, path+'.options', null);\n\n        var inputType = this.paramTypeToInputType[paramDefinition.type];\n        var additionalInputAttrs = this.paramTypeToInputAttrs[paramDefinition.type];\n        var input;\n        if(options && options.length){\n            inputType = 'select';\n            input = selection.append('select');\n            var optionsSel = input.selectAll(\"option\").data([null].concat(options));\n            optionsSel.enter().append(\"option\").attr(\"value\", d=>d).text(d=>d);\n\n            if(Utils.get(self.customParamsConfig, path+'.optionsAutocomplete', null)){\n                let autocomplete = new Autocomplete(input);\n                input = autocomplete.getInput();\n            }\n        }else{\n            input = selection.append('input').attr('type', inputType);\n\n            if(additionalInputAttrs){\n                additionalInputAttrs.forEach(attr=>input.attr(attr.name, attr.value))\n\n            }\n        }\n\n        input.attr('id', inputId);\n\n        input.classed('sd-input', true);\n        input.on('input change', function(event, d) {\n            var value = self.parseInput(this.value, paramDefinition.type);\n            if(inputType === 'checkbox'){\n                value = this.checked\n            }\n            if(!paramDefinition.validateSingleValue(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n\n            valueAccessor.set(value);\n            if (event.type === 'change') {\n                if (onChange) {\n                    onChange();\n                }\n            }\n\n            if (event.type === 'input') {\n                if (onInput) {\n                    onInput();\n                }\n            }\n\n            AppUtils.updateInputClass(d3.select(this));\n        }).each(function(d, i){\n            var value = valueAccessor.get();\n            if(inputType=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            d3.select(this).classed('invalid', !paramDefinition.validateSingleValue(value));\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(d=>{\n                let label = this.getParamNameI18n(path);\n                return label;\n            });\n        input.node().value = valueAccessor.get();\n    }\n\n    value(path, value){\n        return this.jobParameters.value(path, value);\n    }\n\n    parseInput(value, parameterType){\n        if(parameterType===PARAMETER_TYPE.DATE){\n            return new Date(value)\n        }\n        if(parameterType===PARAMETER_TYPE.NUMBER || parameterType===PARAMETER_TYPE.INTEGER){\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    getEmptyValue(parameterType){\n        if(parameterType===PARAMETER_TYPE.COMPOSITE){\n            return {}\n        }\n\n        return null;\n    }\n\n    getParamNameI18n(path){\n        return i18n.t(this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.label')\n    }\n\n    getParamHelpI18n(path){\n        let key = this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.help';\n        let help = i18n.t(key);\n        return help === key ? null : help;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport * as d3 from \"../d3\";\nimport {PivotTable} from \"../pivot-table\";\nvar jQuery = require('jquery');\n\nexport class JobResultTableConfig {\n    onRowSelected = (rows, indexes, event) => {};\n    className = '';\n\n    pivotTable;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobResultTable {\n\n    constructor(container, config) {\n        this.container = container;\n        this.config = new JobResultTableConfig(config);\n        this.init();\n    }\n\n    init() {\n        this.pivotTable = new PivotTable(this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true));\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = []\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(data.data[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n\n    setClassName(className){\n        if(this.config.className){\n            this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, false);\n            this.config.className = className;\n        }\n        this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true)\n    }\n\n    setData(data, jobParameters, job, config) {\n        var self = this;\n        var derivers = jQuery.pivotUtilities.derivers;\n        var pivotOptions = {\n            rows: data.rows,\n            vals: data.vals,\n            cols: data.cols,\n            hiddenAttributes: ['$rowIndex'],\n            aggregatorName: this.pivotTable.getAggregatorName(\"maximum\"),\n            rendererOptions: {\n                table: {\n                    clickCallback: function (e, value, filters, pivotData) {\n                        self.clickCallback(e, value, filters, pivotData);\n                    }\n                },\n                heatmap: {\n                    colorScaleGenerator: function (values) {\n                        let extent = d3.extent(values);\n\n                    return d3.scaleLinear()\n                        .domain([extent[0], (extent[0]+extent[1])/2,extent[1]])\n                        .range([\"#4b53ff\", \"#FFF\", \"#FF0000\"])\n                    }\n                }\n            },\n            rendererName: this.pivotTable.getRendererName(\"heatmap\")\n            /*\n             rendererName: 'custom',\n             renderers: {\n             'custom': function(pivotData, options){\n             console.log(pivotData)\n             }\n             }*/\n\n        };\n\n        if(config){\n            if(config.aggregatorName){\n                pivotOptions.aggregatorName = config.aggregatorName;\n            }\n            if(config.aggregators){\n                pivotOptions.aggregators = config.aggregators;\n            }\n        }\n\n        this.pivotTable.update(data.data.map((r, i)=>r.concat(i ?  i-1 : '$rowIndex')), pivotOptions);\n\n        // this.drawHeaders(data.headers);\n        // this.drawRows(data.rows)\n    }\n\n    clear() {\n        this.clearSelection();\n        this.pivotTable.clear();\n    }\n\n    show(show=true){\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide(){\n        this.show(false);\n    }\n\n    clearSelection() {\n        // this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {log} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nvar jQuery = require('jquery');\n\n\nexport class ProbabilisticSensitivityAnalysisJobResultTable extends JobResultTable {\n\n    constructor(container, config, payoffNumberFormatter, probabilityNumberFormatter){\n        super(container, config);\n        this.payoffNumberFormatter = payoffNumberFormatter;\n        this.probabilityNumberFormatter = probabilityNumberFormatter;\n    }\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n        var data = {rows: ['policy', 'expected value', 'median', 'standard deviation', 'best probability'], cols: [], vals: ['expected value'], data: []};\n\n\n        data.data.push(['policy', 'expected value', 'median', 'standard deviation', 'best probability']);\n        jobResult.policies.forEach((policy, i)=> {\n            var row = [\n                Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                this.payoffNumberFormatter(jobResult.expectedValues[i]),\n                this.payoffNumberFormatter(jobResult.medians[i]),\n                this.payoffNumberFormatter(jobResult.standardDeviations[i]),\n                this.probabilityNumberFormatter(jobResult.policyIsBestProbabilities[i])\n            ];\n            data.data.push(row);\n        });\n\n        log.trace(data);\n        super.setData(data, jobParameters, job,{\n            aggregatorName: \"empty\",\n            aggregators:{\n                empty: (attributeArray)=>(data, rowKey, colKey)=>{\n                    return {\n                        push: function(record) {\n                        },\n                        value: function() { return 0; },\n                        format: function(x) { return i18n.t('jobResultTable.policyPreview'); },\n                        numInputs: 1\n                    };\n                }\n            }\n        })\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push({policyIndex: record['$rowIndex']});\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Utils} from \"sd-utils\"\n\n\nexport class SensitivityAnalysisJobResultTable extends JobResultTable {\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n\n        jobParameters =job.createJobParameters(Utils.cloneDeep(jobParameters.values));\n        jobParameters.values.roundVariables = true;\n        var csvDAta = job.jobResultToCsvRows(jobResult, jobParameters);\n\n        if (csvDAta.length) {\n            csvDAta[0][0] = 'policy\\nnumber'\n        }\n\n        let cols = [];\n        let totalInColNum = 1;\n\n        jobParameters.values.variables.forEach(v=>{\n            let _totalInColNum = v.length * totalInColNum;\n            if((_totalInColNum>1000)){\n                return;\n            }\n            totalInColNum=_totalInColNum;\n            cols.push(v.name);\n        });\n\n        var data = {rows: ['policy'], cols: cols, vals: ['payoff'], data: csvDAta};\n        super.setData(data)\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self = this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(self.jobResult.rows[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {LineChartConfig, LineChart} from \"odc-d3/src/line-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class SpiderPlotConfig extends LineChartConfig {\n    maxWidth = undefined;\n\n    showLegend = true;\n    policyIndex = 0;\n    guides = true;\n    margin={\n        left: 100\n    };\n    x={// X axis config\n        title: i18n.t('job.spider-plot.plot.xAxisTitle'), // axis label\n        key: 0,\n        domainMargin: 0\n    };\n    y={// Y axis config\n        title: i18n.t('job.spider-plot.plot.yAxisTitle'), // axis label,\n        key: 1,\n        domainMargin: 0.1\n    };\n    series = true;\n    dotRadius = 3;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class SpiderPlot extends LineChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new SpiderPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new SpiderPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-spider-plot', true);\n    }\n\n    setData(data){\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map(r=>{\n            return {\n                key: r.variableName,\n                values: data.percentageRangeValues.map((rangeVal, index)=>[\n                    data.percentageRangeValues[index],\n                    r.payoffs[this.config.policyIndex][index]\n                ])\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {DivergingStackedBarChartConfig, DivergingStackedBarChart} from \"odc-d3/src/diverging-stacked-bar-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class TornadoDiagramPlotConfig extends DivergingStackedBarChartConfig {\n    maxWidth = undefined;\n    margin={\n        left: 150,\n        top: 70\n    };\n\n    showLegend = true;\n    forceLegend = true;\n\n    categoryNames = [i18n.t(\"job.tornado-diagram.plot.legend.low\"), i18n.t(\"job.tornado-diagram.plot.legend.high\")];\n    colorRange = [\"#4f81bd\", \"#9bbb59\"];\n    policyIndex = 0;\n\n    guides = true;\n    middleValue = 1000;\n    showBarValues = false;\n\n    x={// X axis config\n        title: i18n.t('job.tornado-diagram.plot.xAxisTitle'), // axis label\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class TornadoDiagramPlot extends DivergingStackedBarChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new TornadoDiagramPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new TornadoDiagramPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-tornado-diagram-plot', true);\n    }\n\n    setData(data){\n        this.config.middleValue = data.defaultPayoff;\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map((r)=>{\n            let varExtent = data.variableExtents[data.variableNames.indexOf(r.variableName)];\n            return {\n                key: r.variableName+' ['+varExtent[0]+'; '+varExtent[1]+']',\n                values: [\n                    Math.max(0, data.defaultPayoff - r.extents[this.config.policyIndex][0]),\n                    Math.max(0, r.extents[this.config.policyIndex][1] - data.defaultPayoff)\n                ],\n                categories: r.extentVariableValues[this.config.policyIndex][0] <= r.extentVariableValues[this.config.policyIndex][1] ? [0, 1] : [1, 0]\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {Dialog} from \"../dialogs/dialog\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {LeagueTable} from \"./league-table\";\nimport {LeagueTablePlot} from \"./league-table-plot\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class LeagueTableDialog extends Dialog {\n    computationsManager;\n    jobInstanceManager;\n\n    constructor(app) {\n        super(app.container.select('.sd-league-table-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-league-table-job-results\");\n        this.initButtons();\n\n        this.job = this.computationsManager.getJobByName(\"league-table\");\n    }\n\n    onOpen() {\n        this.clear();\n        this.runJob();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-league-table-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-league-table-warnings\").appendSelector(\"div.sd-league-table-warning\").html(msgHTML);\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (row)=> this.onResultRowSelected(row),\n            onRowHover: (event, row)=> this.resultPlot.emphasize(row.row, true),\n            onRowHoverOut: (event, row)=> this.resultPlot.emphasize(row.row, false),\n        };\n\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n        }\n\n\n        this.resultTable = new LeagueTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n        this.resultTable.setData(result, this.app.dataModel);\n        this.resultTable.show();\n    }\n\n\n\n    initResultPlot(result) {\n        let self = this;\n        let config = {\n            maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            weightLowerBound: result.weightLowerBound,\n            defaultWeight: result.defaultWeight,\n            weightUpperBound: result.weightUpperBound,\n            payoffCoeffs: result.payoffCoeffs,\n            payoffNames: result.payoffNames,\n            x: {\n                value: (d, key) => d.payoffs[0],\n                title: result.payoffNames[0]\n            },\n            y: {\n                value: (d, key) => d.payoffs[1],\n                title: result.payoffNames[1]\n            },\n            onDotHover: (event, d) => this.resultTable.emphasize(d, true),\n            onDotHoverOut: (event, d) => this.resultTable.emphasize(d, false),\n\n\n            color: function (group) {\n                let groupsConf = self.app.config.leagueTable.plot.groups;\n                let groupConf = groupsConf[group.key];\n                if (groupConf) {\n                    return groupConf.color;\n                }\n                return 'black'\n            },\n            groupOrdering: {\n                'dominated': 0,\n                'extended-dominated': 1,\n                'highlighted': 2,\n                'highlighted-default': 3,\n                'default': 4\n\n            },\n            groups: {\n                value: function (r) {\n                    if (r.optimalForDefaultWeight) {\n                        return 'highlighted-default'\n                    } else if (r.optimal) {\n                        return 'highlighted'\n                    }  else if (r.dominatedBy !== null) {\n                        return 'dominated'\n                    } else if (r.extendedDominatedBy !== null) {\n                        return 'extended-dominated'\n                    }\n\n                    return \"default\";\n                },\n                displayValue: (groupKey) => i18n.t(\"leagueTable.plot.groups.\"+groupKey)\n            }\n        };\n\n        this.resultPlot = new LeagueTablePlot(this.jobResultsContainer.select(\".sd-job-result-plot-container\").node(), result.rows.slice(), config);\n        setTimeout(function () {\n            self.resultPlot.init()\n        }, 100)\n    }\n\n    onResized() {\n        if (this.resultPlot) {\n            this.resultPlot.init();\n        }\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-league-table-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n\n    initJobParams(){\n        this.jobParameters = this.job.createJobParameters({\n            ruleName: this.computationsManager.getCurrentRule().name,\n            weightLowerBound: this.app.dataModel.weightLowerBound,\n            defaultWeight: this.app.dataModel.defaultCriterion1Weight,\n            weightUpperBound: this.app.dataModel.weightUpperBound,\n\n        });\n    }\n\n    validateParams(){\n        this.initJobParams();\n        return this.jobParameters.validate();\n    }\n\n    runJob() {\n\n\n        this.initJobParams();\n\n        if(!this.validateParams()){\n            alert(i18n.t(\"job.errors.params\", {\"jobName\": i18n.t(\"job.league-table.name\")}))\n            return;\n        }\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n            onJobStarted: this.onJobStarted,\n            onJobCompleted: this.onJobCompleted,\n            onJobFailed: this.onJobFailed,\n            onJobStopped: this.onJobStopped,\n            onJobTerminated: this.onJobTerminated,\n            onProgress: this.onProgress,\n            callbacksThisArg: this\n        }).then(jobInstanceManager=> {\n            this.jobInstanceManager = jobInstanceManager;\n        }).catch(e=> {\n            log.error(e);\n        }).then(()=> {\n            this.disableActionButtonsAndShowLoadingIndicator(false);\n        })\n    }\n\n    initButtons() {\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    clear() {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.jobResultsContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlot(result);\n\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.downloadCsvButtons);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                e.jobName = i18n.t(\"job.league-table.name\");\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(row) {\n        let title = Policy.toPolicyString(row.policy, false);\n        this.app.showPolicyPreview(title, row.policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows(), 'leaguetable')\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import {ScatterPlot, ScatterPlotConfig} from \"odc-d3/src/scatterplot\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTablePlotConfig extends ScatterPlotConfig {\n    maxWidth = undefined;\n    weightLowerBound = 0;\n    weightUpperBound = Infinity;\n    gradientArrowLength = 30;\n    gradientArrowOffset = 10;\n    payoffCoeffs = [1, 1];\n    payoffNames = [];\n\n    showLegend = true;\n    forceLegend = true;\n\n    legend = {\n        width: 125,\n    };\n\n    // d3ColorCategory = false;\n\n    guides = true;\n    dotRadius = 5;\n    emphasizedDotRadius = 8;\n\n    dotId = (d, i) => 'sd-league-table-dot-'+d.id;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LeagueTablePlot extends ScatterPlot {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LeagueTablePlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new LeagueTablePlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-league-table-plot', true);\n        this.initArrowMarker(\"triangle\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.selectOrAppend(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        this.checkOrdering();\n        super.initPlot();\n    }\n\n    checkOrdering(){\n        if(this.config.groupOrdering){\n            let getOrdering  = d => {\n                let g = this.config.groups.value(d);\n                return this.config.groupOrdering[g] === undefined ? 999 : this.config.groupOrdering[g];\n            };\n            this.data.sort((a, b)=>getOrdering(a) - getOrdering(b));\n        }\n    }\n\n    update(newData) {\n        this.checkOrdering();\n        super.update(newData);\n\n        this.updateIcerLines();\n        this.updateDominatedRegion();\n        this.updateGradientArrows();\n        this.updateDotLabels();\n\n\n    };\n\n    updateIcerLines() {\n        let self = this;\n        var linesContainerClass = this.linesContainerClass = this.prefixClass(\"lines-container\");\n        var linesContainerSelector = \"g.\" + linesContainerClass;\n        var linesContainer = this.linesContainer= self.svgG.selectOrInsert(linesContainerSelector, \".\" + self.dotsContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var linesContainerClip = linesContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        linesContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        linesContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        var line = d3.line()\n            .x(this.plot.x.map)\n            .y(this.plot.y.map);\n\n\n\n\n        let linePoints = this.plot.data.filter(d=>d.incratio !== null).sort(this.plot.x.map);\n        let highlightedPoints = this.plot.data.filter(d=>[\"highlighted\", \"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1).sort((a, b) => this.plot.x.map(a) - this.plot.x.map(b));\n        let highlightedDefaultPoints = highlightedPoints.filter(d=>[\"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1);\n\n        this.dominatedRegionPoints = highlightedPoints.map(d=>[this.plot.x.map(d), this.plot.y.map(d)]);\n\n        if (!highlightedPoints.length) {\n            linesContainer.selectAll(\"*\").remove();\n            return;\n        }\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('middle-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", line(highlightedPoints));\n\n        highlightedPoints.sort((a, b) =>a.incratio - b.incratio || (this.config.payoffCoeffs[0] * (this.plot.x.map(a) - this.plot.x.map(b))));\n\n        let minPoint = highlightedPoints[0];\n        let maxPoint = highlightedPoints[highlightedPoints.length - 1];\n\n        let lowPoint;\n        let highPoint;\n\n        let xAxisExtent = [this.plot.x.scale.invert(0), this.plot.x.scale.invert(this.plot.width)];\n        let yAxisExtent = [this.plot.y.scale.invert(this.plot.height), this.plot.y.scale.invert(0)];\n\n        let sign = (this.config.payoffCoeffs[0] * this.config.payoffCoeffs[1]) > 0 ? 1 : -1;\n\n        let infLowY = this.config.payoffCoeffs[0] > 0 ? this.plot.height: 0;\n        if(sign > 0){\n            infLowY = this.config.payoffCoeffs[0] < 0 ? this.plot.height: 0;\n        }\n        let infLowPoint = [this.plot.x.map(minPoint), infLowY];\n\n        if (this.config.weightLowerBound == Infinity) {\n            lowPoint = infLowPoint\n        } else {\n            let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n            lowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.weightLowerBound * (this.plot.x.value(minPoint) - x) + this.plot.y.value(minPoint))];\n            if(Math.abs(lowPoint[1]) > 1000000){\n                lowPoint = infLowPoint\n            }\n        }\n\n        let infHighPoint =  [this.plot.x.map(maxPoint), this.config.payoffCoeffs[1] > 0 ? this.plot.height: 0];\n        if (this.config.weightUpperBound == Infinity) {\n            highPoint = infHighPoint\n        } else {\n\n            let x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n\n            if(sign > 0){\n                x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n            }\n\n            highPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.weightUpperBound * (x - this.plot.x.value(maxPoint)) + this.plot.y.value(maxPoint))];\n            // highPoint = [this.plot.x.scale(x), this.plot.y.scale(EE.toFloat(EE.multiply(-sign, EE.multiply(this.config.weightUpperBound, (x - this.plot.x.value(maxPoint))))) + this.plot.y.value(maxPoint))];\n            if(Math.abs(highPoint[1]) > 1000000){\n                highPoint = infHighPoint\n            }\n        }\n\n        if(highlightedDefaultPoints.length){\n            let defaultPoint = highlightedDefaultPoints[0];\n            let defLowPoint = infLowPoint;\n            let defHighPoint = infHighPoint;\n            if (this.config.defaultWeight !== Infinity) {\n                let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                defLowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.defaultWeight * (this.plot.x.value(defaultPoint) - x) + this.plot.y.value(defaultPoint))];\n                x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                if(sign > 0){\n                    x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n                }\n                defHighPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.defaultWeight * (x - this.plot.x.value(defaultPoint)) + this.plot.y.value(defaultPoint))];\n            }\n            linesContainer.selectOrAppend(\"path.\" + this.prefixClass('default-incratio'))\n                .attr(\"shape-rendering\", \"optimizeQuality\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"stroke\", 'black')\n                .attr(\"d\", d3.line()([defLowPoint, defHighPoint]))\n        } else{\n            linesContainer.select(\"path.\" + this.prefixClass('default-incratio')).remove()\n        }\n\n\n        this.dominatedRegionPoints.unshift(lowPoint);\n        this.dominatedRegionPoints.push(highPoint);\n\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('low-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([lowPoint, [this.plot.x.map(minPoint), this.plot.y.map(minPoint)]]))\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('high-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([highPoint, [this.plot.x.map(maxPoint), this.plot.y.map(maxPoint)]]))\n\n\n\n\n    }\n\n    updateDominatedRegion(){\n        let self = this;\n        var dominatedRegionContainerClass = this.prefixClass(\"dominated-region-container\");\n        var dominatedRegionContainerSelector = \"g.\" + dominatedRegionContainerClass;\n        var dominatedRegionContainer = self.svgG.selectOrInsert(dominatedRegionContainerSelector, \".\"+this.linesContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var dominatedRegionContainerClip = dominatedRegionContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        dominatedRegionContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        dominatedRegionContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        //draw dominated region\n\n        let worstPoint = [\n            this.config.payoffCoeffs[0] < 0 ? self.plot.width : 0,\n            this.config.payoffCoeffs[1] < 0 ? 0 : self.plot.height\n        ];\n\n        this.dominatedRegionPoints.push(worstPoint);\n\n        if(this.dominatedRegionPoints.some(p=>worstPoint[1] ? p[1] <=0 : p[1] >= self.plot.height)){\n            this.dominatedRegionPoints.push([worstPoint[0], worstPoint[1] ? 0 : self.plot.height]);\n        }\n\n        this.dominatedRegionPoints.sort((a, b)=> (a[0] - b[0]));\n        this.dominatedRegionPoints = this.dominatedRegionPoints.reduce((prev, curr)=>{\n            if(!prev.length){\n                return [curr]\n            }\n            var prevPoint = prev[prev.length-1];\n            if(prevPoint[0] !== curr[0]){\n                prev.push(curr)\n            }\n            if(Math.abs(worstPoint[1] - curr[1]) > Math.abs(worstPoint[1] - prev[prev.length-1][1])){\n                prev[prev.length-1] = curr;\n            }\n            return prev;\n\n        }, []);\n\n        let area = d3.area();\n        area.y0(worstPoint[1])\n        dominatedRegionContainer.selectOrInsert(\"path.\" + this.prefixClass('dominated-region'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"gray\")\n            .attr(\"stroke-width\", 0)\n            .attr(\"d\", area(this.dominatedRegionPoints));\n\n        Tooltip.attach(dominatedRegionContainer, i18n.t('leagueTable.plot.tooltip.dominatedRegion'));\n    }\n\n    updateDotLabels() {\n        var self = this;\n        var labelsContainerClass = this.prefixClass(\"dot-labels-container\");\n        var labelsContainerSelector = \"g.\" + labelsContainerClass;\n        var labelsContainer = self.svgG.selectOrAppend(labelsContainerSelector, \".\" + self.dotsContainerClass);\n\n        var labels = labelsContainer.selectAll(\"text.\" + this.prefixClass(\"dot-label\")).data(this.plot.data);\n        labels.exit().remove();\n        labels.enter().append('text')\n            .attr('class', this.prefixClass(\"dot-label\"))\n            .merge(labels)\n            .attr('x', this.plot.x.map)\n            .attr('y', this.plot.y.map)\n            .attr('text-anchor', 'end')\n            .attr(\"dy\", \"-5px\")\n            .attr(\"dx\", \"-5px\")\n            .text(d=>d.id)\n    }\n\n    updateGradientArrows() {\n\n        var data = this.config.payoffCoeffs.map((coeff, i)=>{\n\n            let l = this.config.gradientArrowLength * coeff;\n            let offset = this.config.gradientArrowOffset * coeff;\n\n            let d = {\n                x1: this.plot.width/2,\n                y1: this.plot.height/2,\n            };\n\n            if(i==0){\n                d.x1 += offset;\n                d.x2 = d.x1 + l;\n                d.y2 = d.y1\n            }else{\n                d.y1 -= offset;\n                d.x2 = d.x1;\n                d.y2 = d.y1 - l\n            }\n\n            return d\n        });\n\n        let self = this;\n        var arrowsContainerClass = this.prefixClass(\"gradient-arrows-container\");\n        var arrowsContainerSelector = \"g.\" + arrowsContainerClass;\n        var arrowsContainer = self.svgG.selectOrInsert(arrowsContainerSelector, \".\" + self.dotsContainerClass);\n\n        let arrowClass = this.prefixClass(\"gradient-arrow\");\n        var arrows = arrowsContainer.selectAll(\".\"+arrowClass).data(data);\n        arrows.exit().remove();\n        var arrowsEnter = arrows.enter().append('g')\n            .attr('class', arrowClass);\n\n        arrowsEnter.append(\"line\").attr(\"marker-end\", \"url(#triangle)\");\n        var arrowsMerge =arrowsEnter.merge(arrows);\n\n        arrowsMerge.select(\"line\")\n            .attr(\"x1\", d=>d.x1)\n            .attr(\"y1\", d=>d.y1)\n            .attr(\"x2\", d=>d.x2)\n            .attr(\"y2\", d=>d.y2);\n\n        Tooltip.attach(arrowsMerge, (d, i)=>{\n            return i18n.t('leagueTable.plot.tooltip.gradientArrow' + (i + 1), { name: this.config.payoffNames[i]});\n        });\n    }\n\n    emphasize(row, emphasize=true){\n        this.emphasizeDot(this.svg.selectAll('#'+this.config.dotId(row)), emphasize);\n    }\n\n    emphasizeDot(selection, emphasize){\n        selection\n            .classed('sd-emphasized', emphasize)\n            .transition()\n            .attr('r', emphasize ? this.config.emphasizedDotRadius : this.config.dotRadius)\n    }\n    updateDots(){\n        var self = this;\n        super.updateDots();\n        var dotsContainer = this.svgG.select(\"g.\" + this.dotsContainerClass);\n        dotsContainer.selectAll('.' + this.dotClass)\n            .on(\"mouseover.emphasize\", function(event, d){ self.emphasizeDot(d3.select(this), true) })\n            .on(\"mouseout.emphasize\", function(event, d){ self.emphasizeDot(d3.select(this), false) })\n    }\n\n    updateLegend() {\n        super.updateLegend();\n        var plot = this.plot;\n\n        let container = plot.legend.container.selectOrAppend(\"g.sd-additional-items\")\n        let legendCells = plot.legend.container.select(\".legendCells\");\n        let margin = 20;\n\n        let texts = [\n            i18n.t(\"leagueTable.plot.legend.dominatedRegion\"),\n            i18n.t(\"leagueTable.plot.legend.gradientArrows\")\n        ];\n\n        container.attr(\"transform\", \"translate(0, \"+(legendCells.node().getBBox().height+margin)+\")\");\n\n        container.selectAll(\"text\").data(texts)\n            .enter().append(\"text\")\n            .text(d=>d)\n            .attr('dy', \"0\")\n            .attr('x', \"0\");\n\n        container.selectAll(\"text\").call(wrap, d=>d, this.config.legend.width);\n\n        function wrap(text, getTextData, width) {\n            text.each(function(d) {\n\n                var text = d3.select(this),\n                    words = getTextData(d).split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineNumber = 0,\n                    lineHeight = 1.1, // ems\n                    y = text.attr('y'),\n                    dy = parseFloat(text.attr('dy')),\n                    tspan = text.text(null).append('tspan')\n                        .attr('x', 0).attr('y', y).attr('dy', dy + 'em');\n\n                if(this.previousSibling){\n                    text.attr('y', this.previousSibling.getBBox().height+10)\n                }\n\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n                        line = [word];\n                        tspan = text.append('tspan')\n                            .attr('x', 0).attr('y', y)\n                            .attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n                    }\n                }\n            });\n        }\n    }\n\n\n}\n","import {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTableConfig {\n    onRowSelected = (row) => {\n    };\n    extendedPolicyDescription = true;\n    onRowHover = (event, d) => {};\n    onRowHoverOut = (event, d) => {};\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class LeagueTable {\n\n    constructor(container, config, dataModel) {\n        this.container = container;\n        this.config = new LeagueTableConfig(config);\n        this.dataModel = dataModel;\n        this.init();\n    }\n\n    init() {\n        this.resultTable = this.container.selectOrAppend(\"table.sd-league-table\");\n        this.resultTableHead = this.resultTable.selectOrAppend(\"thead\");\n        this.resultTableBody = this.resultTable.selectOrAppend(\"tbody\");\n        this.resultTableFoot = this.resultTable.selectOrAppend(\"tfoot\");\n    }\n\n    setData(jobResult, dataModel) {\n        this.jobResult = jobResult;\n        this.dataModel = dataModel;\n        this.drawHeaders([\n            i18n.t('leagueTable.headers.policyNo'),\n            i18n.t('leagueTable.headers.policy'),\n            dataModel.payoffNames[0],\n            dataModel.payoffNames[1],\n            i18n.t('leagueTable.headers.comment')\n        ]);\n        this.drawRows(jobResult.rows)\n    }\n\n    drawHeaders(headerData) {\n        var headers = this.resultTableHead.selectOrAppend(\"tr\").selectAll(\"th\").data(headerData);\n        var headersEnter = headers.enter().append(\"th\");\n        var headersMerge = headersEnter.merge(headers);\n        headers.exit().remove();\n\n        headersMerge.text(d=>d);\n    }\n\n    drawRows(rowsData) {\n        var self = this;\n\n        let data = rowsData.reduce((prev, d)=> {\n            let r = prev;\n            d.policies.forEach((policy, i)=> {\n                if (!i) {\n                    r.push({\n                        row: d,\n                        policy: policy,\n                        cells: [\n                            {\n                                data: d.id,\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                                rowspan: 1\n                            },\n                            {\n                                data: d.payoffs[0],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: d.payoffs[1],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: this.getRowComment(d),\n                                rowspan: d.policies.length\n                            },\n                        ]\n                    });\n                    return;\n                }\n\n                r.push({\n                    row: d,\n                    policy: policy,\n                    cells: [{\n                        data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                        rowspan: 1\n                    }]\n                });\n\n            });\n\n            return r;\n        }, []);\n\n        var rows = this.resultTableBody.selectAll(\"tr\").data(data);\n\n        var rowsEnter = rows.enter().append(\"tr\");\n        var rowsMerge = rowsEnter.merge(rows);\n        rowsMerge\n            .on('click', function (event, d) {\n                const i = rowsMerge.nodes().indexOf(this);\n                // d3.select(this).classed('sd-selected', true);\n                self.config.onRowSelected(d, i)\n            })\n            .classed('sd-highlighted', d=>d.row.optimal)\n            .classed('sd-highlighted-default', d=>d.row.optimalForDefaultWeight)\n            .attr('id', d => 'sd-league-table-row-'+d.row.id);\n\n        rowsMerge.on(\"mouseover.onRowHover\", this.config.onRowHover);\n        rowsMerge.on(\"mouseout.onRowHoverOut\", this.config.onRowHoverOut);\n\n        rows.exit().remove();\n\n        var cells = rowsMerge.selectAll(\"td\").data(d=>d.cells);\n        var cellsEnter = cells.enter().append(\"td\");\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.text(d=>d.data);\n        cellsMerge.attr('rowspan', d=>d.rowspan);\n        cells.exit().remove();\n\n    }\n\n    clear() {\n        this.clearSelection();\n    }\n\n    show(show = true) {\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide() {\n        this.show(false);\n    }\n\n    clearSelection() {\n        this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n    getRowComment(row) {\n        if(row.incratio !== null){\n            return i18n.t('leagueTable.comment.incratio', {incratio: row.incratio});\n        }\n        if(row.dominatedBy !== null){\n            return i18n.t('leagueTable.comment.dominatedBy', {policy: row.dominatedBy});\n        }\n        if(row.extendedDominatedBy !== null){\n            return i18n.t('leagueTable.comment.extendedDominatedBy', {policy1: row.extendedDominatedBy[0], policy2: row.extendedDominatedBy[1]});\n        }\n        return '';\n    }\n\n\n    emphasize(row, emphasize=true){\n        this.resultTableBody.selectAll('#sd-league-table-row-'+row.id).classed('sd-emphasized', emphasize);\n    }\n}\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\n\nimport {Utils} from 'sd-utils'\nimport {Templates} from \"./templates\";\n\nexport class LoadingIndicator{\n    static show(message=''){\n        var html = Templates.get('loadingIndicator');\n\n        var g = d3.select('body').selectOrAppend('div.sd-loading-indicator-container').html(html).select('.sd-loading-indicator').classed('visible', true).style('display', 'block')\n    }\n\n    static hide(){\n        let select = d3.select('.sd-loading-indicator');\n        select.classed('visible', false);\n        setTimeout(function(){\n            select.style('display', 'none')\n        }, 500)\n\n    }\n}\n","import {Utils, log} from 'sd-utils';\nimport {i18n} from \"./i18n/i18n\";\nvar jQuery = require('jquery');\nvar global$ = Utils.getGlobalObject().jQuery;\nUtils.getGlobalObject().jQuery = jQuery;\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/scroll-parent');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/sortable');\nrequire('pivottable');\n\n\n// pivot show zero hack start\nvar numberFormat = jQuery.pivotUtilities.numberFormat;\ntry{\n    jQuery.pivotUtilities.numberFormat = function(opts){\n        if(!opts){\n            opts = {};\n        }\n        opts.showZero = true;\n        return numberFormat(opts);\n    };\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting');\n\n    try{\n        jQuery.pivotUtilities.numberFormat = numberFormat;\n    }catch (e){\n\n    }\n}\n\nrequire('pivottable/dist/pivot.it');\nrequire('pivottable/dist/pivot.de');\nrequire('pivottable/dist/pivot.fr');\nrequire('pivottable/dist/pivot.pl');\n\nUtils.getGlobalObject().jQuery = global$;\n\n// pivot show zero hack continuation\ntry{\n    var origAggregators = {};\n    Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n        origAggregators[key] = value;\n        object[key] = function(){\n            var args1 = arguments;\n            try{\n                let res1 = value.apply(this, args1);\n                return function(){\n                    var res = res1(...arguments);\n                    var format_ = res.format;\n                    res.format = function(x){\n                        var origX = x;\n                        if(x===0){\n                            x =  \"0\";\n                        }\n                        try{\n                            return format_(x);\n                        }catch (e){\n                            log.error('Error when performing pivottable \"show zero\" hack (format func call), reverting', e);\n                            if(format_){\n                                return format_(origX);\n                            }\n                            revertAggregators();\n                        }\n                    };\n                    return res;\n                };\n            }catch(e){\n                log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n                revertAggregators();\n                return origAggregators[key](...args1)\n            }\n        }\n    });\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n    revertAggregators();\n}\n\nfunction revertAggregators(){\n    try {\n        Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n            let origAggregator = origAggregators[key];\n            if(origAggregator){\n                object[key] = origAggregator\n            }\n\n        });\n    }catch(e){\n        log.error('Error when reverting aggregators', e)\n    }\n}\n\n///////////////////// hack end\n\nexport class PivotTable{\n\n    container;\n\n\n    constructor(container, options, data){\n        this.container =container;\n        this.options = options;\n        this.data=data;\n        if(data){\n            this.update(data, options);\n        }\n    }\n\n    update(data, options){\n        this.data = data;\n        this.options = options;\n        jQuery(this.container.node()).pivotUI(data, options, true, i18n.language)\n    }\n\n    clear(){\n        jQuery(this.container.node()).pivotUI([], null, true)\n    }\n\n\n\n    getAggregatorName(name){\n        return i18n.t(\"jobResultTable.pivot.aggregators.\"+name.toLowerCase());\n    }\n\n    getRendererName(name){\n        return i18n.t(\"jobResultTable.pivot.renderers.\"+name.toLowerCase());\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {PayoffInputValidator} from \"./validation/payoff-input-validator\";\nimport {ProbabilityInputValidator} from \"./validation/probability-input-validator\";\nimport {Templates} from \"./templates\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {InputField} from \"./form/input-field\";\nimport {PathValueAccessor} from \"./form/path-value-accessor\";\nimport {NumberInputValidator} from \"./validation/number-input-validator\";\nimport {RequiredInputValidator} from \"./validation/required-input-validator\";\nimport {McdmWeightValueValidator} from \"sd-computations/src/validation/mcdm-weight-value-validator\";\n\nexport class Sidebar {\n\n    app;\n    container;\n    dispatch = d3.dispatch(\"recomputed\", \"object-updated\", \"multi-criteria-updated\");\n\n\n    constructor(container, app) {\n        this.app = app;\n        this.container = container;\n\n        this.initLayoutOptions();\n        this.initDiagramDetails();\n        this.initDefinitions();\n        this.initMultipleCriteria();\n        var self = this;\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app) {\n                self.dispatch.call(\"recomputed\");\n            }\n        });\n\n        self.dispatch.on(\"object-updated\", Utils.debounce((object, fieldName)=> self.app.onObjectUpdated(object, fieldName), 350));\n        self.dispatch.on(\"multi-criteria-updated\", Utils.debounce((fieldName)=> self.app.onMultiCriteriaUpdated(fieldName), 350));\n\n    }\n\n    initLayoutOptions() {\n        var self = this;\n        this.layoutOptionsContainer = this.container.select('#layout-options');\n        this.autoLayoutOptionsGroup = this.layoutOptionsContainer.select('#auto-layout-options');\n        this.gridWidth = this.layoutOptionsContainer.select('input#grid-width').on('change', function () {\n            self.app.treeDesigner.layout.setGridWidth(parseInt(this.value));\n\n        });\n\n        this.gridHeight = this.layoutOptionsContainer.select('input#grid-height').on('change', function () {\n            self.app.treeDesigner.layout.setGridHeight(parseInt(this.value));\n        });\n\n        this.nodeSize = this.layoutOptionsContainer.select('input#node-size').on('change', function () {\n            self.app.treeDesigner.layout.setNodeSize(parseInt(this.value));\n        });\n\n        this.edgeSlantWidthMax = this.layoutOptionsContainer.select('input#edge-slant-width-max').on('change', function () {\n            self.app.treeDesigner.layout.setEdgeSlantWidthMax(parseInt(this.value));\n        });\n\n        this.marginHorizontal = this.layoutOptionsContainer.select('input#margin-horizontal').on('change', function () {\n            var m = {};\n            m.left = m.right = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n        this.marginVertical = this.layoutOptionsContainer.select('input#margin-vertical').on('change', function () {\n            var m = {};\n            m.top = m.bottom = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n\n        this.scale = this.layoutOptionsContainer.select('input#sd-svg-scale').on('change', function () {\n            self.app.treeDesigner.setScale(parseFloat(this.value));\n        });\n\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.updateLayoutOptions());\n\n        this.layoutOptionsContainer.select('.toggle-button').on('click', () => {\n            this.layoutOptionsContainer.classed('sd-extended', !this.layoutOptionsContainer.classed('sd-extended'));\n        });\n\n        this.updateLayoutOptions();\n    }\n\n    updateLayoutOptions() {\n        this.nodeSize.node().value = this.app.treeDesigner.config.layout.nodeSize;\n        this.edgeSlantWidthMax.node().value = this.app.treeDesigner.config.layout.edgeSlantWidthMax;\n        this.marginHorizontal.node().value = this.app.treeDesigner.config.margin.left;\n        this.marginVertical.node().value = this.app.treeDesigner.config.margin.top;\n        this.gridWidth.node().value = this.app.treeDesigner.config.layout.gridWidth;\n        this.gridHeight.node().value = this.app.treeDesigner.config.layout.gridHeight;\n        this.scale.node().value = this.app.treeDesigner.config.scale;\n        this.autoLayoutOptionsGroup.classed('visible', !this.app.treeDesigner.layout.isManualLayout());\n    }\n\n    initDiagramDetails() {\n        var self = this;\n        this.diagramDetailsContainer = this.container.select('#diagram-details-box');\n        this.diagramDetailsContainer.classed('sd-hidden', !this.app.config.showDetails);\n\n        this.diagramDetailsContainer.select('.toggle-button').on('click', () => {\n            this.diagramDetailsContainer.classed('sd-extended', !this.diagramDetailsContainer.classed('sd-extended'));\n            this.updateDiagramDetails();\n        });\n\n        this.diagramTitle = this.diagramDetailsContainer.select('input#diagram-title').on('change', function () {\n            self.app.setDiagramTitle(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.diagramDescription = this.diagramDetailsContainer.select('textarea#diagram-description').on('change', function () {\n            self.app.setDiagramDescription(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        AppUtils.elasticTextarea(this.diagramDescription);\n\n        this.updateDiagramDetails();\n    }\n\n    initDefinitions() {\n        var self = this;\n        this.definitionsContainer = this.container.select('#sd-sidebar-definitions');\n        this.definitionsContainer.classed('sd-hidden', !this.app.config.showDefinitions);\n        this.onDefinitionsCodeChanged = null;\n        this.definitionsContainer.select('.toggle-button').on('click', () => {\n            this.definitionsContainer.classed('sd-extended', !this.definitionsContainer.classed('sd-extended'));\n            AppUtils.updateInputClass(this.definitionsCode);\n            AppUtils.autoResizeTextarea(this.definitionsCode.node())\n        });\n\n        this.definitionsScopeLabel = this.definitionsContainer.select('.sd-variables-scope-value');\n\n        this.definitionsCode = this.definitionsContainer.select('textarea#sd-sidebar-definitions-code').on('change', function () {\n            if (self.onDefinitionsCodeChanged) {\n                self.onDefinitionsCodeChanged(this.value)\n            }\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        Tooltip.attach(this.definitionsCode, (d)=>{\n            return self.definitionsCode.attr('data-error-msg');\n\n        }, 15, 50);\n\n\n        this.definitionsEvaluatedValuesContainer = this.container.select(\"#sd-sidebar-definitions-evaluated-values\");\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-open-dialog-button').on('click', () => {\n            this.app.openDefinitionsDialog();\n        });\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-recalculate-button').on('click', () => {\n            this.app.recompute();\n        });\n\n        AppUtils.elasticTextarea(this.definitionsCode);\n    }\n\n    initMultipleCriteria() {\n        var self = this;\n        this.multipleCriteriaContainer = this.container.select('#sd-multiple-criteria');\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        this.multipleCriteriaContainer.select('.toggle-button').on('click', () => {\n            this.multipleCriteriaContainer.classed('sd-extended', !this.multipleCriteriaContainer.classed('sd-extended'));\n        });\n\n\n        this.showLeagueTableButton = this.multipleCriteriaContainer.select('#sd-show-league-table-button').on('click', () => {\n            this.app.showLeagueTable();\n        });\n\n        this.flipCriteriaButton = this.multipleCriteriaContainer.select('#sd-flip-criteria-button').on('click', () => {\n            this.app.flipCriteria();\n        });\n\n         let weightParser = (w) => {\n             return parseFloat(w) === Infinity ? Infinity : w;\n        };\n\n\n\n        this.multipleCriteriaFields = [];\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion1', 'nameOfCriterion1', 'text', i18n.t('multipleCriteria.nameOfCriterion1'), new PathValueAccessor(self.app.dataModel, 'payoffNames[0]'), new RequiredInputValidator()));\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion2', 'nameOfCriterion2', 'text', i18n.t('multipleCriteria.nameOfCriterion2'), new PathValueAccessor(self.app.dataModel, 'payoffNames[1]'), new RequiredInputValidator()));\n        let lowerBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightLowerBound');\n        let upperBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightUpperBound');\n        let weightValueValidator = new McdmWeightValueValidator();\n        var ee = this.app.expressionEngine.constructor;\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightLowerBound', 'weightLowerBound', 'text', i18n.t('multipleCriteria.weightLowerBound'), lowerBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                return weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-defaultCriterion1Weight', 'defaultCriterion1Weight', 'text', i18n.t('multipleCriteria.defaultCriterion1Weight'),\n            new PathValueAccessor(self.app.dataModel, 'defaultCriterion1Weight'),\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                let lower = lowerBoundValueAccessor.get();\n                return (weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true) && (weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true)\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightUpperBound', 'weightUpperBound', 'text', i18n.t('multipleCriteria.weightUpperBound'), upperBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let lower = lowerBoundValueAccessor.get();\n                return weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true\n            }), null, weightParser));\n\n        this.updateMultipleCriteria();\n    }\n\n\n    updateMultipleCriteria(updateInputs = true){ //TODO refactor\n        var ee = this.app.expressionEngine;\n\n        var self = this;\n        var temp = {};\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        let leagueTableAvailable = this.app.isLeagueTableAvailable();\n        this.showLeagueTableButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.flipCriteriaButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.multipleCriteriaContainer.classed('sd-invalid-league-table-params', !leagueTableAvailable);\n\n        if(!updateInputs){\n            return;\n        }\n\n        var inputGroups = this.multipleCriteriaContainer.select(\".sd-multiple-criteria-properties\").selectAll('div.input-group').data(this.multipleCriteriaFields);\n        inputGroups.exit().remove();\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n\n        var inputSelection = inputGroupsEnter.merge(inputGroups).select('.sd-input');\n        inputSelection.on('change input', function (event, d) {\n            const i = inputSelection.nodes().indexOf(this);\n            var prevValue = d.getValue();\n\n            var isValid = !d.validator || d.validator.validate(this.value);\n\n            let selection = d3.select(this);\n            selection.classed('invalid', !isValid);\n            if(d.styleClass){\n                selection.classed(d.styleClass, true);\n            }\n\n            if (event.type === 'change' && temp[i].pristineVal !== this.value) {\n                self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                if (d.onChange) {\n                    d.onChange(object, this.value, temp[i].pristineVal);\n                }\n            }\n\n            if((prevValue+\"\")===this.value){\n                return;\n            }\n\n            AppUtils.updateInputClass(selection);\n            d.setValue(d.parse(this.value));\n            self.dispatch.call(\"multi-criteria-updated\", self, d.name);\n\n        })\n            .on('focus', function(event, d) {\n                const i = inputSelection.nodes().indexOf(this);\n                temp[i].pristineVal = this.value;\n\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                let value = d.getValue();\n\n                this.value = value;\n                temp[i] = {};\n                d3.select(this).classed('invalid', d.validator && !d.validator.validate(this.value));\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n    }\n\n    updateDefinitions(definitionsSourceObject, readOnly, changeCallback) {\n        this.definitionsContainer.classed('sd-read-only', readOnly);\n        this.onDefinitionsCodeChanged = changeCallback;\n\n\n        let scopeType = 'global';\n        if (definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node'\n        }\n\n        this.definitionsScopeLabel.text(i18n.t(\"sidebarDefinitions.scope.\"+scopeType));\n\n        this.definitionsCode.node().value = definitionsSourceObject.code;\n        this.definitionsCode.classed('invalid', !!definitionsSourceObject.$codeError);\n        this.definitionsCode.attr('data-error-msg', definitionsSourceObject.$codeError);\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(definitionsSourceObject.expressionScope)});\n        this.definitionsEvaluatedValuesContainer.html(html);\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node())\n    }\n\n    updateDiagramDetails() {\n        this.diagramTitle.node().value = this.app.config.title;\n        AppUtils.updateInputClass(this.diagramTitle);\n        this.diagramDescription.node().value = this.app.config.description;\n        AppUtils.updateInputClass(this.diagramDescription);\n        AppUtils.autoResizeTextarea(this.diagramDescription.node())\n    }\n\n    displayObjectProperties(object) {\n        this.updateObjectPropertiesView(object);\n    }\n\n    hideObjectProperties() {\n\n        this.container.select('#object-properties').classed('visible', false);\n        this.container.selectAll('div.child-object').remove();\n\n    }\n\n    updateObjectPropertiesView(object) {\n        this.dispatch.on(\".recomputed\", null); //remove all callbacks for recomputed event\n        if (!object) {\n            this.hideObjectProperties();\n            return;\n        }\n\n        var objectProps = this.objectProps = this.container.select('#object-properties').classed('visible', true);\n        var headerText = Sidebar.getHeaderTextForObject(object);\n        objectProps.select('.header').html(headerText);\n\n        var fieldList = this.getFieldListForObject(object);\n        this.updateObjectFields(object, fieldList, objectProps.select('.content .main-properties'));\n\n\n        this.updateObjectChildrenProperties(object);\n\n    }\n\n    updateObjectChildrenProperties(object) {\n        var self = this;\n        var childObjects = this.getChildObjectList(object);\n        var objectType = Sidebar.getObjectType(object);\n\n        var childPropsSelector = this.objectProps.select('.content .children-properties');\n\n        childPropsSelector.classed('visible', childObjects.length);\n\n        childPropsSelector.select('.children-properties-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.header'));\n        var childrenContent = childPropsSelector.select('.children-properties-content');\n        var children = childrenContent.selectAll('div.child-object').data(childObjects, (d, i)=> d.id || i);\n        var childrenEnter = children.enter().appendSelector('div.child-object');\n        var childrenMerge = childrenEnter.merge(children);\n\n        childrenMerge.each(updateChildObjectProperties);\n\n        children.exit().remove();\n\n        function updateChildObjectProperties(child, i) {\n            var container = d3.select(this);\n            container.selectOrAppend('div.child-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.child.header', {number: i + 1}));\n\n            var fieldList = self.getFieldListForObject(child);\n            self.updateObjectFields(child, fieldList, container.selectOrAppend('div.field-list'))\n        }\n    }\n\n    static getObjectType(object) {\n        if (object instanceof model.Node) {\n            return 'node';\n        }\n        if (object instanceof model.Edge) {\n            return 'edge';\n        }\n        if (object instanceof model.Text) {\n            return 'text';\n        }\n        return '';\n    }\n\n    static getHeaderTextForObject(object) {\n        if (object instanceof model.Node) {\n            return i18n.t('objectProperties.header.node.' + object.type);\n        }\n        if (object instanceof model.Edge) {\n            return i18n.t('objectProperties.header.edge');\n        }\n        if (object instanceof model.Text) {\n            return i18n.t('objectProperties.header.text');\n        }\n        return '';\n    }\n\n    getChildObjectList(object) {\n        if (object instanceof model.Node) {\n            return object.childEdges.sort((a, b)=>a.childNode.location.y - b.childNode.location.y);\n        }\n        if (object instanceof model.Edge) {\n            return [];\n        }\n        return [];\n    }\n\n    getFieldListForObject(object) {\n        var self = this;\n\n        if (object instanceof model.Node) {\n            return [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                })\n            ]\n        }\n        if (object instanceof model.Edge) {\n            let multipleCriteria = this.app.isMultipleCriteria();\n            var list = [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                }),\n                new ObjectInputField(object, {\n                    name: 'payoff',\n                    path: 'payoff[' + (self.app.currentViewMode.payoffIndex || 0) + ']',\n                    label: multipleCriteria ? self.app.dataModel.payoffNames[0] : undefined,\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                })\n\n\n            ];\n\n            if(multipleCriteria) {\n                list.push(new ObjectInputField(object, {\n                    name: 'payoff2',\n                    path: 'payoff[1]',\n                    label: self.app.dataModel.payoffNames[1],\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                }));\n            }\n\n            if (object.parentNode instanceof model.ChanceNode) {\n                list.push(new ObjectInputField(object, {\n                    name: 'probability',\n                    type: 'text',\n                    validator: new ProbabilityInputValidator(self.app.expressionEngine)\n                }))\n            }\n            return list;\n\n        }\n        if (object instanceof model.Text) {\n            return [new ObjectInputField(object, {\n                name: 'value',\n                type: 'textarea'\n            })]\n        }\n\n        return [];\n    }\n\n    updateObjectFields(object, fieldList, container) {\n        var self = this;\n\n        var fields = container.selectAll('div.object-field').data(fieldList);\n        var temp = {};\n        var fieldsEnter = fields.enter().appendSelector('div.object-field');\n        var fieldsMerge = fieldsEnter.merge(fields);\n\n        fieldsMerge.each(function (d, i) {\n            var fieldSelection = d3.select(this);\n            fieldSelection.html(\"\");\n\n            var input;\n            if (d.type == 'textarea') {\n                input = fieldSelection.append('textarea').attr('rows', 1);\n            } else {\n                input = fieldSelection.append('input');\n            }\n            input.classed('sd-input', true);\n\n            fieldSelection.appendSelector('span.bar');\n            fieldSelection.append('label');\n            fieldSelection.classed('input-group', true);\n        });\n\n        fieldsMerge.select('label')\n            .attr('for', d=>d.id)\n            .html(d=>d.label);\n\n        let inputSelection = fieldsMerge.select('.sd-input');\n        fieldsMerge.select('.sd-input')\n            .attr('type', d=>d.type === 'textarea' ? undefined : d.type)\n            .attr('name', d=>d.name)\n            .attr('id', d=>d.id)\n            .on('change keyup', function (event, d) {\n                const i = inputSelection.nodes().indexOf(this);\n                var prevValue = d.getValue();\n                var isValid = !d.validator || d.validator.validate(this.value, object, d.path);\n                object.setSyntaxValidity(d.path, isValid);\n\n                d3.select(this).classed('invalid', !object.isFieldValid(d.path));\n\n                if (event.type === 'change' && temp[i].pristineVal !== this.value) {\n                    self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                    if (d.onChange) {\n                        d.onChange(object, this.value, temp[i].pristineVal);\n                    }\n                }\n\n                if((prevValue+\"\")===this.value){\n                    return;\n                }\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.customOnInput) {\n                    d.customOnInput(object, this.value, temp[i].pristineVal)\n                } else {\n                    d.setValue(this.value);\n                    self.dispatch.call(\"object-updated\", self, object, d.path);\n                }\n            })\n            .on('focus', function(event, d) {\n                const i = inputSelection.nodes().indexOf(this);\n                temp[i].pristineVal = this.value;\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                this.value = d.getValue();\n                temp[i] = {};\n                if (d.validator && !d.validator.validate(this.value, object, d.path)) {\n                    d3.select(this).classed('invalid', true);\n                    object.setSyntaxValidity(d.path, false);\n                }else{\n                    object.setSyntaxValidity(d.path, true);\n                }\n\n                var _this = this;\n                var checkFieldStatus = () => {\n                    d3.select(_this).classed('invalid', !object.isFieldValid(d.path));\n                };\n                checkFieldStatus();\n\n                self.dispatch.on(\"recomputed.\"+object.id+\".\"+d.path, checkFieldStatus);\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n\n        fields.exit().remove();\n    }\n}\n\nclass ObjectInputField extends InputField{\n    //config object with fields: name, path, type, validator, options\n    constructor(object, config) {\n        super('object-' + object.id + '-field-' + config.name, config.name, config.type, config.label ? config.label : i18n.t(Sidebar.getObjectType(object) + '.' + config.name),\n            new PathValueAccessor(object, config.path || config.name), config.validator, config.options);\n        this.path = config.path || config.name;\n        this.onChange = config.onChange;\n    }\n}\n\n","import {Templates as TdTemplates} from \"sd-tree-designer\";\nimport {i18n} from './i18n/i18n'\nimport {Utils, log} from \"sd-utils\";\n\nexport class Templates extends TdTemplates{\n\n    //TODO automate\n    static about_de = require('./templates/about/de.html');\n    static about_en = require('./templates/about/en.html');\n    static about_fr = require('./templates/about/fr.html');\n    static about_it = require('./templates/about/it.html');\n    static about_pl = require('./templates/about/pl.html');\n\n    static toolbar = require('./templates/toolbar.html');\n    static layoutOptions = require('./templates/sidebar/layout_options.html');\n    static objectProperties = require('./templates/sidebar/object_properties.html');\n    static diagramDetailsBox = require('./templates/sidebar/diagram_details_box.html');\n    static evaluatedVariables = require('./templates/evaluated_variables.html');\n    static definitions = require('./templates/sidebar/definitions.html');\n    static multipleCriteria = require('./templates/sidebar/multiple_criteria.html');\n    static sidebar = require('./templates/sidebar/sidebar.html');\n    static settingsDialog = require('./templates/settings_dialog.html');\n    static settingsDialogFormGroup = require('./templates/settings_dialog_form_group.html');\n    static inputGroup = require('./templates/input_group.html');\n    static selectInputGroup = require('./templates/select_input_group.html');\n    static help = require('./templates/help.html');\n    static aboutDialog = require('./templates/about_dialog.html');\n    static definitionsDialog = require('./templates/definitions_dialog.html');\n    static sensitivityAnalysisDialog = require('./templates/sensitivity_analysis_dialog.html');\n    static operationDialog = require('./templates/operation_dialog.html');\n    static jobParametersBuilder = require('./templates/jobs/job_parameters_builder.html');\n    static jobParameter = require('./templates/jobs/job_parameter.html');\n    static leagueTableDialog = require('./templates/league_table_dialog.html');\n    static loadingIndicator = require('./templates/loading_indicator.html');\n    static fullscreenPopup = require('./templates/fullscreen_popup.html');\n    static warningMessage = require('./templates/warning_message.html');\n    static main = require('./templates/main.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n}\n\n\n\n\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (gebaut <%= buildTimestamp%>)</strong><br/>Open Source Entscheidungsbaum Software.\\n</p>\\n<p>\\n<strong>Zitierung:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Projektteam:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (Projektleiter)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (Stellvertretender Projektleiter)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (Designer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (Entwickler)</li>\\n        <li>Anna Wiertlewska (Projekt Unterstützung)</li>\\n        <li>Marcin Czupryna (Tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Das Projekt wird von Decision Support and Analysis Division, Warsaw School of Economics entwickelt.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions ist ein gemeinschaftsgetriebenes Projekt. Sollten Sie es für Ihre Untericht, Forschung oder jede andere Aktivität, die Sie mit uns teilen möchten verwenden, wir würden uns freuen, einen Link zu Ihren Aktivitäten zu der <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Gemeinschaft</a> Seite hinzufügen zu können.\\n</p>\\n<p>\\n    Software wird als Teil von <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Projekt entwickelt. Dieses Projekt hat      Mittel aus dem Horizon 2020 (Forschungs- und Innovationsprogramm der Europäischen Union) im Rahmen der Finanzhilfevereinbarung Nr 645860 erhalten. Ziel dieses Projektes ist es, eine transparente Kommunikation zwischen der öffentlichen Verwaltung und den Bürgern über das Thema, öffentliche Daten und Entscheidungsprozesse zu unterstützen. \\n</p>\\n<p>\\n    Alle Quelldateien werden unter den Bedingungen der GNU Lesser General Public License Version 3 lizenziert.\\n</p>\\n<p>\\n    Für weitere Informationen besuchen Sie bitte, unsere Website unter <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>A free and open source decision tree software.\\n</p>\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Project team:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (deputy project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentalist)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    The project is developed at Decision Support and Analysis Division, Warsaw School of Economics.<br/>\\n    Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions is a community-driven project, so if you use it for teaching, research or any other activity that you would be willing to share please let us know. We would be glad to add a link to your activities on <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a> page.\\n</p>\\n<p>\\n    Software is developed as a part of <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Project that has\\n    received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No\\n    645860. Its aim is to allow a transparent communication between public administration and citizens regarding public\\n    data about decision making processes performed by public administration.\\n</p>\\n<p>\\n    All the source files are licensed under the terms of the GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    For more information visit our website at <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>Un logiciel libre et open source pour faire son propre arbre de décision.\\n</p>\\n\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Equipe du projet:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (chef de projet)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (chef de projet adjoint)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (développeur)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentaliste)</li>\\n\\t<li>Marcin Czupryna (testeur)</li>\\n    </ul>\\n</p>\\n<p>\\n    Le projet est conçu et développé par la Division de l'aide à la décision et de l'analyse, à l'École d'économie de Varsovie. <br/>Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions est un projet communautaire, donc si vous l'utilisez pour l'enseignement, la recherche ou toute autre activité que vous aimeriez partager, \\n    faites-le nous savoir. Nous serions heureux d'ajouter un lien vers vos activités sur le site web de \\n    <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>  \\n    Le logiciel est développé dans le cadre du projet <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a>, \\n    financé par le programme de recherche et d'innovation Horizon 2020 de l'Union Européenne dans le cadre de l'accord de subvention n° 645860. \\n    Son objectif est permettre une communication transparente entre l'administration publique et les citoyens \\n    concernant les données publiques (Open Data) et la prise de décision des administrations.  \\n</p>\\n<p>\\n    Tous les fichiers source sont sous licence GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    Pour plus d'informations, visitez notre site web à <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (construzione <%= buildTimestamp%>)</strong><br/>\\n    Un Software Open Source Free per gestire alberi di decisione.\\n</p>\\n\\n<p>\\n<strong>Citazione:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Team di progetto:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (vice project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (sviluppo)</li>\\n        <li>Marcin Czupryna (test)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (tester)</li>\\n        <li>Anna Wiertlewska (documentazione)</li>\\n    </ul>\\n</p>\\n<p>\\n    Il progetto è sviluppato presso la Divisione “Supporto alla decisione ed Analisi” della Scuola di Economia dell’Università di Varsavia. <br/>Contatto:\\n    silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\nSilverDecision è un Progetto basato su di una Comunità di sviluppo, se lo utilizzi a scopo di insegnamento, ricerca o altra attività che vorresti rendere nota tienici informati. Saremmo lieti di aggiungere un <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">link</a> alla tua attività.\\n</p>\\n<p>\\n    Il software è sviluppato nell’ambito del progetto <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> \\n    finanziato dal programma di ricerca ed innovazione H2020 dell’ Unione Europea (contratto n. 645860). \\n    Scopo del progetto è quello di permettere una comunicazione trasparente tra Pubblica Amministrazione e cittadini \\n    riguardo ai dati pubblici ed ai processi di decisione portati avanti dalla stessa Pubblica Amministrazione.    \\n</p>\\n<p>\\n    Tutti i codici sorgente sono rilasciati secondo i termini della licenza “GNU Lesser General Public License version 3\\\".\\n</p>\\n<p>\\n    Per maggiori informazioni visita il sito <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>\\n    Oprogramowanie do analizy drzew decyzyjnych typu Free Open Source.\\n</p>\\n\\n<p>\\n<strong>Cytowanie:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Zespół projektowy:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (manager projektu)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (zastępca managera projektu)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (projektant)</li>\\n        <li>Anna Wiertlewska (dokumentalistka)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Projekt jest realizowany w Zakładzie Wspomagania i Analizy Decyzji w Szkole Głównej Handlowej w Warszawie.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    Rozwój SilverDecisions zależy od potrzeb użytkowników. W związku z tym jeśli wykorzystujesz je do nauczania, badań lub innych aktywności, o których zechcesz nam powiedzieć prosimy o kontakt. Byłoby nam bardzo miło, jeśli moglibyśmy dodać informację o Twoich aktywnościach na stronie <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>\\n<p>\\n    Oprogramowanie jest rozwijane w ramach projektu <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> (<em>Raising\\n    Open and User-friendly Transparency-Enabling Technologies for Public Administrations</em>),\\n    który jest finansowany ze środków Europejskiego Programu w Zakresie Badań Naukowych i Innowacji Horizon 2020 na\\n    podstawie umowy o dotację nr 645860. Celem projektu ROUTE-TO-PA jest umożliwienie przejrzystej komunikacji pomiędzy\\n    administracją publiczną a mieszkańcami w zakresie publicznych danych dotyczących procesu podejmowania przez\\n    administracje publiczne decyzji.\\n</p>\\n<p>\\n    Wszystkie pliki źródłowe są licencjonowane zgodnie ze słabszą powszechną licencją publiczną GNU (GNU Lesser General Public License version 3).\\n</p>\\n<p>\\n    Więcej informacji można znaleźć na stronie internetowej: <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<div id=\\\"sd-about-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"aboutDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <% if ( [\\\"de\\\", \\\"en\\\", \\\"fr\\\", \\\"it\\\", \\\"pl\\\"].indexOf(lng) !== -1) { %>\\n                <%= include('about_'+lng, variables) %>\\n            <% } else { %>\\n                <%= include('about_en', variables) %>\\n            <% } %>\\n\\n            <%= include('help', variables) %>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-definitions-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"definitionsDialog.title\\\")%>: <span class=\\\"sd-definitions-dialog-scope-label\\\"></span></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"definitions-form\\\">\\n                <div class=\\\"input-group\\\">\\n                    <textarea id=\\\"sd-definitions-dialog-definitions-code\\\" name=\\\"sd-definitions-code\\\"></textarea>\\n                    <span class=\\\"bar\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"evaluated-variables-preview\\\">\\n                <h3><%= i18n.t('definitionsDialog.evaluatedVariables')%>:</h3>\\n                <div id=\\\"sd-definitions-dialog-variable-values\\\"></div>\\n            </div>\\n            <div class=\\\"action-buttons\\\">\\n                <button id=\\\"sd-definitions-dialog-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('definitionsDialog.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<table class=\\\"sd-evaluated-variables\\\">\\n    <% for(i=0; i<scopeVariables.length; ++i) { %>\\n    <tr>\\n        <td><%= scopeVariables[i].key %></td>\\n        <td>=</td>\\n        <td><%= scopeVariables[i].value %></td>\\n    </tr>\\n    <% } %>\\n</table>\\n\";\n","module.exports = \"<div class=\\\"sd-fullscreen-popup\\\">\\n    <div class=\\\"sd-popup-header\\\">\\n        <span class=\\\"sd-close-popup\\\"><i class=\\\"material-icons\\\">close</i></span>\\n        <h2><%= title %></h2>\\n    </div>\\n\\n    <div class=\\\"sd-popup-body\\\">\\n        <%= body %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div>\\n    <h3><%= i18n.t(\\\"help.header\\\")%></h3>\\n    <p>\\n        <%= i18n.t(\\\"help.mouse.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.mouse.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.3\\\")%></li>\\n        </ul>\\n    </p>\\n    <p>\\n        <%= i18n.t(\\\"help.keyboard.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.keyboard.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.3\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.4\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.5\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.6\\\")%></li>\\n        </ul>\\n    </p>\\n    <p><%= i18n.t(\\\"help.docs\\\")%></p>\\n</div>\\n\";\n","module.exports = \"<input id=\\\"<%= id %>\\\" type=\\\"<%= type %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"\\n\";\n","module.exports = \"<div class=\\\"sd-job-parameters-builder\\\">\\n\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-league-table-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"leagueTableDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-league-table-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-league-table-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-league-table-action-buttons\\\">\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('leagueTableDialog.buttons.downloadCsv')%></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-loading-indicator\\\">\\n    <div></div>\\n    <div class=\\\"sd-spinner\\\" title=\\\"loading...\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"silver-decisions\\\" tabindex=\\\"0\\\">\\n    <%= include('toolbar', variables) %>\\n    <div id=\\\"main-region\\\">\\n        <%= include('sidebar', variables) %>\\n        <div id=\\\"tree-designer-container\\\"></div>\\n    </div>\\n    <input type=\\\"file\\\" style=\\\"display:none\\\" id=\\\"sd-file-input\\\" accept=\\\".json\\\"/>\\n    <%= include('settingsDialog', variables) %>\\n    <%= include('aboutDialog', variables) %>\\n    <%= include('definitionsDialog', variables) %>\\n    <%= include('sensitivityAnalysisDialog', variables) %>\\n    <%= include('leagueTableDialog', variables) %>\\n    <%= include('operationDialog', variables) %>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-operation-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <h2 class=\\\"sd-modal-header-title\\\"><%= i18n.t(\\\"operationDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-operation-job-configuration\\\">\\n                <div class=\\\"sd-job-select-input-group input-group\\\"></div>\\n                <%= include('jobParametersBuilder', variables) %>\\n            </div>\\n            <div class=\\\"sd-operation-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n\\n            <div class=\\\"sd-operation-action-buttons\\\">\\n                <button class=\\\"sd-run-job-button\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.runJob')%></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<select id=\\\"<%= id %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n    <% for(i=0; i<options.length; ++i) { %>\\n    <option value=\\\"<% if (options[i].value !== undefined){ %><%= options[i].value %><%} else { %><%= options[i] %><%}%>\\\"><% if (options[i].label !== undefined){ %><%= options[i].label %><%} else { %><%= options[i] %><%}%></option>\\n    <% } %>\\n</select>\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-sensitivity-analysis-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"sensitivityAnalysisDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-sensitivity-analysis-job-configuration\\\">\\n                <div class=\\\"sd-job-select-input-group input-group\\\"></div>\\n                <%= include('jobParametersBuilder', variables) %>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-sensitivity-analysis-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-action-buttons\\\">\\n                <button class=\\\"sd-terminate-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.terminateJob')%></button>\\n                <button class=\\\"sd-stop-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.stopJob')%></button>\\n                <button class=\\\"sd-resume-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.resumeJob')%></button>\\n                <button class=\\\"sd-back-button  sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.back')%></button>\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.downloadCsv')%></button>\\n                <button class=\\\"sd-clear-button \\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.clear')%></button>\\n                <button class=\\\"sd-run-job-button\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.runJob')%></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-settings-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"settingsDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <form id=\\\"sd-settings-form\\\">\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"header\\\">\\n    <h4><%= i18n.t(\\\"settingsDialog.\\\"+name+\\\".title\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </h4>\\n</div>\\n<div class=\\\"sd-form-group-content\\\">\\n    <div class=\\\"sd-form-group-inputs\\\"></div>\\n    <div class=\\\"sd-form-group-child-groups\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar-definitions\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"sidebarDefinitions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-variables-scope\\\">\\n            <div class=\\\"sd-variables-scope-label\\\"><%= i18n.t('sidebarDefinitions.scope.label')%></div>\\n            <div class=\\\"sd-variables-scope-value\\\"></div>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea rows=\\\"1\\\" id=\\\"sd-sidebar-definitions-code\\\" type=\\\"text\\\" name=\\\"sidebar-definitions-code\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"sd-sidebar-definitions-code\\\"><%= i18n.t(\\\"sidebarDefinitions.code\\\") %></label>\\n        </div>\\n        <div class=\\\"evaluated-variables-preview\\\">\\n            <div class=\\\"evaluated-variables-preview-header\\\">\\n                <%= i18n.t('sidebarDefinitions.evaluatedVariables')%>\\n            </div>\\n            <div id=\\\"sd-sidebar-definitions-evaluated-values\\\"></div>\\n        </div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-sidebar-definitions-open-dialog-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.openDialog')%>\\\"><i class=\\\"material-icons\\\">open_in_new</i></button>\\n            <button id=\\\"sd-sidebar-definitions-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"diagram-details-box\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"diagramDetails.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"diagram-title\\\" type=\\\"text\\\" name=\\\"diagram-title\\\">\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-title\\\"><%= i18n.t(\\\"diagramDetails.title\\\") %></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea id=\\\"diagram-description\\\" name=\\\"diagram-description\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-description\\\"><%= i18n.t(\\\"diagramDetails.description\\\") %></label>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"layout-options\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"layoutOptions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-horizontal\\\" name=\\\"margin-horizontal\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-horizontal\\\"><%= i18n.t(\\\"layoutOptions.marginHorizontal\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-vertical\\\" name=\\\"margin-vertical\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-vertical\\\"><%= i18n.t(\\\"layoutOptions.marginVertical\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"node-size\\\" name=\\\"node-size\\\" type=\\\"range\\\" min=\\\"20\\\" max=\\\"60\\\" step=\\\"5\\\"/>\\n            <label for=\\\"node-size\\\"><%= i18n.t(\\\"layoutOptions.nodeSize\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"edge-slant-width-max\\\" name=\\\"edge-slant-width-max\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"edge-slant-width-max\\\"><%= i18n.t(\\\"layoutOptions.edgeSlantWidthMax\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"sd-svg-scale\\\" name=\\\"svg-scale\\\" type=\\\"range\\\" min=\\\"0.2\\\" max=\\\"3\\\" step=\\\"0.1\\\"/>\\n            <label for=\\\"sd-svg-scale\\\"><%= i18n.t(\\\"layoutOptions.scale\\\")%></label>\\n        </div>\\n        <div id=\\\"auto-layout-options\\\">\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-width\\\" name=\\\"grid-width\\\" type=\\\"range\\\" min=\\\"105\\\" max=\\\"300\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-width\\\"><%= i18n.t(\\\"layoutOptions.gridWidth\\\")%></label>\\n            </div>\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-height\\\" name=\\\"grid-height\\\" type=\\\"range\\\" min=\\\"55\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-height\\\"><%= i18n.t(\\\"layoutOptions.gridHeight\\\")%></label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-multiple-criteria\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"multipleCriteria.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-multiple-criteria-properties\\\"></div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-show-league-table-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.showLeagueTable')%>\\\"><i class=\\\"material-icons\\\">assignment</i></button>\\n            <button id=\\\"sd-flip-criteria-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.flip')%>\\\"><i class=\\\"material-icons\\\">swap_vert</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"object-properties\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"main-properties\\\"></div>\\n        <div class=\\\"children-properties\\\">\\n            <div class=\\\"children-properties-header\\\"></div>\\n            <div class=\\\"children-properties-content\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar\\\">\\n    <div id=\\\"sd-sidebar-inner\\\">\\n        <%= include('layoutOptions', variables) %>\\n        <%= include('diagramDetailsBox', variables) %>\\n        <%= include('definitions', variables) %>\\n        <%= include('multipleCriteria', variables) %>\\n        <%= include('objectProperties', variables) %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-toolbar\\\">\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"new-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.newDiagram')%>\\\"><i class=\\\"material-icons\\\">insert_drive_file</i></button>\\n        <button id=\\\"open-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.openDiagram')%>\\\"><i class=\\\"material-icons\\\">folder_open</i></button>\\n        <button id=\\\"save-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.saveDiagram')%>\\\"><i class=\\\"material-icons\\\">save</i></button>\\n    </div>\\n    <div id=\\\"export-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.export.label\\\")%></label>\\n        <button id=\\\"saveButton\\\"><%= i18n.t(\\\"toolbar.export.png\\\")%></button>\\n        <button id=\\\"saveButtonSvg\\\"><%= i18n.t(\\\"toolbar.export.svg\\\")%></button>\\n        <button id=\\\"saveButtonPdf\\\"><%= i18n.t(\\\"toolbar.export.pdf\\\")%></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.layout.label\\\")%></label>\\n        <button id=\\\"manualLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.manual\\\")%></button>\\n        <button id=\\\"treeAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.tree\\\")%></button>\\n        <button id=\\\"clusterAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.cluster\\\")%></button>\\n    </div>\\n    <div id=\\\"view-mode-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"view-mode-select\\\"><%= i18n.t(\\\"toolbar.viewMode.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"view-mode-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div id=\\\"objective-rule-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"objective-rule-select\\\"><%= i18n.t(\\\"toolbar.objectiveRule.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"objective-rule-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"undoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.undo')%>\\\"><i class=\\\"material-icons\\\">undo</i></button>\\n        <button id=\\\"redoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.redo')%>\\\"><i class=\\\"material-icons\\\">redo</i></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"sensitivity-analysis-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.sensitivityAnalysis')%>\\\"><i class=\\\"material-icons\\\">assessment</i></button>\\n        <button id=\\\"recompute-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.recompute')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        <button id=\\\"settings-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.settings')%>\\\"><i class=\\\"material-icons\\\">settings</i></button>\\n        <button id=\\\"about-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.about')%>\\\"><i class=\\\"material-icons\\\">info_outline</i></button>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-warning-message\\\">\\n    <i class=\\\"material-icons sd-icon\\\">warning</i>\\n    <div class=\\\"sd-warning-message-text\\\">\\n       <%= message %>\\n    </div>\\n</div>\\n\";\n","import {log, Utils} from \"sd-utils\";\nimport * as model from \"sd-model\";\n\nexport class TextsInterpolator {\n    app;\n\n    interpolatedDiagramTitle;\n    interpolatedDiagramDescription;\n\n    constructor(app) {\n        this.app = app;\n        this.dataModel = this.app.dataModel;\n    }\n\n    clearInterpolatedDisplayValues() {\n\n        this.dataModel.nodes.forEach(node => {\n            node.displayValue(\"name\", node.name);\n        });\n\n        this.dataModel.edges.forEach(edge => {\n            edge.displayValue(\"name\", edge.name);\n        });\n\n        this.dataModel.texts.forEach(text => {\n            text.$displayValue = text.value;\n        });\n\n        this.interpolatedDiagramTitle = null;\n        this.interpolatedDiagramDescription = null;\n    }\n\n    getImports(textInterpolationScope) {\n        const self = this;\n        let findOptimalEdges = function (node) {\n            return node.childEdges.filter(e => e.displayValue('optimal'));\n        };\n        let payoffFormat = function (value, index) {\n            return self.app.payoffNumberFormat[index || 0].format(value);\n        }\n        let probabilityFormat = function (value) {\n            return self.app.probabilityNumberFormat.format(value);\n        }\n        let getPayoff = (nodeOrEdge) => {\n            if (nodeOrEdge instanceof model.domain.Edge) {\n                return nodeOrEdge.displayValue(\"payoff\");\n            }\n            if (nodeOrEdge instanceof model.domain.TerminalNode) {\n                return nodeOrEdge.displayValue(\"aggregatedPayoff\");\n            }\n\n            return nodeOrEdge.displayValue(\"childrenPayoff\");\n        };\n        let getProbability = (nodeOrEdge) => {\n            if (nodeOrEdge instanceof model.domain.TerminalNode) {\n                return nodeOrEdge.displayValue(\"probabilityToEnter\");\n            }\n            if (nodeOrEdge instanceof model.domain.Edge) {\n                return nodeOrEdge.displayValue(\"probability\");\n            }\n\n            return null;\n        };\n\n        return {\n            math: function (expr) {\n                return self.app.expressionEngine.eval(expr, true, {...textInterpolationScope})\n            },\n            format: function (value, optionsOrMaxFractionDigits) {\n                const o = !Utils.isNumber(optionsOrMaxFractionDigits) ?\n                    optionsOrMaxFractionDigits :\n                    {\n                        style: 'decimal',\n                        minimumFractionDigits: 0,\n                        maximumFractionDigits: optionsOrMaxFractionDigits,\n                        useGrouping: false\n                    }\n\n                return new Intl.NumberFormat(self.app.config.format.locales, o).format(value);\n            },\n            mathFormat: function (value, options) {\n                return self.app.expressionEngine.format(value, options)\n            },\n            payoffFormat: payoffFormat,\n            probabilityFormat: probabilityFormat,\n            getPayoff: getPayoff,\n            printPayoff(nodeOrEdge, index) {\n                let p = getPayoff(nodeOrEdge);\n                if (Utils.isArray(p)) {\n                    index = index || 0;\n                    p = p[index];\n                }\n\n                return payoffFormat(p, index);\n\n            },\n            getProbability: getProbability,\n            printProbability: function (o) {\n                return probabilityFormat(getProbability(o))\n            },\n            optimalEdges: findOptimalEdges,\n            optimalEdge: function (node, index) {\n                index = index || 0;\n                let optimalList = findOptimalEdges(node);\n                return optimalList.length > index ? optimalList[index] : {name: '-'};\n            },\n            isOptimal: function (nodeOrEdge) {\n                return !!nodeOrEdge.displayValue('optimal');\n            }\n        };\n    }\n\n    updateInterpolatedDisplayValues(disableTextInterpolation = false) {\n        const self = this;\n        if (disableTextInterpolation) {\n            self.clearInterpolatedDisplayValues();\n            return;\n        }\n\n        const globalScope = self.createGlobalScope();\n\n\n        this.dataModel.nodes.forEach(node => {\n            const nodeInterpolationScope = self.createNodeTextInterpolationScope(node, globalScope);\n            node.displayValue(\"name\", TextsInterpolator.interpolateText(node.name, nodeInterpolationScope, self.getImports(nodeInterpolationScope), node));\n\n            node.childEdges.forEach(edge => {\n                const edgeTextInterpolationScope = TextsInterpolator.copyDisplayValues(edge, {...globalScope, ...node.expressionScope});\n                edge.displayValue(\"name\", TextsInterpolator.interpolateText(edge.name, edgeTextInterpolationScope, self.getImports(edgeTextInterpolationScope), edge));\n            });\n        });\n\n        const textInterpolationScope = {\n            ...globalScope\n        }\n\n        let textsImports = self.getImports(textInterpolationScope);\n        textsImports = {\n            ...textsImports,\n            payoff: textsImports.getPayoff\n        }\n\n        this.dataModel.texts.forEach(text => {\n            text.$displayValue = TextsInterpolator.interpolateText(text.value, textInterpolationScope, textsImports);\n        });\n\n        this.interpolatedDiagramTitle = TextsInterpolator.interpolateText(this.app.config.title, textInterpolationScope, textsImports);\n        this.interpolatedDiagramDescription = TextsInterpolator.interpolateText(this.app.config.description, textInterpolationScope, textsImports);\n\n    }\n\n    createGlobalScope() {\n        const self = this;\n        const globalObject = Utils.getGlobalObject();\n        const globalNames = Object.keys(globalObject);\n\n        const emptyGlobals = {}\n        globalNames.forEach(key => emptyGlobals[key] = undefined);\n\n        return {\n            ...emptyGlobals,\n            ...self.dataModel.expressionScope,\n            roots: self.dataModel.getRoots()\n        }\n    }\n\n    createNodeTextInterpolationScope(node, globalScope) {\n        let scope = {\n            node: node,\n            ...globalScope,\n            ...node.expressionScope\n        };\n\n        return TextsInterpolator.copyDisplayValues(node, scope, {\n            'childrenPayoff': 'payoff',\n            'aggregatedPayoff': 'payoff'\n        });\n    }\n\n    static copyDisplayValues(source, target, nameAliasMap) {\n        const booleanNames = ['optimal'];\n        source.$DISPLAY_VALUE_NAMES.forEach(n => {\n            let val = source.displayValue(n);\n\n            if (booleanNames.includes(n)) {\n                val = !!val;\n            }\n\n            if (val === undefined || val === null) {\n                return;\n            }\n            if (Utils.isArray(val) && val.length === 1) {\n                val = val[0];\n            }\n\n            target[n] = val;\n            if (nameAliasMap && nameAliasMap.hasOwnProperty(n) && !target.hasOwnProperty(nameAliasMap[n])) {\n                target[nameAliasMap[n]] = val;\n            }\n        });\n\n        return target;\n    }\n\n    static interpolateText(text, textInterpolationScope, imports, thisObj = {}) {\n        try {\n            const compiled = Utils.template(text, {'imports': imports});\n            return compiled.call(thisObj, textInterpolationScope);\n        } catch (exc) {\n            log.debug(`exception interpolating \"${text}\": ${exc}`)\n            return text;\n        }\n    }\n\n}\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\nimport {AppUtils} from './app-utils'\nimport {Exporter} from './exporter'\nimport {FileLoader} from './file-loader'\n\nexport class Toolbar{\n\n    app;\n    container;\n    hiddenClass = 'sd-hidden';\n    constructor(container, app){\n        this.app = app;\n        this.container = container;\n        this.initDiagramButtons();\n        this.initExportToolbarGroup();\n        this.initLayoutButtons();\n        this.initUndoRedoButtons();\n        this.initSettingsButton();\n        this.initAboutButton();\n        this.initSensitivityAnalysisButton();\n        this.initRecomputeButton();\n        this.initViewModeToolbarGroup();\n        this.initObjectiveRuleToolbarGroup();\n    }\n\n    initDiagramButtons(){\n\n\n        this.newDiagramButton = this.container.select('#new-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.newDiagram'))){\n                return;\n            }\n            this.app.newDiagram();\n        });\n        this.newDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.new);\n        this.openDiagramButton = this.container.select('#open-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.openDiagram'))){\n                return;\n            }\n            FileLoader.openFile(model=>{\n                this.app.openDiagram(model);\n            });\n\n\n        });\n        this.openDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.open);\n        this.saveDiagramButton = this.container.select('#save-diagram-button').on('click', ()=>{\n            this.app.saveToFile();\n        });\n        this.saveDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.save);\n    }\n\n\n\n    initLayoutButtons() {\n        var self = this;\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.onLayoutChanged(layout));\n        this.layoutButtons={};\n        this.layoutButtons['manual'] = this.container.select('#manualLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='manual'){\n                return;\n            }\n            self.app.treeDesigner.layout.disableAutoLayout();\n        });\n        this.layoutButtons['tree'] = this.container.select('#treeAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='tree'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('tree');\n        });\n        this.layoutButtons['cluster'] = this.container.select('#clusterAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='cluster'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('cluster');\n        });\n\n        this.updateLayoutButtons();\n    }\n\n    updateLayoutButtons() {\n        this.onLayoutChanged(this.app.treeDesigner.config.layout.type)\n    }\n\n    initSettingsButton(){\n        this.settingsButton = this.container.select('#settings-button').on('click', ()=>{\n            this.app.settingsDialog.open();\n        });\n    }\n\n    initAboutButton(){\n        this.aboutButton = this.container.select('#about-button').on('click', ()=>{\n            this.app.aboutDialog.open();\n        });\n    }\n\n    initRecomputeButton(){\n        this.recomputeButton = this.container.select('#recompute-button').on('click', ()=>{\n            this.app.recompute();\n        });\n    }\n\n    initSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton = this.container.select('#sensitivity-analysis-button').on('click', ()=>{\n            this.app.openSensitivityAnalysis();\n        });\n    }\n\n    updateSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton.attr(\"disabled\", this.app.isSensitivityAnalysisAvailable() ? null : 'disabled');\n    }\n\n\n    onLayoutChanged(layout){\n        Object.getOwnPropertyNames(this.layoutButtons).forEach(l=>{\n            this.layoutButtons[l].classed('active', false);\n        });\n        var button = this.layoutButtons[layout];\n        if(button){\n            button.classed('active', true);\n        }\n    }\n\n    initUndoRedoButtons() {\n        var self = this;\n        self.app.dataModel.undoRedoStateChangedCallback = ()=>this.onUndoRedoChanged();\n        this.undoButton = this.container.select('#undoButton').on('click', function () {\n            self.app.undo();\n        });\n        this.redoButton = this.container.select('#redoButton').on('click', function () {\n            self.app.redo();\n        });\n    }\n\n    onUndoRedoChanged() {\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n    }\n    updateUndoRedoButtons(){\n        this.undoButton.attr(\"disabled\", this.app.dataModel.isUndoAvailable() ? null : 'disabled');\n        this.redoButton.attr(\"disabled\", this.app.dataModel.isRedoAvailable() ? null : 'disabled');\n    }\n\n    update(){\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n        this.updateLayoutButtons();\n        this.updateViewModeValue();\n        this.updateObjectiveRuleOptions();\n        this.updateObjectiveRuleValue();\n    }\n\n    initExportToolbarGroup() {\n        this.container.select('#export-toolbar-group').classed(this.hiddenClass, !this.app.config.exports.show);\n        if(!this.app.config.exports.show){\n            return;\n        }\n        this.initExportToPngButton();\n        this.initExportSvgButton();\n        this.initExportPdfButton();\n\n    }\n    initExportToPngButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButton')\n            .on('click', () => Exporter.saveAsPng(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPng)\n    }\n\n    initExportSvgButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonSvg')\n            .on('click', () => Exporter.saveAsSvg(svg))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToSvg)\n    }\n\n    initExportPdfButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonPdf')\n            .on('click', () => Exporter.saveAsPdf(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPdf)\n    }\n\n    initObjectiveRuleToolbarGroup() {\n        var self = this;\n        this.objectiveRuleSelect = this.container.select('#objective-rule-select');\n\n        this.updateObjectiveRuleOptions()\n        this.updateObjectiveRuleValue();\n\n        this.objectiveRuleSelect.on('change', function(){\n            self.app.setObjectiveRule(this.value);\n        })\n    }\n\n    updateObjectiveRuleOptions(){\n        var rules = this.app.getObjectiveRules();\n        var options = this.objectiveRuleSelect.selectAll('option').data(rules);\n        options.exit().remove();\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.objectiveRule.options.'+d.name));\n    }\n\n    updateObjectiveRuleValue(){\n        this.objectiveRuleSelect.node().value = this.app.getCurrentObjectiveRule().name;\n    }\n\n    initViewModeToolbarGroup() {\n        var self = this;\n        this.viewModeSelect = this.container.select('#view-mode-select');\n        var rules = this.app.getViewModes();\n        var options = this.viewModeSelect.selectAll('option').data(rules);\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.viewMode.options.'+d.name));\n\n        this.updateViewModeValue();\n\n        this.viewModeSelect.on('change', function(){\n            self.app.setViewModeByName(this.value);\n        })\n    }\n\n    updateViewModeValue(){\n        this.viewModeSelect.node().value = this.app.getCurrentViewMode().name;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class NumberInputValidator {\n\n    constructor(min, max) {\n        this.min = min;\n        this.max = max;\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        if (!value.trim()) {\n            return false;\n        }\n\n        value = parseFloat(value);\n\n        if (!Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (this.min !== undefined && value < this.min) {\n            return false;\n        }\n\n        return !(this.max !== undefined && value > this.max);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PayoffInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        return this.expressionEngine.validate(value);\n    }\n\n}\n","export class ProbabilityInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n\n        if(this.expressionEngine.constructor.isHash(value)){\n            return true;\n        }\n\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        var scope = edge.parentNode.expressionScope;\n        return this.expressionEngine.validate(value, scope);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class RequiredInputValidator {\n\n    constructor() {\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        return !!value.trim();\n    }\n\n}\n","module.exports = {\"buildTimestamp\":1640620092486}\n"]}